[{"/Users/pulkitmittal/nft-bridge/NFTbridge/src/index.js":"1","/Users/pulkitmittal/nft-bridge/NFTbridge/src/theme.js":"2","/Users/pulkitmittal/nft-bridge/NFTbridge/src/App.js":"3","/Users/pulkitmittal/nft-bridge/NFTbridge/src/contexts/Web3Context.jsx":"4","/Users/pulkitmittal/nft-bridge/NFTbridge/src/pages/Home.jsx":"5","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Hero.jsx":"6","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Navbar.jsx":"7","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/Footer.jsx":"8","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormSection.jsx":"9","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/ConnectWallet.jsx":"10","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMapping.jsx":"11","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Preview.jsx":"12","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMTE.jsx":"13","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormETM.jsx":"14","/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/helpers.js":"15","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/ResultModal.jsx":"16","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/HexagonGraphic.jsx":"17","/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/erc721.js":"18","/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/erc1155.js":"19","/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/providers.js":"20","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/ErrorBox.jsx":"21","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/CheckConnection/CheckEthConnection.jsx":"22","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/CheckConnection/CheckMaticConnection.jsx":"23","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/Icons.jsx":"24","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Notification/Notification.jsx":"25","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Notification/NotificationItem.jsx":"26","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/ExitModal.jsx":"27"},{"size":655,"mtime":1643630005044,"results":"28","hashOfConfig":"29"},{"size":7862,"mtime":1643630005044,"results":"30","hashOfConfig":"29"},{"size":295,"mtime":1643630005036,"results":"31","hashOfConfig":"29"},{"size":3227,"mtime":1643630005037,"results":"32","hashOfConfig":"29"},{"size":1084,"mtime":1643630005044,"results":"33","hashOfConfig":"29"},{"size":2855,"mtime":1643631513126,"results":"34","hashOfConfig":"29"},{"size":7357,"mtime":1643630005036,"results":"35","hashOfConfig":"29"},{"size":5508,"mtime":1643630005037,"results":"36","hashOfConfig":"29"},{"size":6104,"mtime":1643630005036,"results":"37","hashOfConfig":"29"},{"size":2835,"mtime":1643630005036,"results":"38","hashOfConfig":"29"},{"size":4527,"mtime":1643630005036,"results":"39","hashOfConfig":"29"},{"size":2955,"mtime":1643630005037,"results":"40","hashOfConfig":"29"},{"size":8745,"mtime":1643630005036,"results":"41","hashOfConfig":"29"},{"size":12233,"mtime":1643630005036,"results":"42","hashOfConfig":"29"},{"size":2743,"mtime":1643630005045,"results":"43","hashOfConfig":"29"},{"size":3092,"mtime":1643630005037,"results":"44","hashOfConfig":"29"},{"size":2184,"mtime":1643630005037,"results":"45","hashOfConfig":"29"},{"size":1043,"mtime":1643630005045,"results":"46","hashOfConfig":"29"},{"size":1126,"mtime":1643630005045,"results":"47","hashOfConfig":"29"},{"size":7305,"mtime":1643630005045,"results":"48","hashOfConfig":"29"},{"size":535,"mtime":1643630005037,"results":"49","hashOfConfig":"29"},{"size":827,"mtime":1643630005036,"results":"50","hashOfConfig":"29"},{"size":2540,"mtime":1643630005036,"results":"51","hashOfConfig":"29"},{"size":1617,"mtime":1643630005037,"results":"52","hashOfConfig":"29"},{"size":1472,"mtime":1643630005037,"results":"53","hashOfConfig":"29"},{"size":3168,"mtime":1643630005037,"results":"54","hashOfConfig":"29"},{"size":7399,"mtime":1643630005036,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n64z5i",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"/Users/pulkitmittal/nft-bridge/NFTbridge/src/index.js",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/theme.js",["118","119"],"import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    formStyle: {\n      formContainer: {\n        padding: \"40px 26px\",\n      },\n      // input and label\n      inputContainer: {\n        marginBottom: \"30px\",\n        top: 0,\n        left: 0,\n\n        \"& input\": {\n          height: \"50px\",\n          borderRadius: \"6px\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid #C7CBD9\",\n          padding: \"0 15px\",\n          lineHeight: \"50px\",\n          fontSize: \"16px\",\n          fontWeight: \"500\",\n          width: \"100%\",\n          color: \"black\",\n\n          \"&:active\": {\n            border: \"1.5px solid #7533E2\",\n            outline: \"none\",\n          },\n          \"&:focus\": {\n            border: \"1.5px solid #7533E2\",\n            outline: \"none\",\n          },\n        },\n        \"& label\": {\n          fontSize: \"14px\",\n          fontWeight: \"700\",\n          color: \"#7533E2\",\n          marginLeft: \"3px\",\n          marginBottom: \"4px\",\n          display: \"block;\",\n\n          \"& span\": {\n            color: \"#515C72\",\n            fontSize: \"14px\",\n            fontWeight: \"normal\",\n          },\n        },\n      },\n      label: {\n        fontSize: \"14px\",\n        fontWeight: \"700\",\n        color: \"#7533E2\",\n        marginLeft: \"3px\",\n        marginBottom: \"4px\",\n        marginTop: 0,\n        display: \"block;\",\n      },\n      // nft type checkbox\n      nftType: {\n        display: \"flex\",\n        padding: \"5px\",\n        backgroundColor: \"white\",\n        border: \"1px solid #C7CBD9\",\n        borderRadius: \"6px\",\n        height: \"50px\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        marginBottom: \"30px\",\n\n        \"& div\": {\n          width: \"calc(50% - 2.5px)\",\n          // backgroundColor: \"red\",\n          borderRadius: \"5px\",\n          textAlign: \"center\",\n          lineHeight: \"40px\",\n          fontWeight: \"600\",\n          fontSize: \"14px\",\n          position: \"relative\",\n          zIndex: \"2\",\n          color: \"#6E798F\",\n          transition: \"0.3s ease\",\n\n          \"&:first-child\": {\n            marginRight: \"5px\",\n          },\n        },\n\n        // slider\n        \"&::after\": {\n          content: \"' '\",\n          height: \"40px\",\n          width: \"calc(50% - 7.5px)\",\n          position: \"absolute\",\n          top: \"4px\",\n          left: \"5px\",\n          zIndex: 1,\n          backgroundColor: \"#3E3B51\",\n          borderRadius: \"5px\",\n          transition: \"0.3s ease\",\n        },\n      },\n      hiddenCheckbox: {\n        // checking whether checkbox is checked\n        \"&:checked + label\": {\n          // if checked, text colour for erc1155 will be white\n          \"& div\": {\n            \"&:nth-child(2)\": {\n              color: \"#fff\",\n              transition: \"0.3s ease\",\n            },\n          },\n          // moving slider\n          \"&::after\": {\n            left: \"calc(50% + 2.5px)\",\n            transition: \"0.3s ease\",\n          },\n        },\n        // if not checked, text colour for erc721 will be white\n        \"&:not(:checked) + label\": {\n          \"& div\": {\n            \"&:first-child\": {\n              color: \"#fff\",\n              transition: \"0.3s ease\",\n            },\n          },\n        },\n      },\n      // button\n      btnContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n      },\n      btn: {\n        height: \"44px\",\n        lineHeight: \"44px\",\n        padding: \"0 20px\",\n        border: \"1px solid #8247E5\",\n        borderRadius: \"4px\",\n        display: \"inline-flex\",\n        textTransform: \"capitalize\",\n        fontWeight: \"600\",\n        fontSize: \"16px\",\n        position: \"relative\",\n\n        \"&:first-child\": {\n          marginRight: \"14px\",\n        },\n\n        \"&:hover\": {\n          backgroundColor: \"#7533e2\",\n          color: \"white\",\n          borderColor: \"#7533e2\",\n        },\n      },\n      filled: {\n        backgroundColor: \"#8247E5\",\n        color: \"white\",\n      },\n      loading: {\n        position: \"absolute\",\n        display: \"block\",\n        margin: \"auto\",\n        left: 0,\n        right: 0,\n        color: \"white\",\n      },\n    },\n    modalStyle: {\n      modalContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"relative\",\n        padding: \"0 20px\",\n      },\n      modal: {\n        padding: \"20px\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"16px\",\n        width: \"500px\",\n        color: \"#000\",\n        outline: \"none\",\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      },\n      graphicSection: {\n        position: \"relative\",\n        height: \"94px\",\n        backgroundColor: \"#E3DEFF\",\n        borderRadius: \"8px\",\n        marginTop: \"40px\",\n\n        \"& .iconContainer\": {\n          height: \"150px\",\n          width: \"150px\",\n          position: \"absolute\",\n          top: \"-40px\",\n          left: 0,\n          right: 0,\n          margin: \"auto\",\n        },\n\n        \"& svg\": {\n          display: \"block\",\n          margin: \"auto\",\n          width: \"150px\",\n        },\n\n        \"& img\": {\n          position: \"absolute\",\n          margin: \"44px auto\",\n          left: 0,\n          right: 0,\n          display: \"block\",\n          width: \"62px\",\n        },\n      },\n      textSection: {\n        marginTop: \"26px\",\n\n        \"& p\": {\n          textAlign: \"center\",\n          color: \"#6E798F\",\n          fontWeight: \"600\",\n\n          \"& span\": {\n            fontWeight: \"600\",\n            display: \"block\",\n            wordBreak: \"break-all\",\n\n            \"& a\": {\n              color: \"inherit\",\n            },\n          },\n        },\n\n        \"& .credit\": {\n          display: \"flex\",\n          flexDirection: 'column',\n          fontSize: \"12px\",\n          marginTop: \"40px\",\n          padding: \"0 20px\",\n\n          \"& span\": {\n            fontWeight: \"normal\",\n\n            \"&:first-child\":{\n              marginBottom:'10px',\n              fontSize:'14px',\n            }\n          },\n        },\n      },\n\n      closeModal: {\n        height: \"30px\",\n        width: \"30px\",\n        backgroundColor: \"#FFDEDE\",\n        borderRadius: \"15px\",\n        position: \"absolute\",\n        top: \"17px\",\n        right: \"25px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n\n        \"&:hover\": {\n          backgroundColor: \"#ffc1c1\",\n        },\n      },\n    },\n    msgStyle: {\n      msgContainer: {\n        padding: \"0 26px\",\n        marginTop: \"30px\",\n      },\n      msg: {\n        // backgroundColor: \"#FFE8C3\",\n        backgroundColor: 'rgb(255 232 195 / 56%)',\n        borderRadius: \"6px\",\n        padding: \"20px\",\n        border: '1px solid #FFE8C3'\n      },\n      title: {\n        fontWeight: \"bold\",\n        color: \"#434240\",\n        margin: 0,\n      },\n      text: {\n        fontSize: \"14px\",\n        marginBottom: \"0\",\n      },\n      btn: {\n        fontSize: \"14px\",\n        backgroundColor: \"#3e3b51\",\n        color: \"white\",\n        textTransform: \"Capitalize\",\n        padding: \"5px 15px\",\n\n        \"&:hover\": {\n          backgroundColor: \"#000\",\n        },\n      },\n      metamaskLogo: {\n        width: 30,\n        marginRight: 5,\n      },\n    },\n    mui: {\n      container: {\n        maxWidth: \"1080px\",\n        margin: \"auto\",\n        padding: \"0\",\n        [\"@media (max-width:1120px)\"]: {\n          padding: \"0 20px\",\n        },\n        [\"@media (max-width:599px)\"]: {\n          padding: \"0 15px\",\n        },\n      },\n    },\n  },\n  typography: {\n    fontFamily: ['\"Nunito Sans\"', \"sans-serif\"].join(\",\"),\n\n    h1: {\n      fontWeight: 400,\n      fontSize: \"2.5rem\",\n      lineHeight: \"normal\",\n      letterSpacing: \"normal\",\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#7167D9\",\n    },\n  },\n});\n\nexport default theme;\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/App.js",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/contexts/Web3Context.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/pages/Home.jsx",["120","121"],"import React, { useEffect, useState } from \"react\";\n\n// import { useWeb3Context } from '../contexts/Web3Context';\n// components\nimport Navbar from \"../components/Navbar\";\nimport Hero from \"../components/Hero\";\nimport FormSection from \"../components/Form/FormSection\";\nimport Footer from \"../components/UI/Footer\";\n\n// web3 \nimport { useWeb3Context } from '../contexts/Web3Context';\n\nimport firebase from 'firebase';\nimport admin from 'firebase-admin';\nimport serviceAccount from \"../utils/serviceAccountKey.json\";\n\nconst Home = () => {\n  const { account } = useWeb3Context();\n\n  const [db, setDb] = useState('');\n  const [exitData, setExitData] = useState({});\n\n  useEffect(() => {\n    firebase.initializeApp({\n      credential: admin.credential.cert(serviceAccount),\n      databaseURL: \"https://nft-bridge.firebaseio.com\",\n      projectId: \"nft-bridge\"\n    });\n    const d = firebase.firestore();\n    setDb(d);\n  }, [])\n\n  return (\n    <>\n      <Navbar db={db} exitData={exitData} />\n      <Hero />\n      <FormSection db={db} />\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Hero.jsx",["122","123","124","125","126"],"import React from \"react\";\n\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// image/s\nimport bgImg from \"../images/bg-art.png\";\nimport graphic from \"../images/graphic.png\";\n\nconst Hero = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.hero}>\n      <Container className={classes.container}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <Typography variant=\"h1\" className={classes.title}>\n              <span>NFT</span> Bridge\n            </Typography>\n            <Typography variant=\"subtitle1\" className={classes.text}>\n            <h1><strong>(Withdrawls from Matic to ETH are suspended at the moment)</strong></h1>\n              Matic brings you a trustless two-way transaction channel between\n              Matic and Ethereum by introducing the cross-chain bridge with\n              Plasma and PoS security. With this users can transfer tokens\n              across matic without incurring third-party risks and market\n              liquidity limitations. The Plasma and PoS Bridge is available on\n              both Mumbai as well as Mainnet.\n              \n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <div className={classes.graphicContainer}>\n              <img src={graphic} alt=\"graphic\" className={classes.graphic} />\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.overrides.mui,\n  hero: {\n    backgroundColor: \"#7533E2\",\n    padding: \"70px 0\",\n    position: \"relative\",\n    overflow: \"hidden\",\n\n    \"&::after\": {\n      content: \"' '\",\n      top: \"-20px\",\n      left: 0,\n      position: \"absolute\",\n      height: \"calc(100% + 50px)\",\n      width: \"100%\",\n      //   backgroundColor: \"red\",\n      backgroundImage: `url(${bgImg})`,\n      backgroundSize: \"78%\",\n      opacity: \"0.15\",\n    },\n\n    [\"@media (max-width:959px)\"]: {\n      paddingBottom: \"120px\",\n    },\n  },\n  title: {\n    color: \"white\",\n    marginBottom: \"34px\",\n    \"& span\": {\n      fontWeight: \"700\",\n    },\n  },\n  text: {\n    fontSize: \"15px\",\n    fontWeight: \"500\",\n    color: \"#D8C4F7\",\n    lineHeight: \"23px\",\n    [\"@media (max-width:959px)\"]: {\n      marginBottom: \"50px\",\n    },\n  },\n  graphicContainer: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  graphic: {\n    width: \"300px\",\n    [\"@media (max-width:959px)\"]: {\n      width: \"100%\",\n      float: \"none\",\n    },\n    [\"@media (max-width:599px)\"]: {\n      display: \"block\",\n      margin: \"auto\",\n      width: \"300px\",\n    },\n    [\"@media (max-width:340px)\"]: {\n      display: \"block\",\n      margin: \"auto\",\n      width: \"100%\",\n    },\n  },\n}));\n\nexport default Hero;\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Navbar.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/Footer.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormSection.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/ConnectWallet.jsx",["127","128","129"],"import React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\n\nimport { useWeb3Context } from \"../contexts/Web3Context\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// import checkNetwork from '../hooks/checkNetwork';\n\nconst truncateAddress = (address) => {\n  return address.slice(0, 6) + \"...\" + address.slice(-4);\n};\n\nconst ConnectWallet = () => {\n  const classes = useStyles();\n  const { connectWeb3, disconnect, account } = useWeb3Context();\n  const [showLogout, setShowLogout] = useState(false);\n  // console.log(loading)\n\n  const toggleLogoutButton = () => {\n    showLogout ? setShowLogout(false) : setShowLogout(true);\n  };\n\n  const disconnectWallet = () => {\n    disconnect();\n    setShowLogout(false);\n  };\n\n  return (\n    <div className={classes.walletBtnContainer}>\n      <button\n        className={classes.walletBtn}\n        onClick={account ? toggleLogoutButton : connectWeb3}\n      >\n        <Blockies\n          className={`${classes.img} ${account ? \"green\" : \"red\"}`}\n          seed={account ? account : \"\"}\n        />\n        <div>{account ? truncateAddress(account) : \"Connect Wallet\"}</div>\n      </button>\n      {showLogout && (\n        <div onClick={disconnectWallet} className={classes.logout}>\n          Logout\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  walletBtnContainer: {\n    display: \"flex\",\n    position: \"relative\",\n  },\n  walletBtn: {\n    background: \"#e3e3e3\",\n    cursor: \"pointer\",\n    border: 0,\n    outline: \"none\",\n    borderRadius: \"18px\",\n    height: \"36px\",\n    lineHeight: \"36px\",\n    padding: \"0 18px 0 8px\",\n    display: \"flex\",\n    alignItems: \"center\",\n\n    [\"@media (max-width:599px)\"]: {\n      padding: 0,\n    },\n\n    \"&:hover\": {\n      backgroundColor: \"#000\",\n      color: \"white\",\n    },\n\n    \"& div\": {\n      [\"@media (max-width:599px)\"]: {\n        margin: 0,\n        display: \"none\",\n      },\n    },\n  },\n  img: {\n    borderRadius: \"12px\",\n    marginRight: 5,\n    height: \"24px !important\",\n    width: \"24px !important\",\n\n    \"&.green\": {\n      borderColor: \"green\",\n    },\n\n    \"&.red\": {\n      borderColor: \"red\",\n    },\n\n    [\"@media (max-width:599px)\"]: {\n      marginRight: 0,\n      height: \"36px !important\",\n      width: \"36px !important\",\n      borderRadius: \"20px\",\n      border: \"2px solid\",\n    },\n  },\n  logout: {\n    position: \"absolute\",\n    backgroundColor: \"#e3e3e3\",\n    color: \"black\",\n    width: \"100%\",\n    height: \"36px\",\n    lineHeight: \"36px\",\n    padding: \"0 18px\",\n    borderRadius: \"18px\",\n    top: \"40px\",\n    right: \"0\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    fontWeight: \"600\",\n\n    \"&:hover\": {\n      color: \"white\",\n      backgroundColor: \"#000\",\n    },\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"auto\",\n    },\n  },\n}));\n\nexport default ConnectWallet;\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMapping.jsx",["130","131"],"import React, { useState } from \"react\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, CircularProgress } from \"@material-ui/core\";\n// components\nimport ErrorBox from \"../UI/ErrorBox\";\nimport ResultModal from \"../UI/ResultModal\";\n\n// web3\n// import { useWeb3Context } from \"../../contexts/Web3Context\";\n// import { childChainPrimaryProvider } from '../utils/providers';\nimport { checkMapping, getMetadata } from \"../../utils/helpers\";\n\nconst FormMapping = () => {\n  const classes = useStyles();\n  const [triggerModal, setTriggerModal] = useState(false);\n\n  const openModal = () => {\n    setTriggerModal(true);\n  };\n\n  const [exitAddr, setExitAddr] = useState(\"\");\n  const [mapped, setMapped] = useState(null);\n  const [mappedAddr, setMappedAddr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [checkBox, setCheckBox] = useState({\n    checkedA: false,\n    checkedB: false,\n  });\n\n  const check = async (e) => {\n    e.preventDefault();\n    // console.log(\"here\", inj_provider)\n    try {\n      setLoading(true);\n      const res = await checkMapping(\n        exitAddr,\n        checkBox.checkedA,\n        checkBox.checkedB\n      );\n      console.log(res);\n      setMapped(res[0]);\n      setMappedAddr(res[1]);\n      setLoading(false);\n      openModal();\n    } catch (e) {\n      setLoading(false);\n      setError(e.message.substr(0, 70));\n      console.error(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    setCheckBox({ ...checkBox, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n      <ResultModal\n        mapping\n        triggerModal={triggerModal}\n        setTriggerModal={setTriggerModal}\n        data={{\n          address: exitAddr,\n          msg: \"\",\n          mapped: mapped,\n        }}\n      />\n      <form className={classes.formContainer} onSubmit={check}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <div className={classes.inputContainer}>\n              <label htmlFor=\"address\">Enter Address</label>\n              <input\n                type=\"text\"\n                placeholder=\"0xd52a861...\"\n                // className={`${errors.name ? classes.inputErr : \"\"}`}\n                value={exitAddr}\n                onChange={(e) => setExitAddr(e.target.value)}\n                required\n                name=\"address\"\n                id=\"address\"\n              />\n            </div>\n          </Grid>\n          <Grid item>\n            <div className={classes.flex}>\n              <input\n                type=\"checkbox\"\n                checked={checkBox.checkedA}\n                onChange={handleChange}\n                name=\"checkedA\"\n                id=\"root-chain\"\n                className={classes.checkbox}\n              />\n              <label htmlFor=\"root-chain\" className={classes.labelSmall}>\n                On Ethereum\n              </label>\n            </div>\n          </Grid>\n          <Grid item>\n            <div className={classes.flex}>\n              <input\n                type=\"checkbox\"\n                checked={checkBox.checkedB}\n                onChange={handleChange}\n                name=\"checkedB\"\n                id=\"testnet\"\n                className={classes.checkbox}\n              />\n              <label htmlFor=\"testnet\" className={classes.labelSmall}>\n                Is Testnet\n              </label>\n            </div>\n          </Grid>\n        </Grid>\n\n        <div className={classes.btnContainer}>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} ${classes.filled}`}\n            disabled={loading}\n          >\n            {loading && (\n              <CircularProgress className={classes.loading} size={24} />\n            )}\n            Check\n          </Button>\n        </div>\n\n        {/* error display */}\n        {error && <ErrorBox message={error} />}\n      </form>\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4px\",\n  },\n  checkbox: {\n    width: \"22px\",\n    height: \"22px\",\n    borderColor: \"#C7CBD9\",\n    marginRight: \"11px\",\n  },\n  labelSmall: {\n    fontSize: \"14px\",\n    color: \"#61677E\",\n    lineHeight: \"21px\",\n    fontWeight: \"600\",\n  },\n\n  btnContainer: {\n    marginTop: \"35px\",\n  },\n}));\n\nexport default FormMapping;\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Preview.jsx",["132","133"],"import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"@material-ui/icons\";\n\nconst Preview = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    setData(props.data);\n    console.log(\"destination\");\n  },[props.data]);\n\n  return (\n    <div className={classes.previewContainer}>\n      <div className={classes.previewImageContainer}>\n        <img\n          src={data.image}\n          alt=\"nft preview\"\n          className={`${classes.previewImage} overlay`}\n        />\n        <div className=\"hoverItem\">\n          <p className={classes.title}>{data.name}</p>\n          <a href={data.token_url}>\n            <div className={classes.link}>\n              <Link\n                style={{ fontSize: \"16px\", transform: \"rotateZ(-45deg)\" }}\n              />\n            </div>\n          </a>\n        </div>\n      </div>\n      <div className={classes.detailsContainer}>\n        <div className={classes.details}>\n          <h5>Contract Name</h5>\n          <p>{data.contract_name}</p>\n        </div>\n        <div className={classes.details}>\n          <h5>Description</h5>\n          <p>{data.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  previewContainer: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: \"16px\",\n    boxShadow: \"0px 2px 24px rgba(0, 0, 0, 0.1)\",\n    padding: \"20px\",\n  },\n  previewImageContainer: {\n    marginBottom: \"17px\",\n    height: \"180px\",\n    borderRadius: \"12px\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    backgroundColor: \"black\",\n    [\"@media (max-width:959px)\"]: {\n      height: \"240px\",\n    },\n\n    //   hover item\n    \"& .hoverItem\": {\n      position: \"absolute\",\n      bottom: \"-100%\",\n      left: \"0\",\n      padding: \"0 18px\",\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      // alignItems: 'flex-end',\n      transition: \"0.4s ease\",\n    },\n\n    \"&:hover .hoverItem\": {\n      bottom: \"18px\",\n    },\n\n    // preview image\n    \"&:hover .overlay\": {\n      opacity: 0.8,\n      transition: \"0.3s ease\",\n    },\n  },\n  previewImage: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n    // opacity: 0.5,\n  },\n\n  title: {\n    maxWidth: \"220px\",\n    fontSize: \"17px\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    textShadow: \"0px 2px 14px rgba(0, 0, 0, 0.5)\",\n    margin: 0,\n    lineHeight: \"22px\",\n  },\n  link: {\n    height: \"30px\",\n    width: \"30px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  details: {\n    \"&:first-of-type\": {\n      marginBottom: \"13px\",\n    },\n    color: \"#515C72\",\n    \"& h5\": {\n      fontSize: \"12px\",\n      fontSize: \"bold\",\n      margin: \"0 0 4px 0\",\n    },\n    \"& p\": {\n      fontSize: \"14px\",\n      margin: 0,\n    },\n  },\n}));\n\nexport default Preview;\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMTE.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormETM.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/helpers.js",["134"],"const Web3 = require(\"web3\");\nconst config = require(\"./config.json\")\nconst rootChainManager = require(\"./abi/rootChainManager\")\nconst axios = require('axios').default;\n\n\n/**\n * set isOnRootChain to true if input address is of root chain, else set to false (i.e if on child chain)\n * set isTestnet to true if input addzzress is of testnet chain, else set to flase (i.e if on mainnet)\n */\n// const APIKEY = 'ckey_93bdd057b68a49b0a8a05372a6a'\nexport const checkMapping = async (addressValue, isOnRootChain, isTestnet) => {\n\n    let web3;\n    let contract;\n\n    if (isTestnet === true) {\n        web3 = await new Web3(new Web3.providers.HttpProvider(config.GOERLI_RPC))\n\n        contract = await new web3.eth.Contract(\n            rootChainManager,\n            config.ROOTCHAIN_MANAGER_PROXY_GOERLI,\n        )\n\n    } else {\n        web3 = await new Web3(new Web3.providers.HttpProvider(config.ETH_RPC))\n\n        contract = await new web3.eth.Contract(\n            rootChainManager,\n            config.ROOTCHAIN_MANAGER_PROXY_MAINNET,\n        )\n    }\n\n    console.log(contract)\n\n    // console.log(rootChainManager);\n\n    if (isOnRootChain === true) {\n        const isMapped = await contract.methods.rootToChildToken(addressValue).call();\n        return [(isMapped !== \"0x0000000000000000000000000000000000000000\"), isMapped]\n    }\n    else if (isOnRootChain === false) {\n        const isMapped = await contract.methods.childToRootToken(addressValue).call();\n        return [(isMapped !== \"0x0000000000000000000000000000000000000000\"), isMapped]\n    }\n    else {\n        throw new Error(\"isOnRootChain_NOT_DEFINED\")\n    }\n\n}\n\n//test \n\nexport const getMetadata = async (chain_id, contract_address, token_id) => {\n    \n    const URL = await axios({\n        url: \"https://api.covalenthq.com/v1/chains/status/${chain_id}/tokens/${contract_address}/nft_metadata/${token_id}/?key={process.env.covalent_key}&nft=true\"});  \n    \n    const config = {\n        baseURL: URL,\n        headers: { Accept: \"application/json\" },\n    };\n\n    const request = await axios(config);\n\n    if (request.status === 200) {\n        console.log(\"API res\", request.data.data.items)\n        //  const metadata = request.data.data.items[0].nft_data[0].token_url;\n        //  const token_balance = request.data.data.items[0].nft_data[0].token_balance;\n        //  const image = request.data.data.items[0].nft_data[0].external_data?.image;\n\n        //  return { metadata, token_balance, image };\n        return request.data.data.items[0];\n        // check for undefined in fronted, fetch \"image\"\n    }\n    else if (request.status === 404 || request.status === 500) {\n        throw new Error(\"Not able to locate NFT\")\n    } else {\n        throw new Error(\"NFT not found\");\n    }\n}\n","/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/ResultModal.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/HexagonGraphic.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/erc721.js",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/erc1155.js",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/providers.js",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/ErrorBox.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/CheckConnection/CheckEthConnection.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/CheckConnection/CheckMaticConnection.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/UI/Icons.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Notification/Notification.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Notification/NotificationItem.jsx",[],"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/ExitModal.jsx",["135"],"import React, { useState } from \"react\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress, Modal } from \"@material-ui/core\";\nimport { BlurOnOutlined, Close } from \"@material-ui/icons\";\n\n// components\nimport ErrorBox from \"../UI/ErrorBox\";\n\n// images\nimport thumbsUp from \"../../images/thumbs-up.png\";\nimport HexagonGraphic from \"../UI/HexagonGraphic\";\n\n// web3\nimport { useWeb3Context } from \"../../contexts/Web3Context\";\nimport { rootChainPrimaryProvider } from \"../../utils/providers\";\nimport { exitERC721 } from \"../../utils/erc721\";\nimport { exitERC1155 } from \"../../utils/erc1155\";\n\nconst ExitModal = ({ triggerModal, setTriggerModal, data, db }) => {\n  const classes = useStyles();\n  const { inj_provider, providerChainId, account } = useWeb3Context();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState(data.burnedTxn);\n\n  const hideModal = () => {\n    setTriggerModal(false);\n  };\n\n  const exit = async (e) => {\n    console.log(\"Exit function called...\");\n    e.preventDefault();\n    let maticPOSClient;\n    try {\n      setLoading(true);\n      // create pos client insatnce\n      maticPOSClient = await rootChainPrimaryProvider(inj_provider);\n      console.log(\"got pos\", maticPOSClient);\n\n      // check if checkpointed\n      let isProcessed;\n      console.log(isProcessed);\n      try {\n        if (data.nft721) {\n          isProcessed = await maticPOSClient.isBatchERC721ExitProcessed(data.txn);\n        } else {\n          isProcessed = await maticPOSClient.isBatchERC1155ExitProcessed(data.txn);\n          let tx;\n          tx = await exitERC1155(maticPOSClient, data.txn);\n          console.log(tx);\n          // Update on Firebase \n          const snapshot = await db.collection('storeHash').doc(account);\n          const d = await snapshot.get();\n          const oldData = d.data();\n          const newArr = oldData.burnedTxn;\n          newArr[data.burnId] = tx\n          const docRef = db.collection(\"storeHash\").doc(account);\n          await docRef.update({\n            burnedTxn: newArr\n          });\n          setResult(tx);\n        }\n      } catch (e) {\n        console.log(e);\n        // checked do transaction\n        if (e.message === \"Log not found in receipt\") {\n          let tx;\n          if (data.nft721) {\n            tx = await exitERC721(maticPOSClient, data.txn);\n          } else {\n            tx = await exitERC1155(maticPOSClient, data.txn);\n          }\n          console.log(tx);\n\n          // Update on Firebase \n          const snapshot = await db.collection('storeHash').doc(account);\n          const d = await snapshot.get();\n          const oldData = d.data();\n          const newArr = oldData.burnedTxn;\n          newArr[data.burnId] = tx\n          const docRef = db.collection(\"storeHash\").doc(account);\n          await docRef.update({\n            burnedTxn: newArr\n          });\n\n          setResult(tx);\n        }\n        // Not checkpointed\n        else if (\n          e.message === \"Burn transaction has not been checkpointed as yet\"\n        ) {\n          console.log(\"not yet checkpointed\");\n          setError(e.message);\n        } else {\n          setError(\"Make sure you are on ETH or Goerli Network\");\n        }\n      }\n      setLoading(false);\n    } catch (e) {\n      setError(e.toString());\n      if (e.message === \"Cannot read property 'eth' of undefined\")\n        setError(\"Wallet not Connected\");\n      else if (\n        e.message.substr(0, 60) ===\n        \"execution reverted: RootChainManager: EXIT_ALREADY_PROCESSED\"\n      )\n        setError(\"EXIT ALREADY PROCESSED\");\n      else setError(e.message.substr(0, 70));\n      // console.log(e.message.substr(0, 63));\n      setLoading(false);\n    }\n  };\n\n\n  return (\n    <>\n      <Modal\n        open={triggerModal}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        className={classes.modalContainer}\n      >\n        <div\n          className={classes.modal}\n          style={{ paddingTop: \"20px\", paddingBottom: \"30px\" }}\n        >\n          <div className={classes.closeModal} onClick={hideModal}>\n            <Close style={{ fontSize: \"16px\" }} />\n          </div>\n          {!result && (\n            <form className={classes.notificationForm}>\n              <h3 className={classes.title}>Exit Transaction</h3>\n              <div className={classes.inputContainer}>\n                <label htmlFor=\"txn\">Transaction Hash</label>\n                <input\n                  type=\"string\"\n                  placeholder=\"0xE550A9B2A6B8e0F79C6E0397Ff7Bc2F6c0F...\"\n                  value={data.txn}\n                  required\n                  id=\"txn\"\n                  readOnly\n                  style={{ pointerEvents: \"none\" }}\n                />\n              </div>\n              {/* This input is hidden. */}\n              <div className={classes.inputContainer}>\n                <label>\n                  NFT Type - <span>{data.nft721 ? \"ERC721\" : \"ERC1155\"}</span>\n                </label>\n                <input type=\"checkbox\" hidden disabled />\n              </div>\n              <div className={classes.btnContainer}>\n                <Button\n                  className={`${classes.btn} ${classes.filled}`}\n                  disabled={loading}\n                  onClick={exit}\n                >\n                  {loading && (\n                    <CircularProgress\n                      className={`${classes.loading}`}\n                      size={24}\n                    />\n                  )}\n                  Exit\n                </Button>\n              </div>\n              {/* error display */}\n              {error && <ErrorBox message={error} />}\n            </form>\n          )}\n\n          {/* result */}\n          {result && (\n            <div className={classes.successMsg}>\n              <h3 className={classes.title} style={{ marginBottom: \"60px\" }}>\n                Exit Successfully\n              </h3>\n              <div className={classes.graphicSection}>\n                <div className=\"iconContainer\">\n                  <img src={thumbsUp} alt=\"thumb icon\" />\n                  <HexagonGraphic color=\"#1DBA2D\" />\n                </div>\n              </div>\n              <div\n                className={classes.textSection}\n                style={{ marginTop: \"30px\" }}\n              >\n                <p>\n                  Transaction hash:{\" \"}\n                  <span>\n                    <a\n                      href={providerChainId === 1 ? `https://etherscan.io/tx/${result}` : `https://goerli.etherscan.io/tx/${result}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {result}\n                    </a>\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n  purple: {\n    color: \"#7533E2\",\n  },\n  title: {\n    fontSize: \"20px\",\n    margin: \"0 0 30px 0\",\n    textAlign: \"center\",\n  },\n  successMsg: {\n    \"& img\": {\n      margin: \"44px auto\",\n      width: \"62px\",\n    },\n  },\n}));\n\nexport default ExitModal;\n",{"ruleId":"136","severity":1,"message":"137","line":319,"column":9,"nodeType":"138","messageId":"139","endLine":321,"endColumn":10,"fix":"140"},{"ruleId":"136","severity":1,"message":"141","line":322,"column":9,"nodeType":"138","messageId":"139","endLine":324,"endColumn":10,"fix":"142"},{"ruleId":"143","severity":1,"message":"144","line":18,"column":11,"nodeType":"145","messageId":"146","endLine":18,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":21,"column":20,"nodeType":"145","messageId":"146","endLine":21,"endColumn":31},{"ruleId":"136","severity":1,"message":"148","line":64,"column":5,"nodeType":"138","messageId":"139","endLine":66,"endColumn":6,"fix":"149"},{"ruleId":"136","severity":1,"message":"148","line":80,"column":5,"nodeType":"138","messageId":"139","endLine":82,"endColumn":6,"fix":"150"},{"ruleId":"136","severity":1,"message":"148","line":92,"column":5,"nodeType":"138","messageId":"139","endLine":95,"endColumn":6,"fix":"151"},{"ruleId":"136","severity":1,"message":"141","line":96,"column":5,"nodeType":"138","messageId":"139","endLine":100,"endColumn":6,"fix":"152"},{"ruleId":"136","severity":1,"message":"153","line":101,"column":5,"nodeType":"138","messageId":"139","endLine":105,"endColumn":6,"fix":"154"},{"ruleId":"136","severity":1,"message":"141","line":67,"column":5,"nodeType":"138","messageId":"139","endLine":69,"endColumn":6,"fix":"155"},{"ruleId":"136","severity":1,"message":"141","line":77,"column":7,"nodeType":"138","messageId":"139","endLine":80,"endColumn":8,"fix":"156"},{"ruleId":"136","severity":1,"message":"141","line":97,"column":5,"nodeType":"138","messageId":"139","endLine":103,"endColumn":6,"fix":"157"},{"ruleId":"143","severity":1,"message":"158","line":13,"column":24,"nodeType":"145","messageId":"146","endLine":13,"endColumn":35},{"ruleId":"143","severity":1,"message":"159","line":25,"column":10,"nodeType":"145","messageId":"146","endLine":25,"endColumn":20},{"ruleId":"136","severity":1,"message":"148","line":61,"column":5,"nodeType":"138","messageId":"139","endLine":63,"endColumn":6,"fix":"160"},{"ruleId":"161","severity":1,"message":"162","line":120,"column":7,"nodeType":"163","messageId":"164","endLine":120,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":57,"column":14,"nodeType":"167","messageId":"168","endLine":57,"endColumn":164},{"ruleId":"143","severity":1,"message":"169","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":24},"no-useless-computed-key","Unnecessarily computed property [\"@media (max-width:1120px)\"] found.","Property","unnecessarilyComputedProperty",{"range":"170","text":"171"},"Unnecessarily computed property [\"@media (max-width:599px)\"] found.",{"range":"172","text":"173"},"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","'setExitData' is assigned a value but never used.","Unnecessarily computed property [\"@media (max-width:959px)\"] found.",{"range":"174","text":"175"},{"range":"176","text":"175"},{"range":"177","text":"175"},{"range":"178","text":"173"},"Unnecessarily computed property [\"@media (max-width:340px)\"] found.",{"range":"179","text":"180"},{"range":"181","text":"173"},{"range":"182","text":"173"},{"range":"183","text":"173"},"'getMetadata' is defined but never used.","'mappedAddr' is assigned a value but never used.",{"range":"184","text":"175"},"no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","unexpected","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'BlurOnOutlined' is defined but never used.",[7392,7421],"\"@media (max-width:1120px)\"",[7473,7501],"\"@media (max-width:599px)\"",[1997,2025],"\"@media (max-width:959px)\"",[2286,2314],[2521,2549],[2606,2634],[2717,2745],"\"@media (max-width:340px)\"",[1680,1708],[1837,1865],[2157,2185],[1657,1685]]