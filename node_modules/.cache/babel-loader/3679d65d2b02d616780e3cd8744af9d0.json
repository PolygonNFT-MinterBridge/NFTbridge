{"ast":null,"code":"var _jsxFileName = \"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormETM.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CheckEthConnection from \"./CheckConnection/CheckEthConnection\"; // material ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, CircularProgress } from \"@material-ui/core\"; // components\n\nimport ErrorBox from \"../UI/ErrorBox\";\nimport ResultModal from \"../UI/ResultModal\"; // web3\n\nimport { useWeb3Context } from \"../../contexts/Web3Context\";\nimport { rootChainPrimaryProvider } from \"../../utils/providers\";\nimport { approveERC721, depositERC721 } from \"../../utils/erc721\";\nimport { approveERC1155, depositERC1155 } from \"../../utils/erc1155\";\nimport { getMetadata } from \"../../utils/helpers\";\nimport DummyERC721 from \"../../utils/abi/DummyERC721.json\";\nimport DummyERC1155 from \"../../utils/abi/DummyERC1155.json\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst FormETM = props => {\n  _s();\n\n  const classes = useStyles();\n  const [triggerModal, setTriggerModal] = useState(false);\n\n  const openModal = () => {\n    setTriggerModal(true);\n  };\n\n  const {\n    inj_provider,\n    providerChainId,\n    account\n  } = useWeb3Context();\n  const [loading, setLoading] = useState(false);\n  const [previewLoading, setPreviewLoading] = useState(false);\n  const [tokenAddr, setTokenAddr] = useState(\"\");\n  const [recieverAddr, setRecieverAddr] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const [tokenAmount, setTokenAmount] = useState(\"\");\n  const [isApproved, setIsApproved] = useState(false);\n  const [previewData, setPreviewData] = useState({\n    token_url: \"\",\n    image: \"\",\n    name: \"\",\n    contract_name: \"\",\n    token_id: \"\",\n    description: \"\"\n  });\n  const [checkBox, setCheckBox] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    previewData.token_id && props.sendDataToFormSection(previewData);\n  });\n  const [url, setUrl] = useState(\"https://goerli.etherscan.io/tx/\");\n  useEffect(() => {\n    if (providerChainId === 1) setUrl(\"http://etherscan.io/tx/\");else setUrl(\"https://goerli.etherscan.io/tx/\");\n  }, [providerChainId]);\n\n  const approve = async e => {\n    e.preventDefault();\n\n    try {\n      console.log(\"check approve\");\n\n      try {\n        setLoading(true);\n        let contract, res;\n\n        if (checkBox) {\n          contract = await new inj_provider.eth.Contract(DummyERC1155, tokenAddr); // operator - posERC721Predicate contract address\n\n          res = await contract.methods.isApprovedForAll(recieverAddr, \"0xB19a86ba1b50f0A395BfdC3557608789ee184dC8\");\n        } else {\n          // operator - posERC1155Predicate address \n          contract = await new inj_provider.eth.Contract(DummyERC721, tokenAddr);\n          res = await contract.methods.isApprovedForAll(recieverAddr, \"0x74D83801586E9D3C4dc45FfCD30B54eA9C88cf9b\");\n        }\n\n        res = await res.call();\n        console.log(\"isApproved\", res);\n\n        if (res) {\n          setIsApproved(true);\n          toast(\"Already Approved ✅\", {\n            type: \"success\"\n          });\n        } else {\n          // if not approved\n          let tx;\n\n          if (checkBox) {\n            const maticPOSClient = await rootChainPrimaryProvider(inj_provider, tokenAddr);\n            tx = await approveERC1155(maticPOSClient, tokenAddr);\n          } else {\n            const maticPOSClient = await rootChainPrimaryProvider(inj_provider, tokenAddr);\n            tx = await approveERC721(maticPOSClient, tokenAddr);\n          }\n\n          console.log(tx);\n          toast(\"Approved Successfully ✅\", {\n            type: \"success\"\n          });\n          setIsApproved(true);\n        }\n\n        setLoading(false);\n      } catch (e) {\n        setLoading(true);\n        console.error(e);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const deposit = async e => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      setLoading(true); // create pos client insatnce\n\n      const maticPOSClient = await rootChainPrimaryProvider(inj_provider, tokenAddr);\n      console.log(\"got pos client\", maticPOSClient); // filter token id\n\n      let arr = tokenId.split(\",\").map(function (item) {\n        return parseInt(item, 10);\n      });\n      console.log(arr); //  deposit\n\n      let tx;\n\n      if (!checkBox) {\n        tx = await depositERC721(maticPOSClient, tokenAddr, recieverAddr, arr);\n      } else {\n        console.log(\"token amount\", tokenAmount);\n        let amounts = tokenAmount.split(\",\").map(function (item) {\n          return parseInt(item, 10);\n        });\n        console.log(\"amount\", amounts);\n        tx = await depositERC1155(maticPOSClient, tokenAddr, recieverAddr, arr, amounts);\n      }\n\n      console.log(tx); // Update on Firebase \n\n      let oldData = {\n        txn: [],\n        nft721: [],\n        txnType: [],\n        burnedTxn: []\n      };\n      const snapshot = await props.db.collection('storeHash').doc(account);\n      const data = await snapshot.get(); // console.log(data.data());\n\n      if (data.data() !== undefined) {\n        oldData = data.data();\n      }\n\n      const docRef = props.db.collection(\"storeHash\").doc(account);\n      await docRef.set({\n        txn: [...oldData.txn, tx.transactionHash],\n        nft721: [...oldData.nft721, !checkBox],\n        txnType: [...oldData.txnType, 'deposit'],\n        burnedTxn: [...oldData.burnedTxn, '']\n      });\n      setLoading(false);\n      console.log(tx.transactionHash);\n      setResult(tx.transactionHash);\n      openModal();\n    } catch (e) {\n      console.error(e);\n      if (e.message === \"Cannot read property 'eth' of undefined\") setError(\"Wallet not Connected\");else if (e.message.substr(0, 64) === \"execution reverted: ERC721: operator query for nonexistent token\") setError(\"Incorrect token id, query for nonexistent token\");else if (e.message.substr(0, 61) === \"execution reverted: ERC721: transfer of token that is not own\") setError(\"Transferring a token which does not belong to connected wallet address.\");else if (e.message.substr(0, 56) === \"execution reverted: ERC721: transfer caller is not owner\") setError(\"Caller address is not approved. Refresh page to approve.\");else setError(e.message);\n      setLoading(false);\n    }\n  };\n\n  const preview = async e => {\n    e.preventDefault();\n    setPreviewLoading(true);\n\n    try {\n      // filter token id\n      let arr = tokenId.split(\",\").map(function (item) {\n        return parseInt(item, 10);\n      }); // console.log(arr);\n\n      const data = await getMetadata(providerChainId, tokenAddr, arr[0]);\n\n      if (data.nft_data[0]) {\n        const {\n          contract_name\n        } = data;\n        const {\n          token_url,\n          token_id,\n          external_data\n        } = data.nft_data[0];\n        setPreviewData({\n          token_url,\n          token_id,\n          contract_name,\n          image: external_data === null || external_data === void 0 ? void 0 : external_data.image,\n          name: external_data === null || external_data === void 0 ? void 0 : external_data.name,\n          description: external_data === null || external_data === void 0 ? void 0 : external_data.description\n        });\n      }\n\n      setPreviewLoading(false);\n    } catch (e) {\n      console.error(e.message);\n\n      if (e.message === \"Cannot read property 'nft_data' of undefined\") {\n        setError(\"Data for this NFT not found. Make sure you are on Eth or Goerli Network.\");\n      } else if (e.message === \"Request failed with status code 500\") {\n        setError(\"Data for this NFT not found. Make sure you are on Eth or Goerli Network.\");\n      } else setError(e.message.substr(0, 70));\n\n      setPreviewLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultModal, {\n      ethToMatic: true,\n      triggerModal: triggerModal,\n      setTriggerModal: setTriggerModal,\n      data: {\n        url: url,\n        addressTwo: result,\n        msg: \"Please wait. It takes 5-8 minutes to state sync with Polygon. Once state sync happens, you will get the tokens deposited on child chain at the given address.\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckEthConnection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.formContainer,\n      onSubmit: isApproved ? deposit : approve,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"token-address\",\n              children: \"Token Address (ETH)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\" // className={`${errors.name ? classes.inputErr : \"\"}`}\n              ,\n              value: tokenAddr,\n              onChange: e => setTokenAddr(e.target.value),\n              required: true,\n              name: \"token-address\",\n              id: \"token-address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"receiver-address\",\n              children: \"Receiver Address (Child Chain)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\" // className={`${errors.name ? classes.inputErr : \"\"}`}\n              ,\n              value: recieverAddr,\n              onChange: e => setRecieverAddr(e.target.value),\n              required: true,\n              name: \"receiver-address\",\n              id: \"receiver-address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"token-ids\",\n              children: [\"Token IDs \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"(without space, with commas)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"string\",\n              placeholder: \"1,2,3\" // className={`${errors.name ? classes.inputErr : \"\"}`}\n              ,\n              value: tokenId,\n              onChange: e => setTokenId(e.target.value),\n              required: true,\n              name: \"token-ids\",\n              id: \"token-ids\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.label,\n            children: \"NFT Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkBox,\n            onChange: e => setCheckBox(e.target.checked),\n            id: \"checkedA\",\n            hidden: true,\n            className: classes.hiddenCheckbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"checkedA\",\n            className: classes.nftType,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"ERC721\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"ERC1155\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), checkBox && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"token-amount\",\n              children: [\"Token Amount \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"(without space, with commas)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"string\",\n              placeholder: \"2,1,3\" // className={`${errors.name ? classes.inputErr : \"\"}`}\n              ,\n              value: tokenAmount,\n              onChange: e => setTokenAmount(e.target.value),\n              name: \"token-amount\",\n              id: \"token-amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: `${classes.loading} ${classes.purple}`,\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), isApproved ? 'Deposit' : 'Approve']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.btn} ${classes.filled}`,\n          disabled: previewLoading,\n          onClick: preview,\n          children: [previewLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: `${classes.loading}`,\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), \"Preview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorBox, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormETM, \"O5BLEe1FZxkCzOKJEZIC2/zbR9k=\", false, function () {\n  return [useStyles, useWeb3Context];\n});\n\n_c = FormETM;\nconst useStyles = makeStyles(theme => ({ // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n  purple: {\n    color: \"#7533E2\"\n  }\n}));\nexport default FormETM;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormETM\");","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormETM.jsx"],"names":["React","useState","useEffect","CheckEthConnection","makeStyles","Grid","Button","CircularProgress","ErrorBox","ResultModal","useWeb3Context","rootChainPrimaryProvider","approveERC721","depositERC721","approveERC1155","depositERC1155","getMetadata","DummyERC721","DummyERC1155","toast","configure","FormETM","props","classes","useStyles","triggerModal","setTriggerModal","openModal","inj_provider","providerChainId","account","loading","setLoading","previewLoading","setPreviewLoading","tokenAddr","setTokenAddr","recieverAddr","setRecieverAddr","tokenId","setTokenId","tokenAmount","setTokenAmount","isApproved","setIsApproved","previewData","setPreviewData","token_url","image","name","contract_name","token_id","description","checkBox","setCheckBox","error","setError","result","setResult","sendDataToFormSection","url","setUrl","approve","e","preventDefault","console","log","contract","res","eth","Contract","methods","isApprovedForAll","call","type","tx","maticPOSClient","deposit","arr","split","map","item","parseInt","amounts","oldData","txn","nft721","txnType","burnedTxn","snapshot","db","collection","doc","data","get","undefined","docRef","set","transactionHash","message","substr","preview","nft_data","external_data","addressTwo","msg","formContainer","inputContainer","target","value","label","checked","hiddenCheckbox","nftType","btnContainer","btn","purple","filled","theme","overrides","formStyle","modalStyle","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CheckEthConnection from \"./CheckConnection/CheckEthConnection\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, CircularProgress } from \"@material-ui/core\";\n\n// components\nimport ErrorBox from \"../UI/ErrorBox\";\nimport ResultModal from \"../UI/ResultModal\";\n\n// web3\nimport { useWeb3Context } from \"../../contexts/Web3Context\";\nimport { rootChainPrimaryProvider } from \"../../utils/providers\";\nimport { approveERC721, depositERC721 } from \"../../utils/erc721\";\nimport { approveERC1155, depositERC1155 } from \"../../utils/erc1155\";\nimport { getMetadata } from \"../../utils/helpers\";\nimport DummyERC721 from \"../../utils/abi/DummyERC721.json\";\nimport DummyERC1155 from \"../../utils/abi/DummyERC1155.json\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst FormETM = (props) => {\n  const classes = useStyles();\n  const [triggerModal, setTriggerModal] = useState(false);\n\n  const openModal = () => {\n    setTriggerModal(true);\n  };\n\n  const { inj_provider, providerChainId, account } = useWeb3Context();\n\n  const [loading, setLoading] = useState(false);\n  const [previewLoading, setPreviewLoading] = useState(false);\n  const [tokenAddr, setTokenAddr] = useState(\"\");\n  const [recieverAddr, setRecieverAddr] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const [tokenAmount, setTokenAmount] = useState(\"\");\n  const [isApproved, setIsApproved] = useState(false);\n  const [previewData, setPreviewData] = useState({\n    token_url: \"\",\n    image: \"\",\n    name: \"\",\n    contract_name: \"\",\n    token_id: \"\",\n    description: \"\",\n  });\n  const [checkBox, setCheckBox] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    previewData.token_id && props.sendDataToFormSection(previewData);\n  });\n\n  const [url, setUrl] = useState(\"https://goerli.etherscan.io/tx/\")\n  useEffect(() => {\n    if (providerChainId === 1) setUrl(\"http://etherscan.io/tx/\");\n    else setUrl(\"https://goerli.etherscan.io/tx/\");\n  }, [providerChainId]);\n\n  const approve = async (e) => {\n    e.preventDefault();\n    try {\n      console.log(\"check approve\");\n      try {\n        setLoading(true);\n        let contract, res;\n        if (checkBox) {\n          contract = await new inj_provider.eth.Contract(DummyERC1155, tokenAddr);\n          // operator - posERC721Predicate contract address\n          res = await contract.methods.isApprovedForAll(recieverAddr, \"0xB19a86ba1b50f0A395BfdC3557608789ee184dC8\");\n        } else {\n          // operator - posERC1155Predicate address \n          contract = await new inj_provider.eth.Contract(DummyERC721, tokenAddr);\n          res = await contract.methods.isApprovedForAll(recieverAddr, \"0x74D83801586E9D3C4dc45FfCD30B54eA9C88cf9b\");\n        }\n        res = await res.call();\n        console.log(\"isApproved\", res);\n        if (res) {\n          setIsApproved(true);\n          toast(\"Already Approved ✅\", { type: \"success\" });\n        } else {\n          // if not approved\n          let tx;\n          if (checkBox) {\n            const maticPOSClient = await rootChainPrimaryProvider(inj_provider, tokenAddr);\n            tx = await approveERC1155(maticPOSClient, tokenAddr);\n          } else {\n            const maticPOSClient = await rootChainPrimaryProvider(inj_provider, tokenAddr);\n            tx = await approveERC721(maticPOSClient, tokenAddr);\n          }\n          console.log(tx);\n          toast(\"Approved Successfully ✅\", { type: \"success\" });\n          setIsApproved(true);\n        }\n        setLoading(false);\n      } catch (e) {\n        setLoading(true);\n        console.error(e);\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const deposit = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      setLoading(true);\n      // create pos client insatnce\n      const maticPOSClient = await rootChainPrimaryProvider(\n        inj_provider,\n        tokenAddr\n      );\n      console.log(\"got pos client\", maticPOSClient);\n\n      // filter token id\n      let arr = tokenId.split(\",\").map(function (item) {\n        return parseInt(item, 10);\n      });\n      console.log(arr);\n\n      //  deposit\n      let tx;\n      if (!checkBox) {\n        tx = await depositERC721(maticPOSClient, tokenAddr, recieverAddr, arr);\n      } else {\n        console.log(\"token amount\", tokenAmount);\n        let amounts = tokenAmount.split(\",\").map(function (item) {\n          return parseInt(item, 10);\n        });\n        console.log(\"amount\", amounts);\n        tx = await depositERC1155(\n          maticPOSClient,\n          tokenAddr,\n          recieverAddr,\n          arr,\n          amounts\n        );\n      }\n      console.log(tx);\n\n      // Update on Firebase \n      let oldData = {\n        txn: [],\n        nft721: [],\n        txnType: [],\n        burnedTxn: []\n      };\n      const snapshot = await props.db.collection('storeHash').doc(account);\n      const data = await snapshot.get();\n      // console.log(data.data());\n      if (data.data() !== undefined) {\n        oldData = data.data();\n      }\n      const docRef = props.db.collection(\"storeHash\").doc(account);\n      await docRef.set({\n        txn: [...oldData.txn, tx.transactionHash],\n        nft721: [...oldData.nft721, !checkBox],\n        txnType: [...oldData.txnType, 'deposit'],\n        burnedTxn: [...oldData.burnedTxn, '']\n      });\n\n      setLoading(false);\n      console.log(tx.transactionHash);\n      setResult(tx.transactionHash);\n      openModal();\n    } catch (e) {\n      console.error(e);\n      if (e.message === \"Cannot read property 'eth' of undefined\")\n        setError(\"Wallet not Connected\");\n      else if (e.message.substr(0, 64) === \"execution reverted: ERC721: operator query for nonexistent token\")\n        setError(\"Incorrect token id, query for nonexistent token\");\n      else if (e.message.substr(0, 61) === \"execution reverted: ERC721: transfer of token that is not own\")\n        setError(\"Transferring a token which does not belong to connected wallet address.\")\n      else if (e.message.substr(0, 56) === \"execution reverted: ERC721: transfer caller is not owner\")\n        setError(\"Caller address is not approved. Refresh page to approve.\");\n      else setError(e.message);\n      setLoading(false);\n    }\n  };\n\n  const preview = async (e) => {\n    e.preventDefault();\n    setPreviewLoading(true);\n    try {\n      // filter token id\n      let arr = tokenId.split(\",\").map(function (item) {\n        return parseInt(item, 10);\n      });\n      // console.log(arr);\n      const data = await getMetadata(providerChainId, tokenAddr, arr[0]);\n      if (data.nft_data[0]) {\n        const { contract_name } = data;\n        const { token_url, token_id, external_data } = data.nft_data[0];\n        setPreviewData({\n          token_url,\n          token_id,\n          contract_name,\n          image: external_data?.image,\n          name: external_data?.name,\n          description: external_data?.description,\n        });\n      }\n      setPreviewLoading(false);\n    } catch (e) {\n      console.error(e.message);\n      if (e.message === \"Cannot read property 'nft_data' of undefined\") {\n        setError(\n          \"Data for this NFT not found. Make sure you are on Eth or Goerli Network.\"\n        );\n      } else if (e.message === \"Request failed with status code 500\") {\n        setError(\n          \"Data for this NFT not found. Make sure you are on Eth or Goerli Network.\"\n        );\n      } else setError(e.message.substr(0, 70));\n      setPreviewLoading(false);\n    }\n  };\n\n\n  return (\n    <>\n      <ResultModal\n        ethToMatic\n        triggerModal={triggerModal}\n        setTriggerModal={setTriggerModal}\n        data={{\n          url: url,\n          addressTwo: result,\n          msg: \"Please wait. It takes 5-8 minutes to state sync with Polygon. Once state sync happens, you will get the tokens deposited on child chain at the given address.\",\n        }}\n      />\n      <CheckEthConnection />\n      <form className={classes.formContainer} onSubmit={isApproved ? deposit : approve}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <div className={classes.inputContainer}>\n              <label htmlFor=\"token-address\">Token Address (ETH)</label>\n              <input\n                type=\"text\"\n                // className={`${errors.name ? classes.inputErr : \"\"}`}\n                value={tokenAddr}\n                onChange={(e) => setTokenAddr(e.target.value)}\n                required\n                name=\"token-address\"\n                id=\"token-address\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.inputContainer}>\n              <label htmlFor=\"receiver-address\">\n                Receiver Address (Child Chain)\n              </label>\n              <input\n                type=\"text\"\n                // className={`${errors.name ? classes.inputErr : \"\"}`}\n                value={recieverAddr}\n                onChange={(e) => setRecieverAddr(e.target.value)}\n                required\n                name=\"receiver-address\"\n                id=\"receiver-address\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.inputContainer}>\n              <label htmlFor=\"token-ids\">\n                Token IDs <span>(without space, with commas)</span>\n              </label>\n              <input\n                type=\"string\"\n                placeholder=\"1,2,3\"\n                // className={`${errors.name ? classes.inputErr : \"\"}`}\n                value={tokenId}\n                onChange={(e) => setTokenId(e.target.value)}\n                required\n                name=\"token-ids\"\n                id=\"token-ids\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <p className={classes.label}>NFT Type</p>\n            <input\n              type=\"checkbox\"\n              checked={checkBox}\n              onChange={(e) => setCheckBox(e.target.checked)}\n              id=\"checkedA\"\n              hidden\n              className={classes.hiddenCheckbox}\n            />\n            <label htmlFor=\"checkedA\" className={classes.nftType}>\n              <div>ERC721</div>\n              <div>ERC1155</div>\n            </label>\n          </Grid>\n          {checkBox && (\n            <Grid item xs={12} md={6}>\n              <div className={classes.inputContainer}>\n                <label htmlFor=\"token-amount\">\n                  Token Amount <span>(without space, with commas)</span>\n                </label>\n                <input\n                  type=\"string\"\n                  placeholder=\"2,1,3\"\n                  // className={`${errors.name ? classes.inputErr : \"\"}`}\n                  value={tokenAmount}\n                  onChange={(e) => setTokenAmount(e.target.value)}\n                  name=\"token-amount\"\n                  id=\"token-amount\"\n                />\n              </div>\n            </Grid>\n          )}\n        </Grid>\n\n        <div className={classes.btnContainer}>\n          <Button type=\"submit\" className={classes.btn} disabled={loading}>\n            {loading && (\n              <CircularProgress\n                className={`${classes.loading} ${classes.purple}`}\n                size={24}\n              />\n            )}\n            {isApproved ? 'Deposit' : 'Approve'}\n          </Button>\n          <Button\n            className={`${classes.btn} ${classes.filled}`}\n            disabled={previewLoading}\n            onClick={preview}\n          >\n            {previewLoading && (\n              <CircularProgress className={`${classes.loading}`} size={24} />\n            )}\n            Preview\n          </Button>\n        </div>\n        {/* error display */}\n        {error && <ErrorBox message={error} />}\n      </form>\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n  purple: {\n    color: \"#7533E2\",\n  },\n}));\n\nexport default FormETM;\n"]},"metadata":{},"sourceType":"module"}