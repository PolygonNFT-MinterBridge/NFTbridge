{"ast":null,"code":"/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepExtend = exports.deepCopy = void 0;\n/**\n * Returns a deep copy of an object or array.\n *\n * @param {object|array} value The object or array to deep copy.\n * @return {object|array} A deep copy of the provided object or array.\n */\n\nfunction deepCopy(value) {\n  return deepExtend(undefined, value);\n}\n\nexports.deepCopy = deepCopy;\n/**\n * Copies properties from source to target (recursively allows extension of objects and arrays).\n * Scalar values in the target are over-written. If target is undefined, an object of the\n * appropriate type will be created (and returned).\n *\n * We recursively copy all child properties of plain objects in the source - so that namespace-like\n * objects are merged.\n *\n * Note that the target can be a function, in which case the properties in the source object are\n * copied onto it as static properties of the function.\n *\n * @param {any} target The value which is being extended.\n * @param {any} source The value whose properties are extending the target.\n * @return {any} The target value.\n */\n\nfunction deepExtend(target, source) {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      {\n        // Treat Dates like scalars; if the target date object had any child\n        // properties - they will be lost!\n        var dateValue = source;\n        return new Date(dateValue.getTime());\n      }\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n\n      break;\n\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (var prop in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, prop)) {\n      continue;\n    }\n\n    target[prop] = deepExtend(target[prop], source[prop]);\n  }\n\n  return target;\n}\n\nexports.deepExtend = deepExtend;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/firebase-admin/lib/utils/deep-copy.js"],"names":["Object","defineProperty","exports","value","deepExtend","deepCopy","undefined","target","source","constructor","Date","dateValue","getTime","Array","prop","prototype","hasOwnProperty","call"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,QAAR,GAAmB,KAAK,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,QAAT,CAAkBF,KAAlB,EAAyB;AACrB,SAAOC,UAAU,CAACE,SAAD,EAAYH,KAAZ,CAAjB;AACH;;AACDD,OAAO,CAACG,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoBG,MAApB,EAA4BC,MAA5B,EAAoC;AAChC,MAAI,EAAEA,MAAM,YAAYR,MAApB,CAAJ,EAAiC;AAC7B,WAAOQ,MAAP;AACH;;AACD,UAAQA,MAAM,CAACC,WAAf;AACI,SAAKC,IAAL;AAAW;AACP;AACA;AACA,YAAIC,SAAS,GAAGH,MAAhB;AACA,eAAO,IAAIE,IAAJ,CAASC,SAAS,CAACC,OAAV,EAAT,CAAP;AACH;;AACD,SAAKZ,MAAL;AACI,UAAIO,MAAM,KAAKD,SAAf,EAA0B;AACtBC,QAAAA,MAAM,GAAG,EAAT;AACH;;AACD;;AACJ,SAAKM,KAAL;AACI;AACAN,MAAAA,MAAM,GAAG,EAAT;AACA;;AACJ;AACI;AACA,aAAOC,MAAP;AAlBR;;AAoBA,OAAK,IAAIM,IAAT,IAAiBN,MAAjB,EAAyB;AACrB,QAAI,CAACR,MAAM,CAACe,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,MAArC,EAA6CM,IAA7C,CAAL,EAAyD;AACrD;AACH;;AACDP,IAAAA,MAAM,CAACO,IAAD,CAAN,GAAeV,UAAU,CAACG,MAAM,CAACO,IAAD,CAAP,EAAeN,MAAM,CAACM,IAAD,CAArB,CAAzB;AACH;;AACD,SAAOP,MAAP;AACH;;AACDL,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepExtend = exports.deepCopy = void 0;\n/**\n * Returns a deep copy of an object or array.\n *\n * @param {object|array} value The object or array to deep copy.\n * @return {object|array} A deep copy of the provided object or array.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copies properties from source to target (recursively allows extension of objects and arrays).\n * Scalar values in the target are over-written. If target is undefined, an object of the\n * appropriate type will be created (and returned).\n *\n * We recursively copy all child properties of plain objects in the source - so that namespace-like\n * objects are merged.\n *\n * Note that the target can be a function, in which case the properties in the source object are\n * copied onto it as static properties of the function.\n *\n * @param {any} target The value which is being extended.\n * @param {any} source The value whose properties are extending the target.\n * @return {any} The target value.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date: {\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        }\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!Object.prototype.hasOwnProperty.call(source, prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n"]},"metadata":{},"sourceType":"script"}