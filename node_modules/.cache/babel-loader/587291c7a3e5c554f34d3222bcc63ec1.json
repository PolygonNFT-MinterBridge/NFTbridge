{"ast":null,"code":"var pump = require('pump');\n\nvar inherits = require('inherits');\n\nvar Duplexify = require('duplexify');\n\nvar toArray = function (args) {\n  if (!args.length) return [];\n  return Array.isArray(args[0]) ? args[0] : Array.prototype.slice.call(args);\n};\n\nvar define = function (opts) {\n  var Pumpify = function () {\n    var streams = toArray(arguments);\n    if (!(this instanceof Pumpify)) return new Pumpify(streams);\n    Duplexify.call(this, null, null, opts);\n    if (streams.length) this.setPipeline(streams);\n  };\n\n  inherits(Pumpify, Duplexify);\n\n  Pumpify.prototype.setPipeline = function () {\n    var streams = toArray(arguments);\n    var self = this;\n    var ended = false;\n    var w = streams[0];\n    var r = streams[streams.length - 1];\n    r = r.readable ? r : null;\n    w = w.writable ? w : null;\n\n    var onclose = function () {\n      streams[0].emit('error', new Error('stream was destroyed'));\n    };\n\n    this.on('close', onclose);\n    this.on('prefinish', function () {\n      if (!ended) self.cork();\n    });\n    pump(streams, function (err) {\n      self.removeListener('close', onclose);\n      if (err) return self.destroy(err.message === 'premature close' ? null : err);\n      ended = true; // pump ends after the last stream is not writable *but*\n      // pumpify still forwards the readable part so we need to catch errors\n      // still, so reenable autoDestroy in this case\n\n      if (self._autoDestroy === false) self._autoDestroy = true;\n      self.uncork();\n    });\n    if (this.destroyed) return onclose();\n    this.setWritable(w);\n    this.setReadable(r);\n  };\n\n  return Pumpify;\n};\n\nmodule.exports = define({\n  autoDestroy: false,\n  destroy: false\n});\nmodule.exports.obj = define({\n  autoDestroy: false,\n  destroy: false,\n  objectMode: true,\n  highWaterMark: 16\n});\nmodule.exports.ctor = define;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/pumpify/index.js"],"names":["pump","require","inherits","Duplexify","toArray","args","length","Array","isArray","prototype","slice","call","define","opts","Pumpify","streams","arguments","setPipeline","self","ended","w","r","readable","writable","onclose","emit","Error","on","cork","err","removeListener","destroy","message","_autoDestroy","uncork","destroyed","setWritable","setReadable","module","exports","autoDestroy","obj","objectMode","highWaterMark","ctor"],"mappings":"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","sourcesContent":["var pump = require('pump')\nvar inherits = require('inherits')\nvar Duplexify = require('duplexify')\n\nvar toArray = function(args) {\n  if (!args.length) return []\n  return Array.isArray(args[0]) ? args[0] : Array.prototype.slice.call(args)\n}\n\nvar define = function(opts) {\n  var Pumpify = function() {\n    var streams = toArray(arguments)\n    if (!(this instanceof Pumpify)) return new Pumpify(streams)\n    Duplexify.call(this, null, null, opts)\n    if (streams.length) this.setPipeline(streams)\n  }\n\n  inherits(Pumpify, Duplexify)\n\n  Pumpify.prototype.setPipeline = function() {\n    var streams = toArray(arguments)\n    var self = this\n    var ended = false\n    var w = streams[0]\n    var r = streams[streams.length-1]\n\n    r = r.readable ? r : null\n    w = w.writable ? w : null\n\n    var onclose = function() {\n      streams[0].emit('error', new Error('stream was destroyed'))\n    }\n\n    this.on('close', onclose)\n    this.on('prefinish', function() {\n      if (!ended) self.cork()\n    })\n\n    pump(streams, function(err) {\n      self.removeListener('close', onclose)\n      if (err) return self.destroy(err.message === 'premature close' ? null : err)\n      ended = true\n      // pump ends after the last stream is not writable *but*\n      // pumpify still forwards the readable part so we need to catch errors\n      // still, so reenable autoDestroy in this case\n      if (self._autoDestroy === false) self._autoDestroy = true\n      self.uncork()\n    })\n\n    if (this.destroyed) return onclose()\n    this.setWritable(w)\n    this.setReadable(r)\n  }\n\n  return Pumpify\n}\n\nmodule.exports = define({autoDestroy:false, destroy:false})\nmodule.exports.obj = define({autoDestroy: false, destroy:false, objectMode:true, highWaterMark:16})\nmodule.exports.ctor = define\n"]},"metadata":{},"sourceType":"script"}