{"ast":null,"code":"exports = module.exports = SemVer;\nvar debug;\n/* istanbul ignore next */\n\nif (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift('SEMVER');\n    console.log.apply(console, args);\n  };\n} else {\n  debug = function () {};\n} // Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\n\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\n9007199254740991; // Max safe segment length for coercion.\n\nvar MAX_SAFE_COMPONENT_LENGTH = 16; // The actual regexps go on exports.re\n\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar t = exports.tokens = {};\nvar R = 0;\n\nfunction tok(n) {\n  t[n] = R++;\n} // The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\n\ntok('NUMERICIDENTIFIER');\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\ntok('NUMERICIDENTIFIERLOOSE');\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER');\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION');\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIER] + ')';\ntok('MAINVERSIONLOOSE');\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER');\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] + '|' + src[t.NONNUMERICIDENTIFIER] + ')';\ntok('PRERELEASEIDENTIFIERLOOSE');\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] + '|' + src[t.NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE');\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))';\ntok('PRERELEASELOOSE');\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER');\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD');\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] + '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'; // ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL');\ntok('FULLPLAIN');\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] + src[t.PRERELEASE] + '?' + src[t.BUILD] + '?';\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\n\ntok('LOOSEPLAIN');\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] + src[t.PRERELEASELOOSE] + '?' + src[t.BUILD] + '?';\ntok('LOOSE');\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$';\ntok('GTLT');\nsrc[t.GTLT] = '((?:<|>)?=?)'; // Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\n\ntok('XRANGEIDENTIFIERLOOSE');\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\ntok('XRANGEIDENTIFIER');\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*';\ntok('XRANGEPLAIN');\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' + '(?:' + src[t.PRERELEASE] + ')?' + src[t.BUILD] + '?' + ')?)?';\ntok('XRANGEPLAINLOOSE');\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[t.PRERELEASELOOSE] + ')?' + src[t.BUILD] + '?' + ')?)?';\ntok('XRANGE');\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$';\ntok('XRANGELOOSE');\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'; // Coercion.\n// Extract anything that could conceivably be a part of a valid semver\n\ntok('COERCE');\nsrc[t.COERCE] = '(^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])';\ntok('COERCERTL');\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g'); // Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\n\ntok('LONETILDE');\nsrc[t.LONETILDE] = '(?:~>?)';\ntok('TILDETRIM');\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+';\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\ntok('TILDE');\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$';\ntok('TILDELOOSE');\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'; // Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\n\ntok('LONECARET');\nsrc[t.LONECARET] = '(?:\\\\^)';\ntok('CARETTRIM');\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+';\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\ntok('CARET');\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$';\ntok('CARETLOOSE');\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\ntok('COMPARATORLOOSE');\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$';\ntok('COMPARATOR');\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\ntok('COMPARATORTRIM');\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'; // this one has to use the /g flag\n\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\n\ntok('HYPHENRANGE');\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[t.XRANGEPLAIN] + ')' + '\\\\s*$';\ntok('HYPHENRANGELOOSE');\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[t.XRANGEPLAINLOOSE] + ')' + '\\\\s*$'; // Star ranges basically just allow anything at all.\n\ntok('STAR');\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'; // Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\n\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n\n  if (!re[i]) {\n    re[i] = new RegExp(src[i]);\n  }\n}\n\nexports.parse = parse;\n\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL];\n\n  if (!r.test(version)) {\n    return null;\n  }\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\n\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\nexports.clean = clean;\n\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version;\n    } else {\n      version = version.version;\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options);\n  }\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  this.raw = version; // these are actually numbers\n\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version');\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version');\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version');\n  } // numberify any prerelease numeric ids\n\n\n  if (!m[4]) {\n    this.prerelease = [];\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num;\n        }\n      }\n\n      return id;\n    });\n  }\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.');\n  }\n\n  return this.version;\n};\n\nSemVer.prototype.toString = function () {\n  return this.version;\n};\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  } // NOT having a prerelease is > having one\n\n\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1;\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1;\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0;\n  }\n\n  var i = 0;\n\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n};\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  var i = 0;\n\n  do {\n    var a = this.build[i];\n    var b = other.build[i];\n    debug('prerelease compare', i, a, b);\n\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n}; // preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n\n\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier);\n      }\n\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n        this.major++;\n      }\n\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++;\n      }\n\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++;\n      }\n\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0];\n      } else {\n        var i = this.prerelease.length;\n\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0);\n        }\n      }\n\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0];\n          }\n        } else {\n          this.prerelease = [identifier, 0];\n        }\n      }\n\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\n\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\n\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var prefix = '';\n\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre';\n      var defaultResult = 'prerelease';\n    }\n\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n\n    return defaultResult; // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\n\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\n\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\n\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\n\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\n\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\n\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\n\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.compareBuild = compareBuild;\n\nfunction compareBuild(a, b, loose) {\n  var versionA = new SemVer(a, loose);\n  var versionB = new SemVer(b, loose);\n  return versionA.compare(versionB) || versionA.compareBuild(versionB);\n}\n\nexports.rcompare = rcompare;\n\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\n\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\n\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose);\n  });\n}\n\nexports.gt = gt;\n\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\n\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\n\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\n\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\n\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\n\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\n\nfunction cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n}\n\nexports.Comparator = Comparator;\n\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp;\n    } else {\n      comp = comp.value;\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options);\n  }\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY) {\n    this.value = '';\n  } else {\n    this.value = this.operator + this.semver.version;\n  }\n\n  debug('comp', this);\n}\n\nvar ANY = {};\n\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp);\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : '';\n\n  if (this.operator === '=') {\n    this.operator = '';\n  } // if it literally is just '>' or '' then allow anything.\n\n\n  if (!m[2]) {\n    this.semver = ANY;\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose);\n  }\n};\n\nComparator.prototype.toString = function () {\n  return this.value;\n};\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY || version === ANY) {\n    return true;\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true;\n    }\n\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true;\n    }\n\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\nexports.Range = Range;\n\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options);\n  }\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||\n\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function () {\n  return this.range;\n};\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose;\n  range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[t.COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`\n\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace); // normalize spaces\n\n  range = range.split(/\\s+/).join(' '); // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function (thisComparators) {\n    return isSatisfiable(thisComparators, options) && range.set.some(function (rangeComparators) {\n      return isSatisfiable(rangeComparators, options) && thisComparators.every(function (thisComparator) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n}; // take a set of comparators and determine whether there\n// exists a version which can satisfy it\n\n\nfunction isSatisfiable(comparators, options) {\n  var result = true;\n  var remainingComparators = comparators.slice();\n  var testComparator = remainingComparators.pop();\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options);\n    });\n    testComparator = remainingComparators.pop();\n  }\n\n  return result;\n} // Mostly just for testing and legacy API reasons\n\n\nexports.toComparators = toComparators;\n\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n} // comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\n\n\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n} // ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n\n\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('tilde return', ret);\n    return ret;\n  });\n} // ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\n\n\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';\n      }\n    } else {\n      debug('no pr');\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    } // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n\n\n    pr = options.includePrerelease ? '-0' : '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n\n      p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr;\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr + ' <' + M + '.' + (+m + 1) + '.0' + pr;\n    }\n\n    debug('xRange return', ret);\n    return ret;\n  });\n} // Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\n\n\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!\n\n  return comp.trim().replace(re[t.STAR], '');\n} // This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\n\n\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = '';\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0';\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0';\n  } else {\n    from = '>=' + from;\n  }\n\n  if (isX(tM)) {\n    to = '';\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0';\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  } else {\n    to = '<=' + to;\n  }\n\n  return (from + ' ' + to).trim();\n} // if ANY of the sets match ALL of its comparators, then pass\n\n\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false;\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options);\n    } catch (er) {\n      return false;\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n\n      if (set[i].semver === ANY) {\n        continue;\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    } // Version has a -pre, but it's not one of the ones we like.\n\n\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\n\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\n\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\n\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\n\nexports.minVersion = minVersion;\n\nfunction minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = new SemVer('0.0.0-0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = null;\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n\n          compver.raw = compver.format();\n\n        /* fallthrough */\n\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n\n          break;\n\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator);\n      }\n    });\n  }\n\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n\n  return null;\n}\n\nexports.validRange = validRange;\n\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n} // Determine if version is less than all the versions possible in the range\n\n\nexports.ltr = ltr;\n\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n} // Determine if version is greater than all the versions possible in the range.\n\n\nexports.gtr = gtr;\n\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\n\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  } // If it satisifes the range it is not outside\n\n\n  if (satisfies(version, range, options)) {\n    return false;\n  } // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n\n      high = high || comparator;\n      low = low || comparator;\n\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    }); // If the edge version comparator has a operator then our version\n    // isn't outside it\n\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    } // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n\n\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.prerelease = prerelease;\n\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\n\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\n\nexports.coerce = coerce;\n\nfunction coerce(version, options) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version === 'number') {\n    version = String(version);\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  options = options || {};\n  var match = null;\n\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE]);\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next;\n\n    while ((next = re[t.COERCERTL].exec(version)) && (!match || match.index + match[0].length !== version.length)) {\n      if (!match || next.index + next[0].length !== match.index + match[0].length) {\n        match = next;\n      }\n\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;\n    } // leave it in a clean state\n\n\n    re[t.COERCERTL].lastIndex = -1;\n  }\n\n  if (match === null) {\n    return null;\n  }\n\n  return parse(match[2] + '.' + (match[3] || '0') + '.' + (match[4] || '0'), options);\n}","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/semver/semver.js"],"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","t","tokens","R","tok","n","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","RegExp","LONETILDE","TILDETRIM","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","compareBuild","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","comparators","result","remainingComparators","testComparator","pop","otherComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce","String","rtl","next","exec","index","lastIndex"],"mappings":"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","sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n"]},"metadata":{},"sourceType":"script"}