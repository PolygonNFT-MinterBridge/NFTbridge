{"ast":null,"code":"import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.9.11\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function (domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\n\n\nvar sha1 = function (str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function (logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function (prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function (data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function (fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\n\n\nvar stringCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function (key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function (str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function (v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function () {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function () {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function (str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\n\n\nvar exceptionGuard = function (fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function () {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function (fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function () {\n      return this._host;\n    },\n    set: function (newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function () {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function (i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId - An identifier for this connection, used for logging\r\n   * @param repoInfo - The info for the endpoint to send data to.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function () {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function () {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId - identifier for this transport\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function () {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n        if (conn === _this.rx_) {\n          _this.onPrimaryMessageReceived_(message);\n        } else if (conn === _this.secondaryConn_) {\n          _this.onSecondaryMessageReceived_(message);\n        } else {\n          _this.log_('message on old connection');\n        }\n      }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n      this.tryStartUpgrade_();\n    }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('sending ping on primary.');\n      this.sendData_({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n      this.log_('Closing realtime connection.');\n      this.state_ = 2\n      /* DISCONNECTED */\n      ;\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function (message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query._queryIdentifier;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n\n        var indexPath = query._path.toString();\n\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function () {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function (msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function () {\n      return __EMPTY_NODE;\n    },\n    set: function (val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function (priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function (priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function () {\n      return __childrenNodeConstructor;\n    },\n    set: function (val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function (num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function (bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function (low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function (base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function (chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function (pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function () {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function () {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function (key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function (key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function (a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function (a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n\n    var pathString = query._path.toString();\n\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function () {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function (write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n        this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n      } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n        this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n      } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function () {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor$1;\n\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\n\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function () {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function (status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function (values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function (op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\n\n\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function (key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function (pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function (pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function (priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function (errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function (fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function (fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function (fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nvar validateWritablePath = function (fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function (fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function () {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function (query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON$1(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON$1(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON$1(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON$1(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON$1(payload);\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON$1(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON$1(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON$1(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Initialize transaction.\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      var _loop_1 = function (i) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n\n        queue[i].unwatcher();\n      };\n\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n            queue[i].status = 4\n            /* NEEDS_ABORT */\n            ;\n          } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  var _loop_2 = function (i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n    } else if (transaction.status === 0\n    /* RUN */\n    ) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = repoGenerateServerValues(repo);\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n        assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = 3\n        /* SENT_NEEDS_ABORT */\n        ;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function (dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\n\n\nvar CallbackContext =\n/** @class */\nfunction () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function () {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n\n  return CallbackContext;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\n\nvar QueryImpl =\n/** @class */\nfunction () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function () {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function () {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function () {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function () {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\n\n\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\n\n\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\n\n\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\n\n\nvar ReferenceImpl =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n\n\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function () {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function () {\n      var ref = this;\n\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function () {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function () {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function () {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this._node; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\n\n\nfunction ref(db, path) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('ref');\n\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\n\n\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('refFromURL');\n\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\n\n\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\n\n\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\n\n\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value,\n  /*priority=*/\n  null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\n\n\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\n\n\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(callbacks) {\n    this.callbacks = callbacks;\n  }\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks, eventToCheck);\n  };\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbacks['cancel'].hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\n  };\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    if (eventData.getEventType() === 'cancel') {\n      var cancelCB_1 = this.callbacks['cancel'];\n      return function () {\n        return cancelCB_1.onCancel(eventData.error);\n      };\n    } else {\n      var cb_1 = this.callbacks[eventData.eventType];\n      return function () {\n        return cb_1.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks || !other.callbacks) {\n        return true;\n      } else {\n        var otherKeys = Object.keys(other.callbacks);\n        var thisKeys = Object.keys(this.callbacks);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks[otherKey] || !this.callbacks[thisKey] || other.callbacks[otherKey].matches(this.callbacks[thisKey]));\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks[eventType].matches(_this.callbacks[eventType]);\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var _a;\n\n  var cancelCallback;\n\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n\n    var onceCallback = function (dataSnapshot, previousChildName) {\n      userCallback_1(dataSnapshot, previousChildName);\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n    };\n\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration((_a = {}, _a[eventType] = callbackContext, _a));\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\n\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\n\n\nfunction off(query, eventType, callback) {\n  var container = null;\n  var callbacks = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    if (callback) {\n      callbacks = {};\n      callbacks[eventType] = expCallback;\n    }\n\n    container = new ChildEventRegistration(callbacks);\n  }\n\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\n\n\nvar QueryConstraint =\n/** @class */\nfunction () {\n  function QueryConstraint() {}\n\n  return QueryConstraint;\n}();\n\nvar QueryEndAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndAtConstraint, _super);\n\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\n\n\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nvar QueryEndBeforeConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nvar QueryStartAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAtConstraint, _super);\n\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nvar QueryStartAfterConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nvar QueryLimitToFirstConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nvar QueryLimitToLastConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nvar QueryOrderByChildConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n\n    _this._path = _path;\n    return _this;\n  }\n\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\n\n\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nvar QueryOrderByKeyConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\n\nvar QueryOrderByPriorityConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\n\n\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\n\nvar QueryOrderByValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\n\nvar QueryEqualToValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\n\n\nfunction query(query) {\n  var e_1, _a;\n\n  var queryConstraints = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n\n  var queryImpl = getModularInstance(query);\n\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (repo.repoInfo_.nodeAdmin) {\n    repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\n  return new FirebaseDatabase(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName]; // This should never happen...\n\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\n  var appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = appRepos[repoInfo.toURLString()];\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\n\n\nvar FirebaseDatabase =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function FirebaseDatabase(_repoInternal,\n  /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this._instanceStarted = false;\n  }\n\n  Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\n    get: function () {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\n    get: function () {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseDatabase.prototype._delete = function () {\n    this._checkNotDeleted('delete');\n\n    repoManagerDeleteRepo(this._repo, this.app.name);\n    this._repoInternal = null;\n    this._rootInternal = null;\n    return Promise.resolve();\n  };\n\n  FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n\n  return FirebaseDatabase;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\n\n\nfunction useDatabaseEmulator(db, host, port) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('useEmulator');\n\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  } // Modify the repo to apply emulator settings\n\n\n  repoManagerApplyEmulatorSettings(db._repo, host, port);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\n\n\nfunction goOffline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOffline');\n\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\n\n\nfunction goOnline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOnline');\n\n  repoResume(db._repo);\n}\n\nfunction enableLogging$1(logger, persistent) {\n  enableLogging(logger, persistent);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\n\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\n\n\nfunction increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function TransactionResult(\n  /** Whether the transaction was successfully committed. */\n  committed,\n  /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n\n\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\n\n\nfunction runTransaction(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n\n  var promiseComplete = function (error, committed, node) {\n    var dataSnapshot = null;\n\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  }; // Add a watch to make sure we get server updates.\n\n\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect$1 =\n/** @class */\nfunction () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n\n    var result = this._delegate.cancel();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n\n    var result = this._delegate.remove();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n\n    var result = this._delegate.set(value);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n\n    var result = this._delegate.setWithPriority(value, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n\n    var result = this._delegate.update(objectToMerge);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult$1 =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot$1 =\n/** @class */\nfunction () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function () {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function () {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n\n    var _a;\n\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    var valueCallback = function (expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n\n    if (callback) {\n      var valueCallback = function () {};\n\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    var _this = this;\n\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot$1(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n\n    var valueCallback = function (expSnapshot, previousChildName) {\n      var result = new DataSnapshot$1(_this.database, expSnapshot);\n\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n\n      deferred.resolve(result);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n\n    var cancelCallback = function (error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function () {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\n    });\n\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\n  };\n\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function () {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function () {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function () {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function () {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   */\n\n\n  Database.prototype.useEmulator = function (host, port) {\n    useDatabaseEmulator(this._delegate, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function (delta) {\n      return increment(delta);\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function () {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function (ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  connection.securityDebugCallback_ = callback;\n};\n\nvar stats = function (ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nvar statsIncrementCounter = function (ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nvar dataUpdateCount = function (ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nvar interceptServerData = function (ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function (newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function (query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function (forceRestClient) {\n  repoManagerForceRestClient(forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot$1,\n    enableLogging: enableLogging$1,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/@firebase/database/dist/index.esm.js"],"names":["firebase","Provider","ComponentContainer","Component","stringify","jsonEval","contains","assert","isNodeSdk","base64","stringToByteArray","Sha1","deepCopy","base64Encode","isMobileCordova","stringLength","Deferred","safeGet","isAdmin","isValidFormat","isEmpty","isReactNative","assertionError","map","querystring","errorPrefix","getModularInstance","validateArgCount","validateCallback","validateContextObject","__spreadArray","__read","__values","__extends","__assign","Logger","LogLevel","name","version","DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","FirebaseAuthTokenProvider","appName_","firebaseOptions_","authProvider_","_this","auth_","getImmediate","optional","then","auth","getToken","forceRefresh","Promise","resolve","catch","reject","addTokenChangeListener","listener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","EmulatorAdminTokenProvider","accessToken","EMULATOR_AUTH_TOKEN","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","undefined","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","action","onResponse","curReqNum","r","deferred","request","p","q","_queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON","MAX_NODE$1","setNodeFromJSON","setMaxNode$1","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","status_1","authTokenData","authToken","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","statsReporterIncludeStat","reporter","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","referenceConstructor$1","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoInterceptServerData","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoStats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStatsIncrementCounter","metric","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCB_1","cb_1","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","startAfter","QueryLimitToFirstConstraint","_limit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","FirebaseDatabase","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","_delete","apiName","useDatabaseEmulator","goOffline","goOnline","enableLogging$1","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult","committed","runTransaction","promiseComplete","OnDisconnect$1","_delegate","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","forceLongPolling","forceWebSockets","setSecurityDebugCallback","connection","statsIncrementCounter","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","queryIdentifier","TEST_ACCESS","registerDatabase","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports"],"mappings":"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kB3F,EAAlB,EAAsB;AAClBA,EAAAA,EAAE,GAAGtvD,kBAAkB,CAACsvD,EAAD,CAAvB;;AACAA,EAAAA,EAAE,CAACC,gBAAH,CAAoB,UAApB;;AACAzH,EAAAA,UAAU,CAACwH,EAAE,CAACzW,KAAJ,CAAV;AACH;;AACD,SAASqc,eAAT,CAAyBvxD,MAAzB,EAAiCI,UAAjC,EAA6C;AACzCF,EAAAA,aAAa,CAACF,MAAD,EAASI,UAAT,CAAb;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIoxD,gBAAgB,GAAG;AACnB,SAAO;AADY,CAAvB;AAGA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,GAA2B;AACvB,SAAOD,gBAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBhnC,KAAnB,EAA0B;AACtB,SAAO;AACH,WAAO;AACH,mBAAaA;AADV;AADJ,GAAP;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIinC,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACA,WAASA,iBAAT;AACA;AACAC,EAAAA,SAFA;AAGA;AACAzI,EAAAA,QAJA,EAIU;AACN,SAAKyI,SAAL,GAAiBA,SAAjB;AACA,SAAKzI,QAAL,GAAgBA,QAAhB;AACH;AACD;;;AACAwI,EAAAA,iBAAiB,CAACt0D,SAAlB,CAA4ButD,MAA5B,GAAqC,YAAY;AAC7C,WAAO;AAAEgH,MAAAA,SAAS,EAAE,KAAKA,SAAlB;AAA6BzI,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcyB,MAAd;AAAvC,KAAP;AACH,GAFD;;AAGA,SAAO+G,iBAAP;AACH,CAfsC,EAAvC;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.9.11\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - An identifier for this connection, used for logging\r\n     * @param repoInfo - The info for the endpoint to send data to.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - identifier for this transport\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON$1(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON$1(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON$1(payload);\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON$1(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON$1(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback ===\r\n                other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(callbacks) {\r\n        this.callbacks = callbacks;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks, eventToCheck);\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbacks['cancel'].hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            var cancelCB_1 = this.callbacks['cancel'];\r\n            return function () { return cancelCB_1.onCancel(eventData.error); };\r\n        }\r\n        else {\r\n            var cb_1 = this.callbacks[eventData.eventType];\r\n            return function () {\r\n                return cb_1.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks || !other.callbacks) {\r\n                return true;\r\n            }\r\n            else {\r\n                var otherKeys = Object.keys(other.callbacks);\r\n                var thisKeys = Object.keys(this.callbacks);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks[otherKey] ||\r\n                                !this.callbacks[thisKey] ||\r\n                                other.callbacks[otherKey].matches(this.callbacks[thisKey])));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks[eventType].matches(_this.callbacks[eventType]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var _a;\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration((_a = {},\r\n            _a[eventType] = callbackContext,\r\n            _a));\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var callbacks = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        if (callback) {\r\n            callbacks = {};\r\n            callbacks[eventType] = expCallback;\r\n        }\r\n        container = new ChildEventRegistration(callbacks);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorAdminTokenProvider()\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\r\n    return new FirebaseDatabase(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar FirebaseDatabase = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function FirebaseDatabase(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseDatabase.prototype._delete = function () {\r\n        this._checkNotDeleted('delete');\r\n        repoManagerDeleteRepo(this._repo, this.app.name);\r\n        this._repoInternal = null;\r\n        this._rootInternal = null;\r\n        return Promise.resolve();\r\n    };\r\n    FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return FirebaseDatabase;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\r\nfunction useDatabaseEmulator(db, host, port) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(db._repo, host, port);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging$1(logger, persistent) {\r\n    enableLogging(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot$1(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot$1(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        useDatabaseEmulator(this._delegate, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot$1,\r\n        enableLogging: enableLogging$1,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}