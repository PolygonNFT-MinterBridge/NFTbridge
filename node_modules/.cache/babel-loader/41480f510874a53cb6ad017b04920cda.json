{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\"use strict\";\n\nvar Jsonrpc = require('./jsonrpc');\n\nvar errors = require('web3-core-helpers').errors;\n\nvar Batch = function (requestManager) {\n  this.requestManager = requestManager;\n  this.requests = [];\n};\n/**\n * Should be called to add create new request to batch request\n *\n * @method add\n * @param {Object} jsonrpc requet object\n */\n\n\nBatch.prototype.add = function (request) {\n  this.requests.push(request);\n};\n/**\n * Should be called to execute batch request\n *\n * @method execute\n */\n\n\nBatch.prototype.execute = function () {\n  var requests = this.requests;\n\n  var sortResponses = this._sortResponses.bind(this);\n\n  this.requestManager.sendBatch(requests, function (err, results) {\n    results = sortResponses(results);\n    requests.map(function (request, index) {\n      return results[index] || {};\n    }).forEach(function (result, index) {\n      if (requests[index].callback) {\n        if (result && result.error) {\n          return requests[index].callback(errors.ErrorResponse(result));\n        }\n\n        if (!Jsonrpc.isValidResponse(result)) {\n          return requests[index].callback(errors.InvalidResponse(result));\n        }\n\n        try {\n          requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\n        } catch (err) {\n          requests[index].callback(err);\n        }\n      }\n    });\n  });\n}; // Sort responses\n\n\nBatch.prototype._sortResponses = function (responses) {\n  return (responses || []).sort((a, b) => a.id - b.id);\n};\n\nmodule.exports = Batch;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/web3-core-requestmanager/lib/batch.js"],"names":["Jsonrpc","require","errors","Batch","requestManager","requests","prototype","add","request","push","execute","sortResponses","_sortResponses","bind","sendBatch","err","results","map","index","forEach","result","callback","error","ErrorResponse","isValidResponse","InvalidResponse","format","responses","sort","a","b","id","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,mBAAD,CAAP,CAA6BC,MAA1C;;AACA,IAAIC,KAAK,GAAG,UAAUC,cAAV,EAA0B;AAClC,OAAKA,cAAL,GAAsBA,cAAtB;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACH,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACG,SAAN,CAAgBC,GAAhB,GAAsB,UAAUC,OAAV,EAAmB;AACrC,OAAKH,QAAL,CAAcI,IAAd,CAAmBD,OAAnB;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACAL,KAAK,CAACG,SAAN,CAAgBI,OAAhB,GAA0B,YAAY;AAClC,MAAIL,QAAQ,GAAG,KAAKA,QAApB;;AACA,MAAIM,aAAa,GAAG,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAApB;;AACA,OAAKT,cAAL,CAAoBU,SAApB,CAA8BT,QAA9B,EAAwC,UAAUU,GAAV,EAAeC,OAAf,EAAwB;AAC5DA,IAAAA,OAAO,GAAGL,aAAa,CAACK,OAAD,CAAvB;AACAX,IAAAA,QAAQ,CAACY,GAAT,CAAa,UAAUT,OAAV,EAAmBU,KAAnB,EAA0B;AACnC,aAAOF,OAAO,CAACE,KAAD,CAAP,IAAkB,EAAzB;AACH,KAFD,EAEGC,OAFH,CAEW,UAAUC,MAAV,EAAkBF,KAAlB,EAAyB;AAChC,UAAIb,QAAQ,CAACa,KAAD,CAAR,CAAgBG,QAApB,EAA8B;AAC1B,YAAID,MAAM,IAAIA,MAAM,CAACE,KAArB,EAA4B;AACxB,iBAAOjB,QAAQ,CAACa,KAAD,CAAR,CAAgBG,QAAhB,CAAyBnB,MAAM,CAACqB,aAAP,CAAqBH,MAArB,CAAzB,CAAP;AACH;;AACD,YAAI,CAACpB,OAAO,CAACwB,eAAR,CAAwBJ,MAAxB,CAAL,EAAsC;AAClC,iBAAOf,QAAQ,CAACa,KAAD,CAAR,CAAgBG,QAAhB,CAAyBnB,MAAM,CAACuB,eAAP,CAAuBL,MAAvB,CAAzB,CAAP;AACH;;AACD,YAAI;AACAf,UAAAA,QAAQ,CAACa,KAAD,CAAR,CAAgBG,QAAhB,CAAyB,IAAzB,EAA+BhB,QAAQ,CAACa,KAAD,CAAR,CAAgBQ,MAAhB,GAAyBrB,QAAQ,CAACa,KAAD,CAAR,CAAgBQ,MAAhB,CAAuBN,MAAM,CAACA,MAA9B,CAAzB,GAAiEA,MAAM,CAACA,MAAvG;AACH,SAFD,CAGA,OAAOL,GAAP,EAAY;AACRV,UAAAA,QAAQ,CAACa,KAAD,CAAR,CAAgBG,QAAhB,CAAyBN,GAAzB;AACH;AACJ;AACJ,KAjBD;AAkBH,GApBD;AAqBH,CAxBD,C,CAyBA;;;AACAZ,KAAK,CAACG,SAAN,CAAgBM,cAAhB,GAAiC,UAAUe,SAAV,EAAqB;AAClD,SAAO,CAACA,SAAS,IAAI,EAAd,EAAkBC,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAA1C,CAAP;AACH,CAFD;;AAGAC,MAAM,CAACC,OAAP,GAAiB9B,KAAjB","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\"use strict\";\nvar Jsonrpc = require('./jsonrpc');\nvar errors = require('web3-core-helpers').errors;\nvar Batch = function (requestManager) {\n    this.requestManager = requestManager;\n    this.requests = [];\n};\n/**\n * Should be called to add create new request to batch request\n *\n * @method add\n * @param {Object} jsonrpc requet object\n */\nBatch.prototype.add = function (request) {\n    this.requests.push(request);\n};\n/**\n * Should be called to execute batch request\n *\n * @method execute\n */\nBatch.prototype.execute = function () {\n    var requests = this.requests;\n    var sortResponses = this._sortResponses.bind(this);\n    this.requestManager.sendBatch(requests, function (err, results) {\n        results = sortResponses(results);\n        requests.map(function (request, index) {\n            return results[index] || {};\n        }).forEach(function (result, index) {\n            if (requests[index].callback) {\n                if (result && result.error) {\n                    return requests[index].callback(errors.ErrorResponse(result));\n                }\n                if (!Jsonrpc.isValidResponse(result)) {\n                    return requests[index].callback(errors.InvalidResponse(result));\n                }\n                try {\n                    requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\n                }\n                catch (err) {\n                    requests[index].callback(err);\n                }\n            }\n        });\n    });\n};\n// Sort responses\nBatch.prototype._sortResponses = function (responses) {\n    return (responses || []).sort((a, b) => a.id - b.id);\n};\nmodule.exports = Batch;\n"]},"metadata":{},"sourceType":"script"}