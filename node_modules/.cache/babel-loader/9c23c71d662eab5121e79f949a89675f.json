{"ast":null,"code":"export const approveERC1155 = async (pos_client, rootTokenAddress) => {\n  const tx = await pos_client.approveERC1155ForDeposit(rootTokenAddress);\n  console.log(\"approve\", tx.transactionHash);\n  return tx;\n};\nexport const depositERC1155 = async (pos_client, rootTokenAddress, receiverAddress, tokenIds, tokenAmounts) => {\n  const tx = await pos_client.depositBatchERC1155ForUser(rootTokenAddress, receiverAddress, tokenIds, tokenAmounts);\n  console.log(\"deposit\", tx.transactionHash);\n  return tx;\n};\nexport const burnBatchERC1155 = async (pos_client, childTokenAddress, tokenIds, tokenAmounts) => {\n  const tx = await pos_client.burnBatchERC1155(childTokenAddress, tokenIds, tokenAmounts);\n  console.log(tx, tx.transactionHash);\n  return tx.transactionHash;\n};\nexport const exitERC1155 = async (pos_client, txnHash) => {\n  const tx = await pos_client.exitBatchERC1155(txnHash // { from: from }\n  // from address already set in defaults\n  );\n  console.log(tx, tx.transactionHash);\n  return tx.transactionHash;\n};","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/src/utils/erc1155.js"],"names":["approveERC1155","pos_client","rootTokenAddress","tx","approveERC1155ForDeposit","console","log","transactionHash","depositERC1155","receiverAddress","tokenIds","tokenAmounts","depositBatchERC1155ForUser","burnBatchERC1155","childTokenAddress","exitERC1155","txnHash","exitBatchERC1155"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,OAAOC,UAAP,EAAmBC,gBAAnB,KAAwC;AAClE,QAAMC,EAAE,GAAG,MAAMF,UAAU,CAACG,wBAAX,CAAoCF,gBAApC,CAAjB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,EAAE,CAACI,eAA1B;AACA,SAAOJ,EAAP;AACH,CAJM;AAMP,OAAO,MAAMK,cAAc,GAAG,OAAOP,UAAP,EAAmBC,gBAAnB,EAAqCO,eAArC,EAAsDC,QAAtD,EAA+DC,YAA/D,KAAgF;AAC1G,QAAMR,EAAE,GAAG,MAAMF,UAAU,CAACW,0BAAX,CACbV,gBADa,EAEbO,eAFa,EAGbC,QAHa,EAIbC,YAJa,CAAjB;AAMAN,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,EAAE,CAACI,eAA1B;AACA,SAAOJ,EAAP;AACH,CATM;AAWP,OAAO,MAAMU,gBAAgB,GAAG,OAAOZ,UAAP,EAAmBa,iBAAnB,EAAsCJ,QAAtC,EAAgDC,YAAhD,KAAiE;AAC7F,QAAMR,EAAE,GAAG,MAAMF,UAAU,CAACY,gBAAX,CACbC,iBADa,EAEbJ,QAFa,EAGbC,YAHa,CAAjB;AAKAN,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBA,EAAE,CAACI,eAAnB;AACA,SAAOJ,EAAE,CAACI,eAAV;AACH,CARM;AAUP,OAAO,MAAMQ,WAAW,GAAG,OAAOd,UAAP,EAAmBe,OAAnB,KAA+B;AACtD,QAAMb,EAAE,GAAG,MAAMF,UAAU,CAACgB,gBAAX,CACbD,OADa,CAEb;AACA;AAHa,GAAjB;AAKAX,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBA,EAAE,CAACI,eAAnB;AACA,SAAOJ,EAAE,CAACI,eAAV;AACH,CARM","sourcesContent":["export const approveERC1155 = async (pos_client, rootTokenAddress) => {\n    const tx = await pos_client.approveERC1155ForDeposit(rootTokenAddress);\n    console.log(\"approve\", tx.transactionHash)\n    return tx;\n}\n\nexport const depositERC1155 = async (pos_client, rootTokenAddress, receiverAddress, tokenIds,tokenAmounts) => {\n    const tx = await pos_client.depositBatchERC1155ForUser(\n        rootTokenAddress,\n        receiverAddress,\n        tokenIds,\n        tokenAmounts,\n    )\n    console.log(\"deposit\", tx.transactionHash);\n    return tx;\n}\n\nexport const burnBatchERC1155 = async (pos_client, childTokenAddress, tokenIds, tokenAmounts) => {\n    const tx = await pos_client.burnBatchERC1155(\n        childTokenAddress,\n        tokenIds,\n        tokenAmounts,\n    )\n    console.log(tx, tx.transactionHash);\n    return tx.transactionHash;\n}\n\nexport const exitERC1155 = async (pos_client, txnHash) => {\n    const tx = await pos_client.exitBatchERC1155(\n        txnHash,\n        // { from: from }\n        // from address already set in defaults\n    )\n    console.log(tx, tx.transactionHash);\n    return tx.transactionHash;\n}\n"]},"metadata":{},"sourceType":"module"}