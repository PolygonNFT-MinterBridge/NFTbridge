{"ast":null,"code":"var punycode = require('punycode');\n\nvar entities = require('./entities.json');\n\nmodule.exports = decode;\n\nfunction decode(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a String');\n  }\n\n  return str.replace(/&(#?[^;\\W]+;?)/g, function (_, match) {\n    var m;\n\n    if (m = /^#(\\d+);?$/.exec(match)) {\n      return punycode.ucs2.encode([parseInt(m[1], 10)]);\n    } else if (m = /^#[Xx]([A-Fa-f0-9]+);?/.exec(match)) {\n      return punycode.ucs2.encode([parseInt(m[1], 16)]);\n    } else {\n      // named entity\n      var hasSemi = /;$/.test(match);\n      var withoutSemi = hasSemi ? match.replace(/;$/, '') : match;\n      var target = entities[withoutSemi] || hasSemi && entities[match];\n\n      if (typeof target === 'number') {\n        return punycode.ucs2.encode([target]);\n      } else if (typeof target === 'string') {\n        return target;\n      } else {\n        return '&' + match;\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/ent/decode.js"],"names":["punycode","require","entities","module","exports","decode","str","TypeError","replace","_","match","m","exec","ucs2","encode","parseInt","hasSemi","test","withoutSemi","target"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AAEA,SAASA,MAAT,CAAiBC,GAAjB,EAAsB;AAClB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,UAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACH;;AAED,SAAOD,GAAG,CAACE,OAAJ,CAAY,iBAAZ,EAA+B,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AACtD,QAAIC,CAAJ;;AACA,QAAIA,CAAC,GAAG,aAAaC,IAAb,CAAkBF,KAAlB,CAAR,EAAkC;AAC9B,aAAOV,QAAQ,CAACa,IAAT,CAAcC,MAAd,CAAqB,CAAEC,QAAQ,CAACJ,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAV,CAArB,CAAP;AACH,KAFD,MAEO,IAAIA,CAAC,GAAG,yBAAyBC,IAAzB,CAA8BF,KAA9B,CAAR,EAA8C;AACjD,aAAOV,QAAQ,CAACa,IAAT,CAAcC,MAAd,CAAqB,CAAEC,QAAQ,CAACJ,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAV,CAArB,CAAP;AACH,KAFM,MAEA;AACH;AACA,UAAIK,OAAO,GAAG,KAAKC,IAAL,CAAUP,KAAV,CAAd;AACA,UAAIQ,WAAW,GAAGF,OAAO,GAAGN,KAAK,CAACF,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAH,GAA6BE,KAAtD;AACA,UAAIS,MAAM,GAAGjB,QAAQ,CAACgB,WAAD,CAAR,IAA0BF,OAAO,IAAId,QAAQ,CAACQ,KAAD,CAA1D;;AAEA,UAAI,OAAOS,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,eAAOnB,QAAQ,CAACa,IAAT,CAAcC,MAAd,CAAqB,CAAEK,MAAF,CAArB,CAAP;AACH,OAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AACnC,eAAOA,MAAP;AACH,OAFM,MAEA;AACH,eAAO,MAAMT,KAAb;AACH;AACJ;AACJ,GApBM,CAAP;AAqBH","sourcesContent":["var punycode = require('punycode');\nvar entities = require('./entities.json');\n\nmodule.exports = decode;\n\nfunction decode (str) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Expected a String');\n    }\n\n    return str.replace(/&(#?[^;\\W]+;?)/g, function (_, match) {\n        var m;\n        if (m = /^#(\\d+);?$/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 10) ]);\n        } else if (m = /^#[Xx]([A-Fa-f0-9]+);?/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 16) ]);\n        } else {\n            // named entity\n            var hasSemi = /;$/.test(match);\n            var withoutSemi = hasSemi ? match.replace(/;$/, '') : match;\n            var target = entities[withoutSemi] || (hasSemi && entities[match]);\n\n            if (typeof target === 'number') {\n                return punycode.ucs2.encode([ target ]);\n            } else if (typeof target === 'string') {\n                return target;\n            } else {\n                return '&' + match;\n            }\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"script"}