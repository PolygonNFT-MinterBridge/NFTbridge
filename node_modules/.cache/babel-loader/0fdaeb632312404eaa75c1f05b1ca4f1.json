{"ast":null,"code":"/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirebaseApp = exports.FirebaseAppInternals = void 0;\n\nvar credential_internal_1 = require(\"./credential/credential-internal\");\n\nvar validator = require(\"./utils/validator\");\n\nvar deep_copy_1 = require(\"./utils/deep-copy\");\n\nvar error_1 = require(\"./utils/error\");\n\nvar TOKEN_EXPIRY_THRESHOLD_MILLIS = 5 * 60 * 1000;\n/**\n * Internals of a FirebaseApp instance.\n */\n\nvar FirebaseAppInternals =\n/** @class */\nfunction () {\n  function FirebaseAppInternals(credential_) {\n    this.credential_ = credential_;\n    this.tokenListeners_ = [];\n  }\n\n  FirebaseAppInternals.prototype.getToken = function (forceRefresh) {\n    if (forceRefresh === void 0) {\n      forceRefresh = false;\n    }\n\n    if (forceRefresh || this.shouldRefresh()) {\n      return this.refreshToken();\n    }\n\n    return Promise.resolve(this.cachedToken_);\n  };\n\n  FirebaseAppInternals.prototype.refreshToken = function () {\n    var _this = this;\n\n    return Promise.resolve(this.credential_.getAccessToken()).then(function (result) {\n      // Since the developer can provide the credential implementation, we want to weakly verify\n      // the return type until the type is properly exported.\n      if (!validator.isNonNullObject(result) || typeof result.expires_in !== 'number' || typeof result.access_token !== 'string') {\n        throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, \"Invalid access token generated: \\\"\" + JSON.stringify(result) + \"\\\". Valid access \" + 'tokens must be an object with the \"expires_in\" (number) and \"access_token\" ' + '(string) properties.');\n      }\n\n      var token = {\n        accessToken: result.access_token,\n        expirationTime: Date.now() + result.expires_in * 1000\n      };\n\n      if (!_this.cachedToken_ || _this.cachedToken_.accessToken !== token.accessToken || _this.cachedToken_.expirationTime !== token.expirationTime) {\n        _this.cachedToken_ = token;\n\n        _this.tokenListeners_.forEach(function (listener) {\n          listener(token.accessToken);\n        });\n      }\n\n      return token;\n    }).catch(function (error) {\n      var errorMessage = typeof error === 'string' ? error : error.message;\n      errorMessage = 'Credential implementation provided to initializeApp() via the ' + '\"credential\" property failed to fetch a valid Google OAuth2 access token with the ' + (\"following error: \\\"\" + errorMessage + \"\\\".\");\n\n      if (errorMessage.indexOf('invalid_grant') !== -1) {\n        errorMessage += ' There are two likely causes: (1) your server time is not properly ' + 'synced or (2) your certificate key file has been revoked. To solve (1), re-sync the ' + 'time on your server. To solve (2), make sure the key ID for your key file is still ' + 'present at https://console.firebase.google.com/iam-admin/serviceaccounts/project. If ' + 'not, generate a new key file at ' + 'https://console.firebase.google.com/project/_/settings/serviceaccounts/adminsdk.';\n      }\n\n      throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n    });\n  };\n\n  FirebaseAppInternals.prototype.shouldRefresh = function () {\n    return !this.cachedToken_ || this.cachedToken_.expirationTime - Date.now() <= TOKEN_EXPIRY_THRESHOLD_MILLIS;\n  };\n  /**\n   * Adds a listener that is called each time a token changes.\n   *\n   * @param listener The listener that will be called with each new token.\n   */\n\n\n  FirebaseAppInternals.prototype.addAuthTokenListener = function (listener) {\n    this.tokenListeners_.push(listener);\n\n    if (this.cachedToken_) {\n      listener(this.cachedToken_.accessToken);\n    }\n  };\n  /**\n   * Removes a token listener.\n   *\n   * @param listener The listener to remove.\n   */\n\n\n  FirebaseAppInternals.prototype.removeAuthTokenListener = function (listener) {\n    this.tokenListeners_ = this.tokenListeners_.filter(function (other) {\n      return other !== listener;\n    });\n  };\n\n  return FirebaseAppInternals;\n}();\n\nexports.FirebaseAppInternals = FirebaseAppInternals;\n/**\n * Global context object for a collection of services using a shared authentication state.\n */\n\nvar FirebaseApp =\n/** @class */\nfunction () {\n  function FirebaseApp(options, name, firebaseInternals_) {\n    this.firebaseInternals_ = firebaseInternals_;\n    this.services_ = {};\n    this.isDeleted_ = false;\n    this.name_ = name;\n    this.options_ = deep_copy_1.deepCopy(options);\n\n    if (!validator.isNonNullObject(this.options_)) {\n      throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' + (\"app named \\\"\" + this.name_ + \"\\\". Options must be a non-null object.\"));\n    }\n\n    var hasCredential = ('credential' in this.options_);\n\n    if (!hasCredential) {\n      this.options_.credential = credential_internal_1.getApplicationDefault(this.options_.httpAgent);\n    }\n\n    var credential = this.options_.credential;\n\n    if (typeof credential !== 'object' || credential === null || typeof credential.getAccessToken !== 'function') {\n      throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' + (\"app named \\\"\" + this.name_ + \"\\\". The \\\"credential\\\" property must be an object which implements \") + 'the Credential interface.');\n    }\n\n    this.INTERNAL = new FirebaseAppInternals(credential);\n  }\n  /**\n   * Returns the Auth service instance associated with this app.\n   *\n   * @return The Auth service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.auth = function () {\n    var _this = this;\n\n    return this.ensureService_('auth', function () {\n      var authService = require('./auth/auth').Auth;\n\n      return new authService(_this);\n    });\n  };\n  /**\n   * Returns the Database service for the specified URL, and the current app.\n   *\n   * @return The Database service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.database = function (url) {\n    var _this = this;\n\n    var service = this.ensureService_('database', function () {\n      var dbService = require('./database/database-internal').DatabaseService;\n\n      return new dbService(_this);\n    });\n    return service.getDatabase(url);\n  };\n  /**\n   * Returns the Messaging service instance associated with this app.\n   *\n   * @return The Messaging service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.messaging = function () {\n    var _this = this;\n\n    return this.ensureService_('messaging', function () {\n      var messagingService = require('./messaging/messaging').Messaging;\n\n      return new messagingService(_this);\n    });\n  };\n  /**\n   * Returns the Storage service instance associated with this app.\n   *\n   * @return The Storage service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.storage = function () {\n    var _this = this;\n\n    return this.ensureService_('storage', function () {\n      var storageService = require('./storage/storage').Storage;\n\n      return new storageService(_this);\n    });\n  };\n\n  FirebaseApp.prototype.firestore = function () {\n    var _this = this;\n\n    var service = this.ensureService_('firestore', function () {\n      var firestoreService = require('./firestore/firestore-internal').FirestoreService;\n\n      return new firestoreService(_this);\n    });\n    return service.client;\n  };\n  /**\n   * Returns the InstanceId service instance associated with this app.\n   *\n   * @return The InstanceId service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.instanceId = function () {\n    var _this = this;\n\n    return this.ensureService_('iid', function () {\n      var iidService = require('./instance-id/instance-id').InstanceId;\n\n      return new iidService(_this);\n    });\n  };\n  /**\n   * Returns the MachineLearning service instance associated with this app.\n   *\n   * @return The Machine Learning service instance of this app\n   */\n\n\n  FirebaseApp.prototype.machineLearning = function () {\n    var _this = this;\n\n    return this.ensureService_('machine-learning', function () {\n      var machineLearningService = require('./machine-learning/machine-learning').MachineLearning;\n\n      return new machineLearningService(_this);\n    });\n  };\n  /**\n   * Returns the ProjectManagement service instance associated with this app.\n   *\n   * @return The ProjectManagement service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.projectManagement = function () {\n    var _this = this;\n\n    return this.ensureService_('project-management', function () {\n      var projectManagementService = require('./project-management/project-management').ProjectManagement;\n\n      return new projectManagementService(_this);\n    });\n  };\n  /**\n   * Returns the SecurityRules service instance associated with this app.\n   *\n   * @return The SecurityRules service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.securityRules = function () {\n    var _this = this;\n\n    return this.ensureService_('security-rules', function () {\n      var securityRulesService = require('./security-rules/security-rules').SecurityRules;\n\n      return new securityRulesService(_this);\n    });\n  };\n  /**\n   * Returns the RemoteConfig service instance associated with this app.\n   *\n   * @return The RemoteConfig service instance of this app.\n   */\n\n\n  FirebaseApp.prototype.remoteConfig = function () {\n    var _this = this;\n\n    return this.ensureService_('remoteConfig', function () {\n      var remoteConfigService = require('./remote-config/remote-config').RemoteConfig;\n\n      return new remoteConfigService(_this);\n    });\n  };\n\n  Object.defineProperty(FirebaseApp.prototype, \"name\", {\n    /**\n     * Returns the name of the FirebaseApp instance.\n     *\n     * @return The name of the FirebaseApp instance.\n     */\n    get: function () {\n      this.checkDestroyed_();\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseApp.prototype, \"options\", {\n    /**\n     * Returns the options for the FirebaseApp instance.\n     *\n     * @return The options for the FirebaseApp instance.\n     */\n    get: function () {\n      this.checkDestroyed_();\n      return deep_copy_1.deepCopy(this.options_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Deletes the FirebaseApp instance.\n   *\n   * @return An empty Promise fulfilled once the FirebaseApp instance is deleted.\n   */\n\n  FirebaseApp.prototype.delete = function () {\n    var _this = this;\n\n    this.checkDestroyed_();\n    this.firebaseInternals_.removeApp(this.name_);\n    return Promise.all(Object.keys(this.services_).map(function (serviceName) {\n      var service = _this.services_[serviceName];\n\n      if (isStateful(service)) {\n        return service.delete();\n      }\n\n      return Promise.resolve();\n    })).then(function () {\n      _this.services_ = {};\n      _this.isDeleted_ = true;\n    });\n  };\n\n  FirebaseApp.prototype.ensureService_ = function (serviceName, initializer) {\n    this.checkDestroyed_();\n\n    if (!(serviceName in this.services_)) {\n      this.services_[serviceName] = initializer();\n    }\n\n    return this.services_[serviceName];\n  };\n  /**\n   * Throws an Error if the FirebaseApp instance has already been deleted.\n   */\n\n\n  FirebaseApp.prototype.checkDestroyed_ = function () {\n    if (this.isDeleted_) {\n      throw new error_1.FirebaseAppError(error_1.AppErrorCodes.APP_DELETED, \"Firebase app named \\\"\" + this.name_ + \"\\\" has already been deleted.\");\n    }\n  };\n\n  return FirebaseApp;\n}();\n\nexports.FirebaseApp = FirebaseApp;\n\nfunction isStateful(service) {\n  return typeof service.delete === 'function';\n}","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/firebase-admin/lib/firebase-app.js"],"names":["Object","defineProperty","exports","value","FirebaseApp","FirebaseAppInternals","credential_internal_1","require","validator","deep_copy_1","error_1","TOKEN_EXPIRY_THRESHOLD_MILLIS","credential_","tokenListeners_","prototype","getToken","forceRefresh","shouldRefresh","refreshToken","Promise","resolve","cachedToken_","_this","getAccessToken","then","result","isNonNullObject","expires_in","access_token","FirebaseAppError","AppErrorCodes","INVALID_CREDENTIAL","JSON","stringify","token","accessToken","expirationTime","Date","now","forEach","listener","catch","error","errorMessage","message","indexOf","addAuthTokenListener","push","removeAuthTokenListener","filter","other","options","name","firebaseInternals_","services_","isDeleted_","name_","options_","deepCopy","INVALID_APP_OPTIONS","hasCredential","credential","getApplicationDefault","httpAgent","INTERNAL","auth","ensureService_","authService","Auth","database","url","service","dbService","DatabaseService","getDatabase","messaging","messagingService","Messaging","storage","storageService","Storage","firestore","firestoreService","FirestoreService","client","instanceId","iidService","InstanceId","machineLearning","machineLearningService","MachineLearning","projectManagement","projectManagementService","ProjectManagement","securityRules","securityRulesService","SecurityRules","remoteConfig","remoteConfigService","RemoteConfig","get","checkDestroyed_","enumerable","configurable","delete","removeApp","all","keys","map","serviceName","isStateful","initializer","APP_DELETED"],"mappings":"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","sourcesContent":["/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FirebaseApp = exports.FirebaseAppInternals = void 0;\nvar credential_internal_1 = require(\"./credential/credential-internal\");\nvar validator = require(\"./utils/validator\");\nvar deep_copy_1 = require(\"./utils/deep-copy\");\nvar error_1 = require(\"./utils/error\");\nvar TOKEN_EXPIRY_THRESHOLD_MILLIS = 5 * 60 * 1000;\n/**\n * Internals of a FirebaseApp instance.\n */\nvar FirebaseAppInternals = /** @class */ (function () {\n    function FirebaseAppInternals(credential_) {\n        this.credential_ = credential_;\n        this.tokenListeners_ = [];\n    }\n    FirebaseAppInternals.prototype.getToken = function (forceRefresh) {\n        if (forceRefresh === void 0) { forceRefresh = false; }\n        if (forceRefresh || this.shouldRefresh()) {\n            return this.refreshToken();\n        }\n        return Promise.resolve(this.cachedToken_);\n    };\n    FirebaseAppInternals.prototype.refreshToken = function () {\n        var _this = this;\n        return Promise.resolve(this.credential_.getAccessToken())\n            .then(function (result) {\n            // Since the developer can provide the credential implementation, we want to weakly verify\n            // the return type until the type is properly exported.\n            if (!validator.isNonNullObject(result) ||\n                typeof result.expires_in !== 'number' ||\n                typeof result.access_token !== 'string') {\n                throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, \"Invalid access token generated: \\\"\" + JSON.stringify(result) + \"\\\". Valid access \" +\n                    'tokens must be an object with the \"expires_in\" (number) and \"access_token\" ' +\n                    '(string) properties.');\n            }\n            var token = {\n                accessToken: result.access_token,\n                expirationTime: Date.now() + (result.expires_in * 1000),\n            };\n            if (!_this.cachedToken_\n                || _this.cachedToken_.accessToken !== token.accessToken\n                || _this.cachedToken_.expirationTime !== token.expirationTime) {\n                _this.cachedToken_ = token;\n                _this.tokenListeners_.forEach(function (listener) {\n                    listener(token.accessToken);\n                });\n            }\n            return token;\n        })\n            .catch(function (error) {\n            var errorMessage = (typeof error === 'string') ? error : error.message;\n            errorMessage = 'Credential implementation provided to initializeApp() via the ' +\n                '\"credential\" property failed to fetch a valid Google OAuth2 access token with the ' +\n                (\"following error: \\\"\" + errorMessage + \"\\\".\");\n            if (errorMessage.indexOf('invalid_grant') !== -1) {\n                errorMessage += ' There are two likely causes: (1) your server time is not properly ' +\n                    'synced or (2) your certificate key file has been revoked. To solve (1), re-sync the ' +\n                    'time on your server. To solve (2), make sure the key ID for your key file is still ' +\n                    'present at https://console.firebase.google.com/iam-admin/serviceaccounts/project. If ' +\n                    'not, generate a new key file at ' +\n                    'https://console.firebase.google.com/project/_/settings/serviceaccounts/adminsdk.';\n            }\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_CREDENTIAL, errorMessage);\n        });\n    };\n    FirebaseAppInternals.prototype.shouldRefresh = function () {\n        return !this.cachedToken_ || (this.cachedToken_.expirationTime - Date.now()) <= TOKEN_EXPIRY_THRESHOLD_MILLIS;\n    };\n    /**\n     * Adds a listener that is called each time a token changes.\n     *\n     * @param listener The listener that will be called with each new token.\n     */\n    FirebaseAppInternals.prototype.addAuthTokenListener = function (listener) {\n        this.tokenListeners_.push(listener);\n        if (this.cachedToken_) {\n            listener(this.cachedToken_.accessToken);\n        }\n    };\n    /**\n     * Removes a token listener.\n     *\n     * @param listener The listener to remove.\n     */\n    FirebaseAppInternals.prototype.removeAuthTokenListener = function (listener) {\n        this.tokenListeners_ = this.tokenListeners_.filter(function (other) { return other !== listener; });\n    };\n    return FirebaseAppInternals;\n}());\nexports.FirebaseAppInternals = FirebaseAppInternals;\n/**\n * Global context object for a collection of services using a shared authentication state.\n */\nvar FirebaseApp = /** @class */ (function () {\n    function FirebaseApp(options, name, firebaseInternals_) {\n        this.firebaseInternals_ = firebaseInternals_;\n        this.services_ = {};\n        this.isDeleted_ = false;\n        this.name_ = name;\n        this.options_ = deep_copy_1.deepCopy(options);\n        if (!validator.isNonNullObject(this.options_)) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' +\n                (\"app named \\\"\" + this.name_ + \"\\\". Options must be a non-null object.\"));\n        }\n        var hasCredential = ('credential' in this.options_);\n        if (!hasCredential) {\n            this.options_.credential = credential_internal_1.getApplicationDefault(this.options_.httpAgent);\n        }\n        var credential = this.options_.credential;\n        if (typeof credential !== 'object' || credential === null || typeof credential.getAccessToken !== 'function') {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.INVALID_APP_OPTIONS, 'Invalid Firebase app options passed as the first argument to initializeApp() for the ' +\n                (\"app named \\\"\" + this.name_ + \"\\\". The \\\"credential\\\" property must be an object which implements \") +\n                'the Credential interface.');\n        }\n        this.INTERNAL = new FirebaseAppInternals(credential);\n    }\n    /**\n     * Returns the Auth service instance associated with this app.\n     *\n     * @return The Auth service instance of this app.\n     */\n    FirebaseApp.prototype.auth = function () {\n        var _this = this;\n        return this.ensureService_('auth', function () {\n            var authService = require('./auth/auth').Auth;\n            return new authService(_this);\n        });\n    };\n    /**\n     * Returns the Database service for the specified URL, and the current app.\n     *\n     * @return The Database service instance of this app.\n     */\n    FirebaseApp.prototype.database = function (url) {\n        var _this = this;\n        var service = this.ensureService_('database', function () {\n            var dbService = require('./database/database-internal').DatabaseService;\n            return new dbService(_this);\n        });\n        return service.getDatabase(url);\n    };\n    /**\n     * Returns the Messaging service instance associated with this app.\n     *\n     * @return The Messaging service instance of this app.\n     */\n    FirebaseApp.prototype.messaging = function () {\n        var _this = this;\n        return this.ensureService_('messaging', function () {\n            var messagingService = require('./messaging/messaging').Messaging;\n            return new messagingService(_this);\n        });\n    };\n    /**\n     * Returns the Storage service instance associated with this app.\n     *\n     * @return The Storage service instance of this app.\n     */\n    FirebaseApp.prototype.storage = function () {\n        var _this = this;\n        return this.ensureService_('storage', function () {\n            var storageService = require('./storage/storage').Storage;\n            return new storageService(_this);\n        });\n    };\n    FirebaseApp.prototype.firestore = function () {\n        var _this = this;\n        var service = this.ensureService_('firestore', function () {\n            var firestoreService = require('./firestore/firestore-internal').FirestoreService;\n            return new firestoreService(_this);\n        });\n        return service.client;\n    };\n    /**\n     * Returns the InstanceId service instance associated with this app.\n     *\n     * @return The InstanceId service instance of this app.\n     */\n    FirebaseApp.prototype.instanceId = function () {\n        var _this = this;\n        return this.ensureService_('iid', function () {\n            var iidService = require('./instance-id/instance-id').InstanceId;\n            return new iidService(_this);\n        });\n    };\n    /**\n     * Returns the MachineLearning service instance associated with this app.\n     *\n     * @return The Machine Learning service instance of this app\n     */\n    FirebaseApp.prototype.machineLearning = function () {\n        var _this = this;\n        return this.ensureService_('machine-learning', function () {\n            var machineLearningService = require('./machine-learning/machine-learning').MachineLearning;\n            return new machineLearningService(_this);\n        });\n    };\n    /**\n     * Returns the ProjectManagement service instance associated with this app.\n     *\n     * @return The ProjectManagement service instance of this app.\n     */\n    FirebaseApp.prototype.projectManagement = function () {\n        var _this = this;\n        return this.ensureService_('project-management', function () {\n            var projectManagementService = require('./project-management/project-management').ProjectManagement;\n            return new projectManagementService(_this);\n        });\n    };\n    /**\n     * Returns the SecurityRules service instance associated with this app.\n     *\n     * @return The SecurityRules service instance of this app.\n     */\n    FirebaseApp.prototype.securityRules = function () {\n        var _this = this;\n        return this.ensureService_('security-rules', function () {\n            var securityRulesService = require('./security-rules/security-rules').SecurityRules;\n            return new securityRulesService(_this);\n        });\n    };\n    /**\n     * Returns the RemoteConfig service instance associated with this app.\n     *\n     * @return The RemoteConfig service instance of this app.\n     */\n    FirebaseApp.prototype.remoteConfig = function () {\n        var _this = this;\n        return this.ensureService_('remoteConfig', function () {\n            var remoteConfigService = require('./remote-config/remote-config').RemoteConfig;\n            return new remoteConfigService(_this);\n        });\n    };\n    Object.defineProperty(FirebaseApp.prototype, \"name\", {\n        /**\n         * Returns the name of the FirebaseApp instance.\n         *\n         * @return The name of the FirebaseApp instance.\n         */\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseApp.prototype, \"options\", {\n        /**\n         * Returns the options for the FirebaseApp instance.\n         *\n         * @return The options for the FirebaseApp instance.\n         */\n        get: function () {\n            this.checkDestroyed_();\n            return deep_copy_1.deepCopy(this.options_);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Deletes the FirebaseApp instance.\n     *\n     * @return An empty Promise fulfilled once the FirebaseApp instance is deleted.\n     */\n    FirebaseApp.prototype.delete = function () {\n        var _this = this;\n        this.checkDestroyed_();\n        this.firebaseInternals_.removeApp(this.name_);\n        return Promise.all(Object.keys(this.services_).map(function (serviceName) {\n            var service = _this.services_[serviceName];\n            if (isStateful(service)) {\n                return service.delete();\n            }\n            return Promise.resolve();\n        })).then(function () {\n            _this.services_ = {};\n            _this.isDeleted_ = true;\n        });\n    };\n    FirebaseApp.prototype.ensureService_ = function (serviceName, initializer) {\n        this.checkDestroyed_();\n        if (!(serviceName in this.services_)) {\n            this.services_[serviceName] = initializer();\n        }\n        return this.services_[serviceName];\n    };\n    /**\n     * Throws an Error if the FirebaseApp instance has already been deleted.\n     */\n    FirebaseApp.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            throw new error_1.FirebaseAppError(error_1.AppErrorCodes.APP_DELETED, \"Firebase app named \\\"\" + this.name_ + \"\\\" has already been deleted.\");\n        }\n    };\n    return FirebaseApp;\n}());\nexports.FirebaseApp = FirebaseApp;\nfunction isStateful(service) {\n    return typeof service.delete === 'function';\n}\n"]},"metadata":{},"sourceType":"script"}