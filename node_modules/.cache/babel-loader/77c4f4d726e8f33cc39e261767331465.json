{"ast":null,"code":"/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SecurityRulesApiClient = void 0;\n\nvar api_request_1 = require(\"../utils/api-request\");\n\nvar error_1 = require(\"../utils/error\");\n\nvar security_rules_internal_1 = require(\"./security-rules-internal\");\n\nvar utils = require(\"../utils/index\");\n\nvar validator = require(\"../utils/validator\");\n\nvar RULES_V1_API = 'https://firebaserules.googleapis.com/v1';\nvar FIREBASE_VERSION_HEADER = {\n  'X-Firebase-Client': \"fire-admin-node/\" + utils.getSdkVersion()\n};\n/**\n * Class that facilitates sending requests to the Firebase security rules backend API.\n *\n * @private\n */\n\nvar SecurityRulesApiClient =\n/** @class */\nfunction () {\n  function SecurityRulesApiClient(app) {\n    this.app = app;\n\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'First argument passed to admin.securityRules() must be a valid Firebase app ' + 'instance.');\n    }\n\n    this.httpClient = new api_request_1.AuthorizedHttpClient(app);\n  }\n\n  SecurityRulesApiClient.prototype.getRuleset = function (name) {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.getRulesetName(name);\n    }).then(function (rulesetName) {\n      return _this.getResource(rulesetName);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.createRuleset = function (ruleset) {\n    var _this = this;\n\n    if (!validator.isNonNullObject(ruleset) || !validator.isNonNullObject(ruleset.source) || !validator.isNonEmptyArray(ruleset.source.files)) {\n      var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Invalid rules content.');\n      return Promise.reject(err);\n    }\n\n    for (var _i = 0, _a = ruleset.source.files; _i < _a.length; _i++) {\n      var rf = _a[_i];\n\n      if (!validator.isNonNullObject(rf) || !validator.isNonEmptyString(rf.name) || !validator.isNonEmptyString(rf.content)) {\n        var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', \"Invalid rules file argument: \" + JSON.stringify(rf));\n        return Promise.reject(err);\n      }\n    }\n\n    return this.getUrl().then(function (url) {\n      var request = {\n        method: 'POST',\n        url: url + \"/rulesets\",\n        data: ruleset\n      };\n      return _this.sendRequest(request);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.deleteRuleset = function (name) {\n    var _this = this;\n\n    return this.getUrl().then(function (url) {\n      var rulesetName = _this.getRulesetName(name);\n\n      var request = {\n        method: 'DELETE',\n        url: url + \"/\" + rulesetName\n      };\n      return _this.sendRequest(request);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.listRulesets = function (pageSize, pageToken) {\n    var _this = this;\n\n    if (pageSize === void 0) {\n      pageSize = 100;\n    }\n\n    if (!validator.isNumber(pageSize)) {\n      var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Invalid page size.');\n      return Promise.reject(err);\n    }\n\n    if (pageSize < 1 || pageSize > 100) {\n      var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Page size must be between 1 and 100.');\n      return Promise.reject(err);\n    }\n\n    if (typeof pageToken !== 'undefined' && !validator.isNonEmptyString(pageToken)) {\n      var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Next page token must be a non-empty string.');\n      return Promise.reject(err);\n    }\n\n    var data = {\n      pageSize: pageSize,\n      pageToken: pageToken\n    };\n\n    if (!pageToken) {\n      delete data.pageToken;\n    }\n\n    return this.getUrl().then(function (url) {\n      var request = {\n        method: 'GET',\n        url: url + \"/rulesets\",\n        data: data\n      };\n      return _this.sendRequest(request);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.getRelease = function (name) {\n    return this.getResource(\"releases/\" + name);\n  };\n\n  SecurityRulesApiClient.prototype.updateRelease = function (name, rulesetName) {\n    var _this = this;\n\n    return this.getUrl().then(function (url) {\n      return _this.getReleaseDescription(name, rulesetName).then(function (release) {\n        var request = {\n          method: 'PATCH',\n          url: url + \"/releases/\" + name,\n          data: {\n            release: release\n          }\n        };\n        return _this.sendRequest(request);\n      });\n    });\n  };\n\n  SecurityRulesApiClient.prototype.getUrl = function () {\n    return this.getProjectIdPrefix().then(function (projectIdPrefix) {\n      return RULES_V1_API + \"/\" + projectIdPrefix;\n    });\n  };\n\n  SecurityRulesApiClient.prototype.getProjectIdPrefix = function () {\n    var _this = this;\n\n    if (this.projectIdPrefix) {\n      return Promise.resolve(this.projectIdPrefix);\n    }\n\n    return utils.findProjectId(this.app).then(function (projectId) {\n      if (!validator.isNonEmptyString(projectId)) {\n        throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Failed to determine project ID. Initialize the SDK with service account credentials, or ' + 'set project ID as an app option. Alternatively, set the GOOGLE_CLOUD_PROJECT ' + 'environment variable.');\n      }\n\n      _this.projectIdPrefix = \"projects/\" + projectId;\n      return _this.projectIdPrefix;\n    });\n  };\n  /**\n   * Gets the specified resource from the rules API. Resource names must be the short names without project\n   * ID prefix (e.g. `rulesets/ruleset-name`).\n   *\n   * @param {string} name Full qualified name of the resource to get.\n   * @returns {Promise<T>} A promise that fulfills with the resource.\n   */\n\n\n  SecurityRulesApiClient.prototype.getResource = function (name) {\n    var _this = this;\n\n    return this.getUrl().then(function (url) {\n      var request = {\n        method: 'GET',\n        url: url + \"/\" + name\n      };\n      return _this.sendRequest(request);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.getReleaseDescription = function (name, rulesetName) {\n    var _this = this;\n\n    return this.getProjectIdPrefix().then(function (projectIdPrefix) {\n      return {\n        name: projectIdPrefix + \"/releases/\" + name,\n        rulesetName: projectIdPrefix + \"/\" + _this.getRulesetName(rulesetName)\n      };\n    });\n  };\n\n  SecurityRulesApiClient.prototype.getRulesetName = function (name) {\n    if (!validator.isNonEmptyString(name)) {\n      throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Ruleset name must be a non-empty string.');\n    }\n\n    if (name.indexOf('/') !== -1) {\n      throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Ruleset name must not contain any \"/\" characters.');\n    }\n\n    return \"rulesets/\" + name;\n  };\n\n  SecurityRulesApiClient.prototype.sendRequest = function (request) {\n    var _this = this;\n\n    request.headers = FIREBASE_VERSION_HEADER;\n    return this.httpClient.send(request).then(function (resp) {\n      return resp.data;\n    }).catch(function (err) {\n      throw _this.toFirebaseError(err);\n    });\n  };\n\n  SecurityRulesApiClient.prototype.toFirebaseError = function (err) {\n    if (err instanceof error_1.PrefixedFirebaseError) {\n      return err;\n    }\n\n    var response = err.response;\n\n    if (!response.isJson()) {\n      return new security_rules_internal_1.FirebaseSecurityRulesError('unknown-error', \"Unexpected response with status: \" + response.status + \" and body: \" + response.text);\n    }\n\n    var error = response.data.error || {};\n    var code = 'unknown-error';\n\n    if (error.status && error.status in ERROR_CODE_MAPPING) {\n      code = ERROR_CODE_MAPPING[error.status];\n    }\n\n    var message = error.message || \"Unknown server error: \" + response.text;\n    return new security_rules_internal_1.FirebaseSecurityRulesError(code, message);\n  };\n\n  return SecurityRulesApiClient;\n}();\n\nexports.SecurityRulesApiClient = SecurityRulesApiClient;\nvar ERROR_CODE_MAPPING = {\n  INVALID_ARGUMENT: 'invalid-argument',\n  NOT_FOUND: 'not-found',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  UNAUTHENTICATED: 'authentication-error',\n  UNKNOWN: 'unknown-error'\n};","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/firebase-admin/lib/security-rules/security-rules-api-client-internal.js"],"names":["Object","defineProperty","exports","value","SecurityRulesApiClient","api_request_1","require","error_1","security_rules_internal_1","utils","validator","RULES_V1_API","FIREBASE_VERSION_HEADER","getSdkVersion","app","isNonNullObject","FirebaseSecurityRulesError","httpClient","AuthorizedHttpClient","prototype","getRuleset","name","_this","Promise","resolve","then","getRulesetName","rulesetName","getResource","createRuleset","ruleset","source","isNonEmptyArray","files","err","reject","_i","_a","length","rf","isNonEmptyString","content","JSON","stringify","getUrl","url","request","method","data","sendRequest","deleteRuleset","listRulesets","pageSize","pageToken","isNumber","getRelease","updateRelease","getReleaseDescription","release","getProjectIdPrefix","projectIdPrefix","findProjectId","projectId","indexOf","headers","send","resp","catch","toFirebaseError","PrefixedFirebaseError","response","isJson","status","text","error","code","ERROR_CODE_MAPPING","message","INVALID_ARGUMENT","NOT_FOUND","RESOURCE_EXHAUSTED","UNAUTHENTICATED","UNKNOWN"],"mappings":"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","sourcesContent":["/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SecurityRulesApiClient = void 0;\nvar api_request_1 = require(\"../utils/api-request\");\nvar error_1 = require(\"../utils/error\");\nvar security_rules_internal_1 = require(\"./security-rules-internal\");\nvar utils = require(\"../utils/index\");\nvar validator = require(\"../utils/validator\");\nvar RULES_V1_API = 'https://firebaserules.googleapis.com/v1';\nvar FIREBASE_VERSION_HEADER = {\n    'X-Firebase-Client': \"fire-admin-node/\" + utils.getSdkVersion(),\n};\n/**\n * Class that facilitates sending requests to the Firebase security rules backend API.\n *\n * @private\n */\nvar SecurityRulesApiClient = /** @class */ (function () {\n    function SecurityRulesApiClient(app) {\n        this.app = app;\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'First argument passed to admin.securityRules() must be a valid Firebase app '\n                + 'instance.');\n        }\n        this.httpClient = new api_request_1.AuthorizedHttpClient(app);\n    }\n    SecurityRulesApiClient.prototype.getRuleset = function (name) {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.getRulesetName(name);\n        })\n            .then(function (rulesetName) {\n            return _this.getResource(rulesetName);\n        });\n    };\n    SecurityRulesApiClient.prototype.createRuleset = function (ruleset) {\n        var _this = this;\n        if (!validator.isNonNullObject(ruleset) ||\n            !validator.isNonNullObject(ruleset.source) ||\n            !validator.isNonEmptyArray(ruleset.source.files)) {\n            var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Invalid rules content.');\n            return Promise.reject(err);\n        }\n        for (var _i = 0, _a = ruleset.source.files; _i < _a.length; _i++) {\n            var rf = _a[_i];\n            if (!validator.isNonNullObject(rf) ||\n                !validator.isNonEmptyString(rf.name) ||\n                !validator.isNonEmptyString(rf.content)) {\n                var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', \"Invalid rules file argument: \" + JSON.stringify(rf));\n                return Promise.reject(err);\n            }\n        }\n        return this.getUrl()\n            .then(function (url) {\n            var request = {\n                method: 'POST',\n                url: url + \"/rulesets\",\n                data: ruleset,\n            };\n            return _this.sendRequest(request);\n        });\n    };\n    SecurityRulesApiClient.prototype.deleteRuleset = function (name) {\n        var _this = this;\n        return this.getUrl()\n            .then(function (url) {\n            var rulesetName = _this.getRulesetName(name);\n            var request = {\n                method: 'DELETE',\n                url: url + \"/\" + rulesetName,\n            };\n            return _this.sendRequest(request);\n        });\n    };\n    SecurityRulesApiClient.prototype.listRulesets = function (pageSize, pageToken) {\n        var _this = this;\n        if (pageSize === void 0) { pageSize = 100; }\n        if (!validator.isNumber(pageSize)) {\n            var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Invalid page size.');\n            return Promise.reject(err);\n        }\n        if (pageSize < 1 || pageSize > 100) {\n            var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Page size must be between 1 and 100.');\n            return Promise.reject(err);\n        }\n        if (typeof pageToken !== 'undefined' && !validator.isNonEmptyString(pageToken)) {\n            var err = new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Next page token must be a non-empty string.');\n            return Promise.reject(err);\n        }\n        var data = {\n            pageSize: pageSize,\n            pageToken: pageToken,\n        };\n        if (!pageToken) {\n            delete data.pageToken;\n        }\n        return this.getUrl()\n            .then(function (url) {\n            var request = {\n                method: 'GET',\n                url: url + \"/rulesets\",\n                data: data,\n            };\n            return _this.sendRequest(request);\n        });\n    };\n    SecurityRulesApiClient.prototype.getRelease = function (name) {\n        return this.getResource(\"releases/\" + name);\n    };\n    SecurityRulesApiClient.prototype.updateRelease = function (name, rulesetName) {\n        var _this = this;\n        return this.getUrl()\n            .then(function (url) {\n            return _this.getReleaseDescription(name, rulesetName)\n                .then(function (release) {\n                var request = {\n                    method: 'PATCH',\n                    url: url + \"/releases/\" + name,\n                    data: { release: release },\n                };\n                return _this.sendRequest(request);\n            });\n        });\n    };\n    SecurityRulesApiClient.prototype.getUrl = function () {\n        return this.getProjectIdPrefix()\n            .then(function (projectIdPrefix) {\n            return RULES_V1_API + \"/\" + projectIdPrefix;\n        });\n    };\n    SecurityRulesApiClient.prototype.getProjectIdPrefix = function () {\n        var _this = this;\n        if (this.projectIdPrefix) {\n            return Promise.resolve(this.projectIdPrefix);\n        }\n        return utils.findProjectId(this.app)\n            .then(function (projectId) {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Failed to determine project ID. Initialize the SDK with service account credentials, or '\n                    + 'set project ID as an app option. Alternatively, set the GOOGLE_CLOUD_PROJECT '\n                    + 'environment variable.');\n            }\n            _this.projectIdPrefix = \"projects/\" + projectId;\n            return _this.projectIdPrefix;\n        });\n    };\n    /**\n     * Gets the specified resource from the rules API. Resource names must be the short names without project\n     * ID prefix (e.g. `rulesets/ruleset-name`).\n     *\n     * @param {string} name Full qualified name of the resource to get.\n     * @returns {Promise<T>} A promise that fulfills with the resource.\n     */\n    SecurityRulesApiClient.prototype.getResource = function (name) {\n        var _this = this;\n        return this.getUrl()\n            .then(function (url) {\n            var request = {\n                method: 'GET',\n                url: url + \"/\" + name,\n            };\n            return _this.sendRequest(request);\n        });\n    };\n    SecurityRulesApiClient.prototype.getReleaseDescription = function (name, rulesetName) {\n        var _this = this;\n        return this.getProjectIdPrefix()\n            .then(function (projectIdPrefix) {\n            return {\n                name: projectIdPrefix + \"/releases/\" + name,\n                rulesetName: projectIdPrefix + \"/\" + _this.getRulesetName(rulesetName),\n            };\n        });\n    };\n    SecurityRulesApiClient.prototype.getRulesetName = function (name) {\n        if (!validator.isNonEmptyString(name)) {\n            throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Ruleset name must be a non-empty string.');\n        }\n        if (name.indexOf('/') !== -1) {\n            throw new security_rules_internal_1.FirebaseSecurityRulesError('invalid-argument', 'Ruleset name must not contain any \"/\" characters.');\n        }\n        return \"rulesets/\" + name;\n    };\n    SecurityRulesApiClient.prototype.sendRequest = function (request) {\n        var _this = this;\n        request.headers = FIREBASE_VERSION_HEADER;\n        return this.httpClient.send(request)\n            .then(function (resp) {\n            return resp.data;\n        })\n            .catch(function (err) {\n            throw _this.toFirebaseError(err);\n        });\n    };\n    SecurityRulesApiClient.prototype.toFirebaseError = function (err) {\n        if (err instanceof error_1.PrefixedFirebaseError) {\n            return err;\n        }\n        var response = err.response;\n        if (!response.isJson()) {\n            return new security_rules_internal_1.FirebaseSecurityRulesError('unknown-error', \"Unexpected response with status: \" + response.status + \" and body: \" + response.text);\n        }\n        var error = response.data.error || {};\n        var code = 'unknown-error';\n        if (error.status && error.status in ERROR_CODE_MAPPING) {\n            code = ERROR_CODE_MAPPING[error.status];\n        }\n        var message = error.message || \"Unknown server error: \" + response.text;\n        return new security_rules_internal_1.FirebaseSecurityRulesError(code, message);\n    };\n    return SecurityRulesApiClient;\n}());\nexports.SecurityRulesApiClient = SecurityRulesApiClient;\nvar ERROR_CODE_MAPPING = {\n    INVALID_ARGUMENT: 'invalid-argument',\n    NOT_FOUND: 'not-found',\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\n    UNAUTHENTICATED: 'authentication-error',\n    UNKNOWN: 'unknown-error',\n};\n"]},"metadata":{},"sourceType":"script"}