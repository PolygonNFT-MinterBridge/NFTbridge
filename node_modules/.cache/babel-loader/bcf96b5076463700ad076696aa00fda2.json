{"ast":null,"code":"/**\n * @preserve date-and-time (c) KNOWLEDGECODE | MIT\n */\nvar date = {},\n    locales = {},\n    plugins = {},\n    lang = 'en',\n    _res = {\n  MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  A: ['AM', 'PM']\n},\n    _formatter = {\n  YYYY: function (d\n  /*, formatString*/\n  ) {\n    return ('000' + d.getFullYear()).slice(-4);\n  },\n  YY: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getFullYear()).slice(-2);\n  },\n  Y: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getFullYear();\n  },\n  MMMM: function (d\n  /*, formatString*/\n  ) {\n    return this.res.MMMM[d.getMonth()];\n  },\n  MMM: function (d\n  /*, formatString*/\n  ) {\n    return this.res.MMM[d.getMonth()];\n  },\n  MM: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getMonth() + 1)).slice(-2);\n  },\n  M: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getMonth() + 1);\n  },\n  DD: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getDate()).slice(-2);\n  },\n  D: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getDate();\n  },\n  HH: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getHours()).slice(-2);\n  },\n  H: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getHours();\n  },\n  A: function (d\n  /*, formatString*/\n  ) {\n    return this.res.A[d.getHours() > 11 | 0];\n  },\n  hh: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getHours() % 12 || 12)).slice(-2);\n  },\n  h: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getHours() % 12 || 12);\n  },\n  mm: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getMinutes()).slice(-2);\n  },\n  m: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getMinutes();\n  },\n  ss: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getSeconds()).slice(-2);\n  },\n  s: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getSeconds();\n  },\n  SSS: function (d\n  /*, formatString*/\n  ) {\n    return ('00' + d.getMilliseconds()).slice(-3);\n  },\n  SS: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2);\n  },\n  S: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getMilliseconds() / 100 | 0);\n  },\n  dddd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.dddd[d.getDay()];\n  },\n  ddd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.ddd[d.getDay()];\n  },\n  dd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.dd[d.getDay()];\n  },\n  Z: function (d\n  /*, formatString*/\n  ) {\n    var offset = d.utc ? 0 : d.getTimezoneOffset() / 0.6;\n    return (offset > 0 ? '-' : '+') + ('000' + Math.abs(offset - offset % 100 * 0.4)).slice(-4);\n  },\n  post: function (str) {\n    return str;\n  }\n},\n    _parser = {\n  YYYY: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{4}/, str);\n  },\n  Y: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{1,4}/, str);\n  },\n  MMMM: function (str\n  /*, formatString */\n  ) {\n    var result = this.find(this.res.MMMM, str);\n    result.value++;\n    return result;\n  },\n  MMM: function (str\n  /*, formatString */\n  ) {\n    var result = this.find(this.res.MMM, str);\n    result.value++;\n    return result;\n  },\n  MM: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  M: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  DD: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  D: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  HH: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  H: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  A: function (str\n  /*, formatString */\n  ) {\n    return this.find(this.res.A, str);\n  },\n  hh: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  h: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  mm: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  m: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  ss: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  s: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  SSS: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{1,3}/, str);\n  },\n  SS: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^\\d\\d?/, str);\n    result.value *= 10;\n    return result;\n  },\n  S: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^\\d/, str);\n    result.value *= 100;\n    return result;\n  },\n  Z: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n    result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n    return result;\n  },\n  h12: function (h, a) {\n    return (h === 12 ? 0 : h) + a * 12;\n  },\n  exec: function (re, str) {\n    var result = (re.exec(str) || [''])[0];\n    return {\n      value: result | 0,\n      length: result.length\n    };\n  },\n  find: function (array, str) {\n    var index = -1,\n        length = 0;\n\n    for (var i = 0, len = array.length, item; i < len; i++) {\n      item = array[i];\n\n      if (!str.indexOf(item) && item.length > length) {\n        index = i;\n        length = item.length;\n      }\n    }\n\n    return {\n      value: index,\n      length: length\n    };\n  },\n  pre: function (str) {\n    return str;\n  }\n},\n    customize = function (code, base, locale) {\n  var extend = function (proto, props, res) {\n    var Locale = function (r) {\n      if (r) {\n        this.res = r;\n      }\n    };\n\n    Locale.prototype = proto;\n    Locale.prototype.constructor = Locale;\n    var newLocale = new Locale(res),\n        value;\n\n    for (var key in props || {}) {\n      value = props[key];\n      newLocale[key] = value.slice ? value.slice() : value;\n    }\n\n    return newLocale;\n  },\n      loc = {\n    res: extend(base.res, locale.res)\n  };\n\n  loc.formatter = extend(base.formatter, locale.formatter, loc.res);\n  loc.parser = extend(base.parser, locale.parser, loc.res);\n  locales[code] = loc;\n};\n/**\n * Compiling a format string\n * @param {string} formatString - a format string\n * @returns {Array.<string>} a compiled object\n */\n\n\ndate.compile = function (formatString) {\n  var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g,\n      keys,\n      pattern = [formatString];\n\n  while (keys = re.exec(formatString)) {\n    pattern[pattern.length] = keys[0];\n  }\n\n  return pattern;\n};\n/**\n * Formatting a Date and Time\n * @param {Date} dateObj - a Date object\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\n\n\ndate.format = function (dateObj, arg, utc) {\n  var pattern = typeof arg === 'string' ? date.compile(arg) : arg,\n      d = date.addMinutes(dateObj, utc ? dateObj.getTimezoneOffset() : 0),\n      formatter = locales[lang].formatter,\n      str = '';\n  d.utc = utc || false;\n\n  for (var i = 1, len = pattern.length, token; i < len; i++) {\n    token = pattern[i];\n    str += formatter[token] ? formatter.post(formatter[token](d, pattern[0])) : token.replace(/\\[(.*)]/, '$1');\n  }\n\n  return str;\n};\n/**\n * Pre-parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @returns {Object} a date structure\n */\n\n\ndate.preparse = function (dateString, arg) {\n  var pattern = typeof arg === 'string' ? date.compile(arg) : arg,\n      dt = {\n    Y: 1970,\n    M: 1,\n    D: 1,\n    H: 0,\n    A: 0,\n    h: 0,\n    m: 0,\n    s: 0,\n    S: 0,\n    Z: 0,\n    _index: 0,\n    _length: 0,\n    _match: 0\n  },\n      comment = /\\[(.*)]/,\n      parser = locales[lang].parser,\n      offset = 0;\n  dateString = parser.pre(dateString);\n\n  for (var i = 1, len = pattern.length, token, result; i < len; i++) {\n    token = pattern[i];\n\n    if (parser[token]) {\n      result = parser[token](dateString.slice(offset), pattern[0]);\n\n      if (!result.length) {\n        break;\n      }\n\n      offset += result.length;\n      dt[token.charAt(0)] = result.value;\n      dt._match++;\n    } else if (token === dateString.charAt(offset) || token === ' ') {\n      offset++;\n    } else if (comment.test(token) && !dateString.slice(offset).indexOf(comment.exec(token)[1])) {\n      offset += token.length - 2;\n    } else if (token === '...') {\n      offset = dateString.length;\n      break;\n    } else {\n      break;\n    }\n  }\n\n  dt.H = dt.H || parser.h12(dt.h, dt.A);\n  dt._index = offset;\n  dt._length = dateString.length;\n  return dt;\n};\n/**\n * Validation\n * @param {Object|string} arg1 - a date structure or a date string\n * @param {string|Array.<string>} [arg2] - a format string or its compiled object\n * @returns {boolean} whether the date string is a valid date\n */\n\n\ndate.isValid = function (arg1, arg2) {\n  var dt = typeof arg1 === 'string' ? date.preparse(arg1, arg2) : arg1,\n      last = [31, 28 + date.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n  return !(dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 || dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last || dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 || dt.Z < -720 || dt.Z > 840);\n};\n/**\n * Parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - input as UTC\n * @returns {Date} a constructed date\n */\n\n\ndate.parse = function (dateString, arg, utc) {\n  var dt = date.preparse(dateString, arg);\n\n  if (date.isValid(dt)) {\n    dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n\n    if (utc || dt.Z) {\n      return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n    }\n\n    return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n  }\n\n  return new Date(NaN);\n};\n/**\n * Transforming a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg1 - a format string or its compiled object\n * @param {string|Array.<string>} arg2 - a transformed format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\n\n\ndate.transform = function (dateString, arg1, arg2, utc) {\n  return date.format(date.parse(dateString, arg1), arg2, utc);\n};\n/**\n * Adding years\n * @param {Date} dateObj - a date object\n * @param {number} years - number of years to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addYears = function (dateObj, years) {\n  return date.addMonths(dateObj, years * 12);\n};\n/**\n * Adding months\n * @param {Date} dateObj - a date object\n * @param {number} months - number of months to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addMonths = function (dateObj, months) {\n  var d = new Date(dateObj.getTime());\n  d.setMonth(d.getMonth() + months);\n  return d;\n};\n/**\n * Adding days\n * @param {Date} dateObj - a date object\n * @param {number} days - number of days to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addDays = function (dateObj, days) {\n  var d = new Date(dateObj.getTime());\n  d.setDate(d.getDate() + days);\n  return d;\n};\n/**\n * Adding hours\n * @param {Date} dateObj - a date object\n * @param {number} hours - number of hours to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addHours = function (dateObj, hours) {\n  return date.addMinutes(dateObj, hours * 60);\n};\n/**\n * Adding minutes\n * @param {Date} dateObj - a date object\n * @param {number} minutes - number of minutes to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addMinutes = function (dateObj, minutes) {\n  return date.addSeconds(dateObj, minutes * 60);\n};\n/**\n * Adding seconds\n * @param {Date} dateObj - a date object\n * @param {number} seconds - number of seconds to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addSeconds = function (dateObj, seconds) {\n  return date.addMilliseconds(dateObj, seconds * 1000);\n};\n/**\n * Adding milliseconds\n * @param {Date} dateObj - a date object\n * @param {number} milliseconds - number of milliseconds to add\n * @returns {Date} a date after adding the value\n */\n\n\ndate.addMilliseconds = function (dateObj, milliseconds) {\n  return new Date(dateObj.getTime() + milliseconds);\n};\n/**\n * Subtracting two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {Object} a result object subtracting date2 from date1\n */\n\n\ndate.subtract = function (date1, date2) {\n  var delta = date1.getTime() - date2.getTime();\n  return {\n    toMilliseconds: function () {\n      return delta;\n    },\n    toSeconds: function () {\n      return delta / 1000;\n    },\n    toMinutes: function () {\n      return delta / 60000;\n    },\n    toHours: function () {\n      return delta / 3600000;\n    },\n    toDays: function () {\n      return delta / 86400000;\n    }\n  };\n};\n/**\n * Whether year is leap year\n * @param {number} y - year\n * @returns {boolean} whether year is leap year\n */\n\n\ndate.isLeapYear = function (y) {\n  return !(y % 4) && !!(y % 100) || !(y % 400);\n};\n/**\n * Comparison of two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {boolean} whether the two dates are the same day (time is ignored)\n */\n\n\ndate.isSameDay = function (date1, date2) {\n  return date1.toDateString() === date2.toDateString();\n};\n/**\n * Changing the locale or defining new locales\n * @param {Function|string} [code] - locale installer | language code\n * @param {Object} [locale] - locale definition\n * @returns {string} current language code\n */\n\n\ndate.locale = function (code, locale) {\n  if (locale) {\n    customize(code, {\n      res: _res,\n      formatter: _formatter,\n      parser: _parser\n    }, locale);\n  } else {\n    lang = (typeof code === 'function' ? code : date.locale[code] || function () {})(date) || lang;\n  }\n\n  return lang;\n};\n/**\n * Feature extension\n * @param {Object} extension - extension object\n * @returns {void}\n */\n\n\ndate.extend = function (extension) {\n  var extender = extension.extender || {};\n\n  for (var key in extender) {\n    if (!date[key]) {\n      date[key] = extender[key];\n    }\n  }\n\n  if (extension.formatter || extension.parser || extension.res) {\n    customize(lang, locales[lang], extension);\n  }\n};\n/**\n * Importing or defining plugins\n * @param {Function|string} name - plugin installer | plugin name\n * @param {Object} [plugin] - plugin object\n * @returns {void}\n */\n\n\ndate.plugin = function (name, plugin) {\n  if (plugin) {\n    if (!plugins[name]) {\n      date.extend(plugins[name] = plugin);\n    }\n  } else {\n    (typeof name === 'function' ? name : date.plugin[name] || function () {})(date);\n  }\n}; // Create default locale (English)\n\n\ndate.locale(lang, {});\nexport default date;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/date-and-time/esm/date-and-time.es.js"],"names":["date","locales","plugins","lang","_res","MMMM","MMM","dddd","ddd","dd","A","_formatter","YYYY","d","getFullYear","slice","YY","Y","res","getMonth","MM","M","DD","getDate","D","HH","getHours","H","hh","h","mm","getMinutes","m","ss","getSeconds","s","SSS","getMilliseconds","SS","S","getDay","Z","offset","utc","getTimezoneOffset","Math","abs","post","str","_parser","exec","result","find","value","h12","a","re","length","array","index","i","len","item","indexOf","pre","customize","code","base","locale","extend","proto","props","Locale","r","prototype","constructor","newLocale","key","loc","formatter","parser","compile","formatString","keys","pattern","format","dateObj","arg","addMinutes","token","replace","preparse","dateString","dt","_index","_length","_match","comment","charAt","test","isValid","arg1","arg2","last","isLeapYear","parse","Date","UTC","NaN","transform","addYears","years","addMonths","months","getTime","setMonth","addDays","days","setDate","addHours","hours","minutes","addSeconds","seconds","addMilliseconds","milliseconds","subtract","date1","date2","delta","toMilliseconds","toSeconds","toMinutes","toHours","toDays","y","isSameDay","toDateString","extension","extender","plugin","name"],"mappings":"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","sourcesContent":["/**\n * @preserve date-and-time (c) KNOWLEDGECODE | MIT\n */\n\nvar date = {},\n    locales = {},\n    plugins = {},\n    lang = 'en',\n    _res = {\n        MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        A: ['AM', 'PM']\n    },\n    _formatter = {\n        YYYY: function (d/*, formatString*/) { return ('000' + d.getFullYear()).slice(-4); },\n        YY: function (d/*, formatString*/) { return ('0' + d.getFullYear()).slice(-2); },\n        Y: function (d/*, formatString*/) { return '' + d.getFullYear(); },\n        MMMM: function (d/*, formatString*/) { return this.res.MMMM[d.getMonth()]; },\n        MMM: function (d/*, formatString*/) { return this.res.MMM[d.getMonth()]; },\n        MM: function (d/*, formatString*/) { return ('0' + (d.getMonth() + 1)).slice(-2); },\n        M: function (d/*, formatString*/) { return '' + (d.getMonth() + 1); },\n        DD: function (d/*, formatString*/) { return ('0' + d.getDate()).slice(-2); },\n        D: function (d/*, formatString*/) { return '' + d.getDate(); },\n        HH: function (d/*, formatString*/) { return ('0' + d.getHours()).slice(-2); },\n        H: function (d/*, formatString*/) { return '' + d.getHours(); },\n        A: function (d/*, formatString*/) { return this.res.A[d.getHours() > 11 | 0]; },\n        hh: function (d/*, formatString*/) { return ('0' + (d.getHours() % 12 || 12)).slice(-2); },\n        h: function (d/*, formatString*/) { return '' + (d.getHours() % 12 || 12); },\n        mm: function (d/*, formatString*/) { return ('0' + d.getMinutes()).slice(-2); },\n        m: function (d/*, formatString*/) { return '' + d.getMinutes(); },\n        ss: function (d/*, formatString*/) { return ('0' + d.getSeconds()).slice(-2); },\n        s: function (d/*, formatString*/) { return '' + d.getSeconds(); },\n        SSS: function (d/*, formatString*/) { return ('00' + d.getMilliseconds()).slice(-3); },\n        SS: function (d/*, formatString*/) { return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2); },\n        S: function (d/*, formatString*/) { return '' + (d.getMilliseconds() / 100 | 0); },\n        dddd: function (d/*, formatString*/) { return this.res.dddd[d.getDay()]; },\n        ddd: function (d/*, formatString*/) { return this.res.ddd[d.getDay()]; },\n        dd: function (d/*, formatString*/) { return this.res.dd[d.getDay()]; },\n        Z: function (d/*, formatString*/) {\n            var offset = d.utc ? 0 : d.getTimezoneOffset() / 0.6;\n            return (offset > 0 ? '-' : '+') + ('000' + Math.abs(offset - offset % 100 * 0.4)).slice(-4);\n        },\n        post: function (str) { return str; }\n    },\n    _parser = {\n        YYYY: function (str/*, formatString */) { return this.exec(/^\\d{4}/, str); },\n        Y: function (str/*, formatString */) { return this.exec(/^\\d{1,4}/, str); },\n        MMMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMMM, str);\n            result.value++;\n            return result;\n        },\n        MMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMM, str);\n            result.value++;\n            return result;\n        },\n        MM: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        M: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        DD: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        D: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        HH: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        H: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        A: function (str/*, formatString */) { return this.find(this.res.A, str); },\n        hh: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        h: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        mm: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        m: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        ss: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        s: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        SSS: function (str/*, formatString */) { return this.exec(/^\\d{1,3}/, str); },\n        SS: function (str/*, formatString */) {\n            var result = this.exec(/^\\d\\d?/, str);\n            result.value *= 10;\n            return result;\n        },\n        S: function (str/*, formatString */) {\n            var result = this.exec(/^\\d/, str);\n            result.value *= 100;\n            return result;\n        },\n        Z: function (str/*, formatString */) {\n            var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n            result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n            return result;\n        },\n        h12: function (h, a) { return (h === 12 ? 0 : h) + a * 12; },\n        exec: function (re, str) {\n            var result = (re.exec(str) || [''])[0];\n            return { value: result | 0, length: result.length };\n        },\n        find: function (array, str) {\n            var index = -1, length = 0;\n\n            for (var i = 0, len = array.length, item; i < len; i++) {\n                item = array[i];\n                if (!str.indexOf(item) && item.length > length) {\n                    index = i;\n                    length = item.length;\n                }\n            }\n            return { value: index, length: length };\n        },\n        pre: function (str) { return str; }\n    },\n    customize = function (code, base, locale) {\n        var extend = function (proto, props, res) {\n                var Locale = function (r) {\n                    if (r) { this.res = r; }\n                };\n\n                Locale.prototype = proto;\n                Locale.prototype.constructor = Locale;\n\n                var newLocale = new Locale(res),\n                    value;\n\n                for (var key in props || {}) {\n                    value = props[key];\n                    newLocale[key] = value.slice ? value.slice() : value;\n                }\n                return newLocale;\n            },\n            loc = { res: extend(base.res, locale.res) };\n\n        loc.formatter = extend(base.formatter, locale.formatter, loc.res);\n        loc.parser = extend(base.parser, locale.parser, loc.res);\n        locales[code] = loc;\n    };\n\n/**\n * Compiling a format string\n * @param {string} formatString - a format string\n * @returns {Array.<string>} a compiled object\n */\ndate.compile = function (formatString) {\n    var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g, keys, pattern = [formatString];\n\n    while ((keys = re.exec(formatString))) {\n        pattern[pattern.length] = keys[0];\n    }\n    return pattern;\n};\n\n/**\n * Formatting a Date and Time\n * @param {Date} dateObj - a Date object\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\ndate.format = function (dateObj, arg, utc) {\n    var pattern = typeof arg === 'string' ? date.compile(arg) : arg,\n        d = date.addMinutes(dateObj, utc ? dateObj.getTimezoneOffset() : 0),\n        formatter = locales[lang].formatter, str = '';\n\n    d.utc = utc || false;\n    for (var i = 1, len = pattern.length, token; i < len; i++) {\n        token = pattern[i];\n        str += formatter[token] ? formatter.post(formatter[token](d, pattern[0])) : token.replace(/\\[(.*)]/, '$1');\n    }\n    return str;\n};\n\n/**\n * Pre-parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @returns {Object} a date structure\n */\ndate.preparse = function (dateString, arg) {\n    var pattern = typeof arg === 'string' ? date.compile(arg) : arg,\n        dt = { Y: 1970, M: 1, D: 1, H: 0, A: 0, h: 0, m: 0, s: 0, S: 0, Z: 0, _index: 0, _length: 0, _match: 0 },\n        comment = /\\[(.*)]/, parser = locales[lang].parser, offset = 0;\n\n    dateString = parser.pre(dateString);\n    for (var i = 1, len = pattern.length, token, result; i < len; i++) {\n        token = pattern[i];\n        if (parser[token]) {\n            result = parser[token](dateString.slice(offset), pattern[0]);\n            if (!result.length) {\n                break;\n            }\n            offset += result.length;\n            dt[token.charAt(0)] = result.value;\n            dt._match++;\n        } else if (token === dateString.charAt(offset) || token === ' ') {\n            offset++;\n        } else if (comment.test(token) && !dateString.slice(offset).indexOf(comment.exec(token)[1])) {\n            offset += token.length - 2;\n        } else if (token === '...') {\n            offset = dateString.length;\n            break;\n        } else {\n            break;\n        }\n    }\n    dt.H = dt.H || parser.h12(dt.h, dt.A);\n    dt._index = offset;\n    dt._length = dateString.length;\n    return dt;\n};\n\n/**\n * Validation\n * @param {Object|string} arg1 - a date structure or a date string\n * @param {string|Array.<string>} [arg2] - a format string or its compiled object\n * @returns {boolean} whether the date string is a valid date\n */\ndate.isValid = function (arg1, arg2) {\n    var dt = typeof arg1 === 'string' ? date.preparse(arg1, arg2) : arg1,\n        last = [31, 28 + date.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n\n    return !(\n        dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 ||\n        dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last ||\n        dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 ||\n        dt.Z < -720 || dt.Z > 840\n    );\n};\n\n/**\n * Parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - input as UTC\n * @returns {Date} a constructed date\n */\ndate.parse = function (dateString, arg, utc) {\n    var dt = date.preparse(dateString, arg);\n\n    if (date.isValid(dt)) {\n        dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n        if (utc || dt.Z) {\n            return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n        }\n        return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n    }\n    return new Date(NaN);\n};\n\n/**\n * Transforming a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg1 - a format string or its compiled object\n * @param {string|Array.<string>} arg2 - a transformed format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\ndate.transform = function (dateString, arg1, arg2, utc) {\n    return date.format(date.parse(dateString, arg1), arg2, utc);\n};\n\n/**\n * Adding years\n * @param {Date} dateObj - a date object\n * @param {number} years - number of years to add\n * @returns {Date} a date after adding the value\n */\ndate.addYears = function (dateObj, years) {\n    return date.addMonths(dateObj, years * 12);\n};\n\n/**\n * Adding months\n * @param {Date} dateObj - a date object\n * @param {number} months - number of months to add\n * @returns {Date} a date after adding the value\n */\ndate.addMonths = function (dateObj, months) {\n    var d = new Date(dateObj.getTime());\n\n    d.setMonth(d.getMonth() + months);\n    return d;\n};\n\n/**\n * Adding days\n * @param {Date} dateObj - a date object\n * @param {number} days - number of days to add\n * @returns {Date} a date after adding the value\n */\ndate.addDays = function (dateObj, days) {\n    var d = new Date(dateObj.getTime());\n\n    d.setDate(d.getDate() + days);\n    return d;\n};\n\n/**\n * Adding hours\n * @param {Date} dateObj - a date object\n * @param {number} hours - number of hours to add\n * @returns {Date} a date after adding the value\n */\ndate.addHours = function (dateObj, hours) {\n    return date.addMinutes(dateObj, hours * 60);\n};\n\n/**\n * Adding minutes\n * @param {Date} dateObj - a date object\n * @param {number} minutes - number of minutes to add\n * @returns {Date} a date after adding the value\n */\ndate.addMinutes = function (dateObj, minutes) {\n    return date.addSeconds(dateObj, minutes * 60);\n};\n\n/**\n * Adding seconds\n * @param {Date} dateObj - a date object\n * @param {number} seconds - number of seconds to add\n * @returns {Date} a date after adding the value\n */\ndate.addSeconds = function (dateObj, seconds) {\n    return date.addMilliseconds(dateObj, seconds * 1000);\n};\n\n/**\n * Adding milliseconds\n * @param {Date} dateObj - a date object\n * @param {number} milliseconds - number of milliseconds to add\n * @returns {Date} a date after adding the value\n */\ndate.addMilliseconds = function (dateObj, milliseconds) {\n    return new Date(dateObj.getTime() + milliseconds);\n};\n\n/**\n * Subtracting two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {Object} a result object subtracting date2 from date1\n */\ndate.subtract = function (date1, date2) {\n    var delta = date1.getTime() - date2.getTime();\n\n    return {\n        toMilliseconds: function () {\n            return delta;\n        },\n        toSeconds: function () {\n            return delta / 1000;\n        },\n        toMinutes: function () {\n            return delta / 60000;\n        },\n        toHours: function () {\n            return delta / 3600000;\n        },\n        toDays: function () {\n            return delta / 86400000;\n        }\n    };\n};\n\n/**\n * Whether year is leap year\n * @param {number} y - year\n * @returns {boolean} whether year is leap year\n */\ndate.isLeapYear = function (y) {\n    return (!(y % 4) && !!(y % 100)) || !(y % 400);\n};\n\n/**\n * Comparison of two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {boolean} whether the two dates are the same day (time is ignored)\n */\ndate.isSameDay = function (date1, date2) {\n    return date1.toDateString() === date2.toDateString();\n};\n\n/**\n * Changing the locale or defining new locales\n * @param {Function|string} [code] - locale installer | language code\n * @param {Object} [locale] - locale definition\n * @returns {string} current language code\n */\ndate.locale = function (code, locale) {\n    if (locale) {\n        customize(code, { res: _res, formatter: _formatter, parser: _parser }, locale);\n    } else {\n        lang = (typeof code === 'function' ? code : date.locale[code] || function () {})(date) || lang;\n    }\n    return lang;\n};\n\n/**\n * Feature extension\n * @param {Object} extension - extension object\n * @returns {void}\n */\ndate.extend = function (extension) {\n    var extender = extension.extender || {};\n\n    for (var key in extender) {\n        if (!date[key]) {\n            date[key] = extender[key];\n        }\n    }\n    if (extension.formatter || extension.parser || extension.res) {\n        customize(lang, locales[lang], extension);\n    }\n};\n\n/**\n * Importing or defining plugins\n * @param {Function|string} name - plugin installer | plugin name\n * @param {Object} [plugin] - plugin object\n * @returns {void}\n */\ndate.plugin = function (name, plugin) {\n    if (plugin) {\n        if (!plugins[name]) {\n            date.extend((plugins[name] = plugin));\n        }\n    } else {\n        (typeof name === 'function' ? name : date.plugin[name] || function () {})(date);\n    }\n};\n\n// Create default locale (English)\ndate.locale(lang, {});\n\nexport default date;\n"]},"metadata":{},"sourceType":"module"}