{"ast":null,"code":"/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refreshToken = exports.cert = exports.applicationDefault = void 0;\n\nvar credential_internal_1 = require(\"./credential-internal\");\n\nvar globalAppDefaultCred;\nvar globalCertCreds = {};\nvar globalRefreshTokenCreds = {};\n\nexports.applicationDefault = function (httpAgent) {\n  if (typeof globalAppDefaultCred === 'undefined') {\n    globalAppDefaultCred = credential_internal_1.getApplicationDefault(httpAgent);\n  }\n\n  return globalAppDefaultCred;\n};\n\nexports.cert = function (serviceAccountPathOrObject, httpAgent) {\n  var stringifiedServiceAccount = JSON.stringify(serviceAccountPathOrObject);\n\n  if (!(stringifiedServiceAccount in globalCertCreds)) {\n    globalCertCreds[stringifiedServiceAccount] = new credential_internal_1.ServiceAccountCredential(serviceAccountPathOrObject, httpAgent);\n  }\n\n  return globalCertCreds[stringifiedServiceAccount];\n};\n\nexports.refreshToken = function (refreshTokenPathOrObject, httpAgent) {\n  var stringifiedRefreshToken = JSON.stringify(refreshTokenPathOrObject);\n\n  if (!(stringifiedRefreshToken in globalRefreshTokenCreds)) {\n    globalRefreshTokenCreds[stringifiedRefreshToken] = new credential_internal_1.RefreshTokenCredential(refreshTokenPathOrObject, httpAgent);\n  }\n\n  return globalRefreshTokenCreds[stringifiedRefreshToken];\n};","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/firebase-admin/lib/credential/credential.js"],"names":["Object","defineProperty","exports","value","refreshToken","cert","applicationDefault","credential_internal_1","require","globalAppDefaultCred","globalCertCreds","globalRefreshTokenCreds","httpAgent","getApplicationDefault","serviceAccountPathOrObject","stringifiedServiceAccount","JSON","stringify","ServiceAccountCredential","refreshTokenPathOrObject","stringifiedRefreshToken","RefreshTokenCredential"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,kBAAR,GAA6B,KAAK,CAAxE;;AACA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,uBAAD,CAAnC;;AACA,IAAIC,oBAAJ;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,uBAAuB,GAAG,EAA9B;;AACAT,OAAO,CAACI,kBAAR,GAA6B,UAAUM,SAAV,EAAqB;AAC9C,MAAI,OAAOH,oBAAP,KAAgC,WAApC,EAAiD;AAC7CA,IAAAA,oBAAoB,GAAGF,qBAAqB,CAACM,qBAAtB,CAA4CD,SAA5C,CAAvB;AACH;;AACD,SAAOH,oBAAP;AACH,CALD;;AAMAP,OAAO,CAACG,IAAR,GAAe,UAAUS,0BAAV,EAAsCF,SAAtC,EAAiD;AAC5D,MAAIG,yBAAyB,GAAGC,IAAI,CAACC,SAAL,CAAeH,0BAAf,CAAhC;;AACA,MAAI,EAAEC,yBAAyB,IAAIL,eAA/B,CAAJ,EAAqD;AACjDA,IAAAA,eAAe,CAACK,yBAAD,CAAf,GAA6C,IAAIR,qBAAqB,CAACW,wBAA1B,CAAmDJ,0BAAnD,EAA+EF,SAA/E,CAA7C;AACH;;AACD,SAAOF,eAAe,CAACK,yBAAD,CAAtB;AACH,CAND;;AAOAb,OAAO,CAACE,YAAR,GAAuB,UAAUe,wBAAV,EAAoCP,SAApC,EAA+C;AAClE,MAAIQ,uBAAuB,GAAGJ,IAAI,CAACC,SAAL,CAAeE,wBAAf,CAA9B;;AACA,MAAI,EAAEC,uBAAuB,IAAIT,uBAA7B,CAAJ,EAA2D;AACvDA,IAAAA,uBAAuB,CAACS,uBAAD,CAAvB,GAAmD,IAAIb,qBAAqB,CAACc,sBAA1B,CAAiDF,wBAAjD,EAA2EP,SAA3E,CAAnD;AACH;;AACD,SAAOD,uBAAuB,CAACS,uBAAD,CAA9B;AACH,CAND","sourcesContent":["/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.refreshToken = exports.cert = exports.applicationDefault = void 0;\nvar credential_internal_1 = require(\"./credential-internal\");\nvar globalAppDefaultCred;\nvar globalCertCreds = {};\nvar globalRefreshTokenCreds = {};\nexports.applicationDefault = function (httpAgent) {\n    if (typeof globalAppDefaultCred === 'undefined') {\n        globalAppDefaultCred = credential_internal_1.getApplicationDefault(httpAgent);\n    }\n    return globalAppDefaultCred;\n};\nexports.cert = function (serviceAccountPathOrObject, httpAgent) {\n    var stringifiedServiceAccount = JSON.stringify(serviceAccountPathOrObject);\n    if (!(stringifiedServiceAccount in globalCertCreds)) {\n        globalCertCreds[stringifiedServiceAccount] = new credential_internal_1.ServiceAccountCredential(serviceAccountPathOrObject, httpAgent);\n    }\n    return globalCertCreds[stringifiedServiceAccount];\n};\nexports.refreshToken = function (refreshTokenPathOrObject, httpAgent) {\n    var stringifiedRefreshToken = JSON.stringify(refreshTokenPathOrObject);\n    if (!(stringifiedRefreshToken in globalRefreshTokenCreds)) {\n        globalRefreshTokenCreds[stringifiedRefreshToken] = new credential_internal_1.RefreshTokenCredential(refreshTokenPathOrObject, httpAgent);\n    }\n    return globalRefreshTokenCreds[stringifiedRefreshToken];\n};\n"]},"metadata":{},"sourceType":"script"}