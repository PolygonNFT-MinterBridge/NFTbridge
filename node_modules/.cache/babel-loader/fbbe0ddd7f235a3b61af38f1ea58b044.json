{"ast":null,"code":"/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceId = void 0;\n\nvar error_1 = require(\"../utils/error\");\n\nvar instance_id_request_internal_1 = require(\"./instance-id-request-internal\");\n\nvar validator = require(\"../utils/validator\");\n/**\n * Gets the {@link InstanceId `InstanceId`} service for the\n * current app.\n *\n * @example\n * ```javascript\n * var instanceId = app.instanceId();\n * // The above is shorthand for:\n * // var instanceId = admin.instanceId(app);\n * ```\n *\n * @return The `InstanceId` service for the\n *   current app.\n */\n\n\nvar InstanceId =\n/** @class */\nfunction () {\n  /**\n   * @param {FirebaseApp} app The app for this InstanceId service.\n   * @constructor\n   */\n  function InstanceId(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.instanceId() must be a valid Firebase app instance.');\n    }\n\n    this.app_ = app;\n    this.requestHandler = new instance_id_request_internal_1.FirebaseInstanceIdRequestHandler(app);\n  }\n  /**\n   * Deletes the specified instance ID and the associated data from Firebase.\n   *\n   * Note that Google Analytics for Firebase uses its own form of Instance ID to\n   * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n   * not delete Analytics data. See\n   * [Delete an Instance ID](/support/privacy/manage-iids#delete_an_instance_id)\n   * for more information.\n   *\n   * @param instanceId The instance ID to be deleted.\n   *\n   * @return A promise fulfilled when the instance ID is deleted.\n   */\n\n\n  InstanceId.prototype.deleteInstanceId = function (instanceId) {\n    return this.requestHandler.deleteInstanceId(instanceId).then(function () {// Return nothing on success\n    });\n  };\n\n  Object.defineProperty(InstanceId.prototype, \"app\", {\n    /**\n     * Returns the app associated with this InstanceId instance.\n     *\n     * @return {FirebaseApp} The app associated with this InstanceId instance.\n     */\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return InstanceId;\n}();\n\nexports.InstanceId = InstanceId;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/firebase-admin/lib/instance-id/instance-id.js"],"names":["Object","defineProperty","exports","value","InstanceId","error_1","require","instance_id_request_internal_1","validator","app","isNonNullObject","FirebaseInstanceIdError","InstanceIdClientErrorCode","INVALID_ARGUMENT","app_","requestHandler","FirebaseInstanceIdRequestHandler","prototype","deleteInstanceId","instanceId","then","get","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,8BAA8B,GAAGD,OAAO,CAAC,gCAAD,CAA5C;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,UAAU;AAAG;AAAe,YAAY;AACxC;AACJ;AACA;AACA;AACI,WAASA,UAAT,CAAoBK,GAApB,EAAyB;AACrB,QAAI,CAACD,SAAS,CAACE,eAAV,CAA0BD,GAA1B,CAAD,IAAmC,EAAE,aAAaA,GAAf,CAAvC,EAA4D;AACxD,YAAM,IAAIJ,OAAO,CAACM,uBAAZ,CAAoCN,OAAO,CAACO,yBAAR,CAAkCC,gBAAtE,EAAwF,oFAAxF,CAAN;AACH;;AACD,SAAKC,IAAL,GAAYL,GAAZ;AACA,SAAKM,cAAL,GAAsB,IAAIR,8BAA8B,CAACS,gCAAnC,CAAoEP,GAApE,CAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,UAAU,CAACa,SAAX,CAAqBC,gBAArB,GAAwC,UAAUC,UAAV,EAAsB;AAC1D,WAAO,KAAKJ,cAAL,CAAoBG,gBAApB,CAAqCC,UAArC,EACFC,IADE,CACG,YAAY,CAClB;AACH,KAHM,CAAP;AAIH,GALD;;AAMApB,EAAAA,MAAM,CAACC,cAAP,CAAsBG,UAAU,CAACa,SAAjC,EAA4C,KAA5C,EAAmD;AAC/C;AACR;AACA;AACA;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKP,IAAZ;AACH,KAR8C;AAS/CQ,IAAAA,UAAU,EAAE,KATmC;AAU/CC,IAAAA,YAAY,EAAE;AAViC,GAAnD;AAYA,SAAOnB,UAAP;AACH,CA5C+B,EAAhC;;AA6CAF,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["/*! firebase-admin v9.6.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceId = void 0;\nvar error_1 = require(\"../utils/error\");\nvar instance_id_request_internal_1 = require(\"./instance-id-request-internal\");\nvar validator = require(\"../utils/validator\");\n/**\n * Gets the {@link InstanceId `InstanceId`} service for the\n * current app.\n *\n * @example\n * ```javascript\n * var instanceId = app.instanceId();\n * // The above is shorthand for:\n * // var instanceId = admin.instanceId(app);\n * ```\n *\n * @return The `InstanceId` service for the\n *   current app.\n */\nvar InstanceId = /** @class */ (function () {\n    /**\n     * @param {FirebaseApp} app The app for this InstanceId service.\n     * @constructor\n     */\n    function InstanceId(app) {\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.instanceId() must be a valid Firebase app instance.');\n        }\n        this.app_ = app;\n        this.requestHandler = new instance_id_request_internal_1.FirebaseInstanceIdRequestHandler(app);\n    }\n    /**\n     * Deletes the specified instance ID and the associated data from Firebase.\n     *\n     * Note that Google Analytics for Firebase uses its own form of Instance ID to\n     * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n     * not delete Analytics data. See\n     * [Delete an Instance ID](/support/privacy/manage-iids#delete_an_instance_id)\n     * for more information.\n     *\n     * @param instanceId The instance ID to be deleted.\n     *\n     * @return A promise fulfilled when the instance ID is deleted.\n     */\n    InstanceId.prototype.deleteInstanceId = function (instanceId) {\n        return this.requestHandler.deleteInstanceId(instanceId)\n            .then(function () {\n            // Return nothing on success\n        });\n    };\n    Object.defineProperty(InstanceId.prototype, \"app\", {\n        /**\n         * Returns the app associated with this InstanceId instance.\n         *\n         * @return {FirebaseApp} The app associated with this InstanceId instance.\n         */\n        get: function () {\n            return this.app_;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return InstanceId;\n}());\nexports.InstanceId = InstanceId;\n"]},"metadata":{},"sourceType":"script"}