{"ast":null,"code":"var _jsxFileName = \"/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMapping.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // material ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, CircularProgress } from \"@material-ui/core\"; // components\n\nimport ErrorBox from \"../UI/ErrorBox\";\nimport ResultModal from \"../UI/ResultModal\"; // web3\n// import { useWeb3Context } from \"../../contexts/Web3Context\";\n// import { childChainPrimaryProvider } from '../utils/providers';\n\nimport { checkMapping, getMetadata } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormMapping = () => {\n  _s();\n\n  const classes = useStyles();\n  const [triggerModal, setTriggerModal] = useState(false);\n\n  const openModal = () => {\n    setTriggerModal(true);\n  };\n\n  const [exitAddr, setExitAddr] = useState(\"\");\n  const [mapped, setMapped] = useState(null);\n  const [mappedAddr, setMappedAddr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [checkBox, setCheckBox] = useState({\n    checkedA: false,\n    checkedB: false\n  });\n\n  const check = async e => {\n    e.preventDefault(); // console.log(\"here\", inj_provider)\n\n    try {\n      setLoading(true);\n      const res = await checkMapping(exitAddr, checkBox.checkedA, checkBox.checkedB);\n      console.log(res);\n      setMapped(res[0]);\n      setMappedAddr(res[1]);\n      setLoading(false);\n      openModal();\n    } catch (e) {\n      setLoading(false);\n      setError(e.message.substr(0, 70));\n      console.error(e);\n    }\n  };\n\n  const handleChange = event => {\n    setCheckBox({ ...checkBox,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultModal, {\n      mapping: true,\n      triggerModal: triggerModal,\n      setTriggerModal: setTriggerModal,\n      data: {\n        address: exitAddr,\n        msg: \"\",\n        mapped: mapped\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.formContainer,\n      onSubmit: check,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              children: \"Enter Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"0xd52a861...\" // className={`${errors.name ? classes.inputErr : \"\"}`}\n              ,\n              value: exitAddr,\n              onChange: e => setExitAddr(e.target.value),\n              required: true,\n              name: \"address\",\n              id: \"address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checkBox.checkedA,\n              onChange: handleChange,\n              name: \"checkedA\",\n              id: \"root-chain\",\n              className: classes.checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"root-chain\",\n              className: classes.labelSmall,\n              children: \"On Ethereum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checkBox.checkedB,\n              onChange: handleChange,\n              name: \"checkedB\",\n              id: \"testnet\",\n              className: classes.checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"testnet\",\n              className: classes.labelSmall,\n              children: \"Is Testnet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnContainer,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: `${classes.btn} ${classes.filled}`,\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: classes.loading,\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \"Check\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorBox, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormMapping, \"EpCzOsX5VpnplfvGYtfYQBoUYaM=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormMapping;\nconst useStyles = makeStyles(theme => ({ // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4px\"\n  },\n  checkbox: {\n    width: \"22px\",\n    height: \"22px\",\n    borderColor: \"#C7CBD9\",\n    marginRight: \"11px\"\n  },\n  labelSmall: {\n    fontSize: \"14px\",\n    color: \"#61677E\",\n    lineHeight: \"21px\",\n    fontWeight: \"600\"\n  },\n  btnContainer: {\n    marginTop: \"35px\"\n  }\n}));\nexport default FormMapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormMapping\");","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/src/components/Form/FormMapping.jsx"],"names":["React","useState","makeStyles","Grid","Button","CircularProgress","ErrorBox","ResultModal","checkMapping","getMetadata","FormMapping","classes","useStyles","triggerModal","setTriggerModal","openModal","exitAddr","setExitAddr","mapped","setMapped","mappedAddr","setMappedAddr","loading","setLoading","error","setError","checkBox","setCheckBox","checkedA","checkedB","check","e","preventDefault","res","console","log","message","substr","handleChange","event","target","name","checked","address","msg","formContainer","inputContainer","value","flex","checkbox","labelSmall","btnContainer","btn","filled","theme","overrides","formStyle","modalStyle","display","alignItems","marginRight","width","height","borderColor","fontSize","color","lineHeight","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, CircularProgress } from \"@material-ui/core\";\n// components\nimport ErrorBox from \"../UI/ErrorBox\";\nimport ResultModal from \"../UI/ResultModal\";\n\n// web3\n// import { useWeb3Context } from \"../../contexts/Web3Context\";\n// import { childChainPrimaryProvider } from '../utils/providers';\nimport { checkMapping, getMetadata } from \"../../utils/helpers\";\n\nconst FormMapping = () => {\n  const classes = useStyles();\n  const [triggerModal, setTriggerModal] = useState(false);\n\n  const openModal = () => {\n    setTriggerModal(true);\n  };\n\n  const [exitAddr, setExitAddr] = useState(\"\");\n  const [mapped, setMapped] = useState(null);\n  const [mappedAddr, setMappedAddr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [checkBox, setCheckBox] = useState({\n    checkedA: false,\n    checkedB: false,\n  });\n\n  const check = async (e) => {\n    e.preventDefault();\n    // console.log(\"here\", inj_provider)\n    try {\n      setLoading(true);\n      const res = await checkMapping(\n        exitAddr,\n        checkBox.checkedA,\n        checkBox.checkedB\n      );\n      console.log(res);\n      setMapped(res[0]);\n      setMappedAddr(res[1]);\n      setLoading(false);\n      openModal();\n    } catch (e) {\n      setLoading(false);\n      setError(e.message.substr(0, 70));\n      console.error(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    setCheckBox({ ...checkBox, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n      <ResultModal\n        mapping\n        triggerModal={triggerModal}\n        setTriggerModal={setTriggerModal}\n        data={{\n          address: exitAddr,\n          msg: \"\",\n          mapped: mapped,\n        }}\n      />\n      <form className={classes.formContainer} onSubmit={check}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <div className={classes.inputContainer}>\n              <label htmlFor=\"address\">Enter Address</label>\n              <input\n                type=\"text\"\n                placeholder=\"0xd52a861...\"\n                // className={`${errors.name ? classes.inputErr : \"\"}`}\n                value={exitAddr}\n                onChange={(e) => setExitAddr(e.target.value)}\n                required\n                name=\"address\"\n                id=\"address\"\n              />\n            </div>\n          </Grid>\n          <Grid item>\n            <div className={classes.flex}>\n              <input\n                type=\"checkbox\"\n                checked={checkBox.checkedA}\n                onChange={handleChange}\n                name=\"checkedA\"\n                id=\"root-chain\"\n                className={classes.checkbox}\n              />\n              <label htmlFor=\"root-chain\" className={classes.labelSmall}>\n                On Ethereum\n              </label>\n            </div>\n          </Grid>\n          <Grid item>\n            <div className={classes.flex}>\n              <input\n                type=\"checkbox\"\n                checked={checkBox.checkedB}\n                onChange={handleChange}\n                name=\"checkedB\"\n                id=\"testnet\"\n                className={classes.checkbox}\n              />\n              <label htmlFor=\"testnet\" className={classes.labelSmall}>\n                Is Testnet\n              </label>\n            </div>\n          </Grid>\n        </Grid>\n\n        <div className={classes.btnContainer}>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} ${classes.filled}`}\n            disabled={loading}\n          >\n            {loading && (\n              <CircularProgress className={classes.loading} size={24} />\n            )}\n            Check\n          </Button>\n        </div>\n\n        {/* error display */}\n        {error && <ErrorBox message={error} />}\n      </form>\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  // input and label styling is written in theme.js. Check the overrides object\n  ...theme.overrides.formStyle,\n  ...theme.overrides.modalStyle,\n\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"4px\",\n  },\n  checkbox: {\n    width: \"22px\",\n    height: \"22px\",\n    borderColor: \"#C7CBD9\",\n    marginRight: \"11px\",\n  },\n  labelSmall: {\n    fontSize: \"14px\",\n    color: \"#61677E\",\n    lineHeight: \"21px\",\n    fontWeight: \"600\",\n  },\n\n  btnContainer: {\n    marginTop: \"35px\",\n  },\n}));\n\nexport default FormMapping;\n"]},"metadata":{},"sourceType":"module"}