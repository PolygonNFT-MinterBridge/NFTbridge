{"ast":null,"code":"module.exports = function walk(obj) {\n  if (!obj || typeof obj !== 'object') return obj;\n  if (isDate(obj) || isRegex(obj)) return obj;\n  if (Array.isArray(obj)) return obj.map(walk);\n  return Object.keys(obj).reduce(function (acc, key) {\n    var camel = key[0].toLowerCase() + key.slice(1).replace(/([A-Z]+)/g, function (m, x) {\n      return '_' + x.toLowerCase();\n    });\n    acc[camel] = walk(obj[key]);\n    return acc;\n  }, {});\n};\n\nvar isDate = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Date]';\n};\n\nvar isRegex = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n};","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/snakeize/index.js"],"names":["module","exports","walk","obj","isDate","isRegex","Array","isArray","map","Object","keys","reduce","acc","key","camel","toLowerCase","slice","replace","m","x","prototype","toString","call"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAeC,GAAf,EAAoB;AACjC,MAAI,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA3B,EAAqC,OAAOA,GAAP;AACrC,MAAIC,MAAM,CAACD,GAAD,CAAN,IAAeE,OAAO,CAACF,GAAD,CAA1B,EAAiC,OAAOA,GAAP;AACjC,MAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB,OAAOA,GAAG,CAACK,GAAJ,CAAQN,IAAR,CAAP;AACxB,SAAOO,MAAM,CAACC,IAAP,CAAYP,GAAZ,EAAiBQ,MAAjB,CAAwB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/C,QAAIC,KAAK,GAAGD,GAAG,CAAC,CAAD,CAAH,CAAOE,WAAP,KAAuBF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaC,OAAb,CAAqB,WAArB,EAAkC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACjF,aAAO,MAAMA,CAAC,CAACJ,WAAF,EAAb;AACH,KAFkC,CAAnC;AAGAH,IAAAA,GAAG,CAACE,KAAD,CAAH,GAAaZ,IAAI,CAACC,GAAG,CAACU,GAAD,CAAJ,CAAjB;AACA,WAAOD,GAAP;AACH,GANM,EAMJ,EANI,CAAP;AAOH,CAXD;;AAaA,IAAIR,MAAM,GAAG,UAAUD,GAAV,EAAe;AACxB,SAAOM,MAAM,CAACW,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BnB,GAA/B,MAAwC,eAA/C;AACH,CAFD;;AAIA,IAAIE,OAAO,GAAG,UAAUF,GAAV,EAAe;AACzB,SAAOM,MAAM,CAACW,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BnB,GAA/B,MAAwC,iBAA/C;AACH,CAFD","sourcesContent":["module.exports = function walk (obj) {\n    if (!obj || typeof obj !== 'object') return obj;\n    if (isDate(obj) || isRegex(obj)) return obj;\n    if (Array.isArray(obj)) return obj.map(walk);\n    return Object.keys(obj).reduce(function (acc, key) {\n        var camel = key[0].toLowerCase() + key.slice(1).replace(/([A-Z]+)/g, function (m, x) {\n            return '_' + x.toLowerCase();\n        });\n        acc[camel] = walk(obj[key]);\n        return acc;\n    }, {});\n};\n\nvar isDate = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n};\n\nvar isRegex = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n"]},"metadata":{},"sourceType":"script"}