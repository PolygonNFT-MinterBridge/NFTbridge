{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst os = require('os');\n\nconst fs = require('graceful-fs');\n\nconst makeDir = require('make-dir');\n\nconst xdgBasedir = require('xdg-basedir');\n\nconst writeFileAtomic = require('write-file-atomic');\n\nconst dotProp = require('dot-prop');\n\nconst uniqueString = require('unique-string');\n\nconst configDirectory = xdgBasedir.config || path.join(os.tmpdir(), uniqueString());\nconst permissionError = 'You don\\'t have access to this file.';\nconst makeDirOptions = {\n  mode: 0o0700\n};\nconst writeFileOptions = {\n  mode: 0o0600\n};\n\nclass Configstore {\n  constructor(id, defaults, options = {}) {\n    const pathPrefix = options.globalConfigPath ? path.join(id, 'config.json') : path.join('configstore', `${id}.json`);\n    this.path = options.configPath || path.join(configDirectory, pathPrefix);\n\n    if (defaults) {\n      this.all = { ...defaults,\n        ...this.all\n      };\n    }\n  }\n\n  get all() {\n    try {\n      return JSON.parse(fs.readFileSync(this.path, 'utf8'));\n    } catch (error) {\n      // Create directory if it doesn't exist\n      if (error.code === 'ENOENT') {\n        return {};\n      } // Improve the message of permission errors\n\n\n      if (error.code === 'EACCES') {\n        error.message = `${error.message}\\n${permissionError}\\n`;\n      } // Empty the file if it encounters invalid JSON\n\n\n      if (error.name === 'SyntaxError') {\n        writeFileAtomic.sync(this.path, '', writeFileOptions);\n        return {};\n      }\n\n      throw error;\n    }\n  }\n\n  set all(value) {\n    try {\n      // Make sure the folder exists as it could have been deleted in the meantime\n      makeDir.sync(path.dirname(this.path), makeDirOptions);\n      writeFileAtomic.sync(this.path, JSON.stringify(value, undefined, '\\t'), writeFileOptions);\n    } catch (error) {\n      // Improve the message of permission errors\n      if (error.code === 'EACCES') {\n        error.message = `${error.message}\\n${permissionError}\\n`;\n      }\n\n      throw error;\n    }\n  }\n\n  get size() {\n    return Object.keys(this.all || {}).length;\n  }\n\n  get(key) {\n    return dotProp.get(this.all, key);\n  }\n\n  set(key, value) {\n    const config = this.all;\n\n    if (arguments.length === 1) {\n      for (const k of Object.keys(key)) {\n        dotProp.set(config, k, key[k]);\n      }\n    } else {\n      dotProp.set(config, key, value);\n    }\n\n    this.all = config;\n  }\n\n  has(key) {\n    return dotProp.has(this.all, key);\n  }\n\n  delete(key) {\n    const config = this.all;\n    dotProp.delete(config, key);\n    this.all = config;\n  }\n\n  clear() {\n    this.all = {};\n  }\n\n}\n\nmodule.exports = Configstore;","map":{"version":3,"sources":["/Users/pulkitmittal/nft-bridge/NFTbridge/node_modules/configstore/index.js"],"names":["path","require","os","fs","makeDir","xdgBasedir","writeFileAtomic","dotProp","uniqueString","configDirectory","config","join","tmpdir","permissionError","makeDirOptions","mode","writeFileOptions","Configstore","constructor","id","defaults","options","pathPrefix","globalConfigPath","configPath","all","JSON","parse","readFileSync","error","code","message","name","sync","value","dirname","stringify","undefined","size","Object","keys","length","get","key","set","arguments","k","has","delete","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst path = require('path');\nconst os = require('os');\nconst fs = require('graceful-fs');\nconst makeDir = require('make-dir');\nconst xdgBasedir = require('xdg-basedir');\nconst writeFileAtomic = require('write-file-atomic');\nconst dotProp = require('dot-prop');\nconst uniqueString = require('unique-string');\n\nconst configDirectory = xdgBasedir.config || path.join(os.tmpdir(), uniqueString());\nconst permissionError = 'You don\\'t have access to this file.';\nconst makeDirOptions = {mode: 0o0700};\nconst writeFileOptions = {mode: 0o0600};\n\nclass Configstore {\n\tconstructor(id, defaults, options = {}) {\n\t\tconst pathPrefix = options.globalConfigPath ?\n\t\t\tpath.join(id, 'config.json') :\n\t\t\tpath.join('configstore', `${id}.json`);\n\n\t\tthis.path = options.configPath || path.join(configDirectory, pathPrefix);\n\n\t\tif (defaults) {\n\t\t\tthis.all = {\n\t\t\t\t...defaults,\n\t\t\t\t...this.all\n\t\t\t};\n\t\t}\n\t}\n\n\tget all() {\n\t\ttry {\n\t\t\treturn JSON.parse(fs.readFileSync(this.path, 'utf8'));\n\t\t} catch (error) {\n\t\t\t// Create directory if it doesn't exist\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\t// Improve the message of permission errors\n\t\t\tif (error.code === 'EACCES') {\n\t\t\t\terror.message = `${error.message}\\n${permissionError}\\n`;\n\t\t\t}\n\n\t\t\t// Empty the file if it encounters invalid JSON\n\t\t\tif (error.name === 'SyntaxError') {\n\t\t\t\twriteFileAtomic.sync(this.path, '', writeFileOptions);\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tset all(value) {\n\t\ttry {\n\t\t\t// Make sure the folder exists as it could have been deleted in the meantime\n\t\t\tmakeDir.sync(path.dirname(this.path), makeDirOptions);\n\n\t\t\twriteFileAtomic.sync(this.path, JSON.stringify(value, undefined, '\\t'), writeFileOptions);\n\t\t} catch (error) {\n\t\t\t// Improve the message of permission errors\n\t\t\tif (error.code === 'EACCES') {\n\t\t\t\terror.message = `${error.message}\\n${permissionError}\\n`;\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tget size() {\n\t\treturn Object.keys(this.all || {}).length;\n\t}\n\n\tget(key) {\n\t\treturn dotProp.get(this.all, key);\n\t}\n\n\tset(key, value) {\n\t\tconst config = this.all;\n\n\t\tif (arguments.length === 1) {\n\t\t\tfor (const k of Object.keys(key)) {\n\t\t\t\tdotProp.set(config, k, key[k]);\n\t\t\t}\n\t\t} else {\n\t\t\tdotProp.set(config, key, value);\n\t\t}\n\n\t\tthis.all = config;\n\t}\n\n\thas(key) {\n\t\treturn dotProp.has(this.all, key);\n\t}\n\n\tdelete(key) {\n\t\tconst config = this.all;\n\t\tdotProp.delete(config, key);\n\t\tthis.all = config;\n\t}\n\n\tclear() {\n\t\tthis.all = {};\n\t}\n}\n\nmodule.exports = Configstore;\n"]},"metadata":{},"sourceType":"script"}